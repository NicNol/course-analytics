[
    {
        "Timestamp": "8/18/2015 12:10:52",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Easy class, especially if you've had exposure to SQL before. Project can be time-consuming but isn't overly difficult. It helps to have some experience with HTML and PHP before taking this class.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2015 13:02:30",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2015 13:18:06",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do NOT overlook the practice exercises provided with each lecture. If you can understand these without any help, you will be golden. ",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2015 14:23:38",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Brush up on your algebra if you haven't taken a math class in a while.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2015 17:04:36",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Proctored tests are very difficult. Assignments start off easy, but the last few can be very time consuming. Study the weekly self-checks and the summary exercises to do well on the proctored exams.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2015 13:15:30",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Ideally come into 161 with prior programming experience.  If not, be sure to do the readings and watch the lectures.  Doing the programming challenges at the end of each chapter in addition to the homework really helps with solidifying the material as well.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2015 21:42:38",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Watch the lectures before doing the worksheets and assignments, often part of the answers will be presented.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2015 7:01:21",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get ready for induction it's probably the most difficult topic in this class. And brush up on algebra it should be second nature.",
        "When did you take this course?": "FA 2014",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2015 17:44:19",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "My advice would be more relevant for students coming in with programming experience -- don't underestimate the first exam! It sounds silly, but without intending it, I had become really used to letting the compiler fix my errors for me. When it came time to do the test, where no compiler was there to catch my stupid errors for me, I was ill prepared and did much worse than expected.",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2015 22:46:17",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Just do all the work.",
        "When did you take this course?": "SP",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/25/2015 18:55:42",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Get ahead on the readings. Put the time in to understand the basics",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/10/2015 13:20:58",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "In the summer session the final was a bit tricky. I went into the final with an 88.5 (I was so proud of my grade). I studied really hard, made a superb cheatsheet and felt pretty confident / ready (just wanted to get it over with) going into the final. The final is rigorous in the sense that there were way too many questions for the time allotted. And, (perhaps I was burned out) the wording of the questions were like riddles(literally contrapostives and vague wording left and right! ). I ended up getting a B- in the class, I am still really proud of my grade! ",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "9/11/2015 14:48:03",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Have the worksheets out while you watch the lectures and fill them in as you go. Use the group worksheet time to solidify your understanding.\n\n  ",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/7/2015 2:47:30",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Exams are tough - don't underestimate them. Get a calculator that does the conversions for you. ",
        "When did you take this course?": "SU",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/10/2015 22:43:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice makes perfect",
        "When did you take this course?": "WI 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/10/2015 22:45:27",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Tests are pretty hard, and what ultimately ruined my A.",
        "When did you take this course?": "SP 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/10/2015 22:46:33",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "A good group/group leader makes this class much easier.",
        "When did you take this course?": "SU 2015 ",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2015 11:57:59",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first few weeks start off really easy and then it starts escalating with classes, arrays and pointers. Make sure you get the fundamentals down really well as everything builds upon the previous unit. Take time designing what your code will look like before jumping into the actual coding! ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2015 19:44:00",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take an intro to programming class on EdX or Coursera in any language and you'll be set.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2015 23:42:19",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2014",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/14/2015 4:25:54",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The final project is the only real assignment in the course. Everything else is fairly simple. Don't get lulled into a false sense of laziness. ",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/14/2015 10:48:39",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2014",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/14/2015 14:25:27",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "11/16/2015 12:41:57",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/26/2015 18:00:01",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Pay attention to details.  Grading is done by running scripts.  Points will be lost for simple mistakes like extra spaces etc.",
        "When did you take this course?": "Su",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/26/2015 18:02:34",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "She gives guides, use them.  Many of these questions will be on the tests.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/26/2015 20:28:43",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class is super boring and a chore to do the projects/assignments. Just pray you end up with a good leader and group.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/27/2015 5:48:44",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I would say this class is medium difficulty (fairly easy if you have previous programming experience, possibly difficult if you don't).  I don't feel the class is too bad, but there is a lot of info thrown at you, and you need to know a lot.  The projects ramp up in difficulty, with a few easier ones here and there.  If you are having trouble, you really need to start them early as lots of people struggle right up to the end - but you never see many people asking questions earlier in the week.\n\nThe first exam probably differs a lot from what people expect from a computer science exam, and a lot of people did poorly (learn how to trace code, learn the unusual cases and what type of errors there are).  Actually messing with the errors the and warnings the book gives might be good practice. The second exam is a bit more conventional.\n\nThe professor's communication is decent, but he neglects to fully answer questions sometimes, and frequently revises assignment requirements halfway through (again, get started early).  He is also very inflexible considering this is a course partly aimed at people pursuing a second career.\n\nThe book is decent, but has lots of errors.  The course notes are helpful, but also have errors.  The video lectures were practically unwatchable to me (accent, voice, pacing).\n\n\n",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/27/2015 15:16:41",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The old version was brutal. Be glad it's been changed. ",
        "When did you take this course?": "SP 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/28/2015 2:46:23",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Make sure you're up on your algebra. Find a good youtube channel to help you through it. The reading and the videos could be confusing or not great for providing an easier way to understand what you're actually meant to be doing. \n\nGrading on homework seemed haphazard at best. Try to do the example problems in the book while you're reading and as many in the exercise sets as you can. ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/2/2015 9:56:43",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Plan to have to practice the material on your own. Each new concept should be practiced thoroughly until you have mastery of it BEFORE attempting the assignments. This will allow you to attack the problem with tools you understand instead of learning as you go. Don't be afraid to break things and then go back a fix it. I restructured my bigger programs a couple times each because they sucked my first go through.",
        "When did you take this course?": "FA 2014",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/2/2015 21:04:37",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Work hard, work early! Rooker is a weird guy, things are always vague and confusing. If you're confident in your abilities, starting late can be an advantage because you have the benefit of everyone else clearing up the confusion. But, you need to be confident that you'll finish on time. The group work sucks, and the groups are too large for the amount of work that is given.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/3/2015 16:06:44",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you can find time, create little projects on the side to help reinforce the concepts. From what I hear, it's a lot better than past quarters but there is still a lot of material to cover. Didn't use the book a lot, mostly did searches for online documentation and questions. ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/8/2015 18:40:58",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Class was a bit unorganized - lectures didn't align to the reading very well.  If you're new to programming,  don't want until due dates to compile your assignments on the school server.  Your local environment may work fine despite underlying issues.  ",
        "When did you take this course?": "WINTER 2014",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2015 8:57:04",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take control of your group.  The second project took way more time than it should of because a couple of people became foremen rather than teammates. ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2015 16:43:15",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Pair with a hard class.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2015 18:32:55",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Find other resources outside of the class to learn javascript and node.js. I signed up for a udemy course (Rob Percival Build 15 Websites) since it was only $10 when I purchased. The assignments aren't too difficult but definitely get started on them early. ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/11/2015 4:41:21",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "fa2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/11/2015 17:25:02",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Be active in your group. Use slack to communicate.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2015 10:42:00",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Complete as much extra credit as you can. Start writing \"cheat sheets\" for each week and you'll have an easier time writing them for the midterm/final. I rushed through the weekly summaries and could have scored better. The lectures are sort of off with the assignments but things started to make a lot more sense to me after the 3rd week. Each point will count towards reducing your stress for the final week where there will be a programming assignment, weekly summary, quiz,  and final due so get the easy ones while you can :)",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2015 8:28:57",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The study guides for exams are spot on, make sure to know everything on the study guide. Homework is the hardest difficulty. Quizzes are easier than homework. Exams are easier than quizzes. If you know homework and quiz questions really well you will breeze through the exams no sweat.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2015 12:59:26",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Be prepared to use outside resources for better explanations.  The lectures are tied to the old book (Rosen) instead of the required book (Epp).",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2015 16:10:52",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2015 16:49:45",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class really isn't that bad.  For a person coming in with a non stem background it could be a challenge because a lot of the concepts are...weird.  Especially when you get into recursion and Iterations.  Make use of the tutors, don't underestimate their ability and worth.",
        "When did you take this course?": "SP 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2015 16:56:41",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "save this class for a known hard class.  Known hard classes are 290/325/372/and potentially 496.\n",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/15/2015 16:56:53",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "save this class for a known hard class.  Known hard classes are 290/325/372/and potentially 496.\n",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/18/2015 12:16:15",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This was easier than I thought (got an A). You might want to save this to pair with the tough classes (e.g. I heard 325, 344)",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/21/2015 11:20:11",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Skip all the lectures and office hours held by the prof. Get all of your lectures from the MIT OCW material. Skim the book, then go to YouTube to fill in the gaps. Don't use Python for the TSP project. If you use the Subtract and Conquer/\"Muster\" method in place of Iteration for solving recurrences, you won't be marked down on tests.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/22/2015 11:29:15",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/30/2015 12:22:58",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Stay on top of homework. it is critical",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/5/2016 11:49:38",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The lectures were way more useful than the book.  Don't get lulled into a false sense of security the first few weeks. It starts off slow,  but the last few weeks were rough. Make sure to understand each new concept,  because the final homework is fairly comprehensive. ",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/8/2016 16:09:02",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Assignments and worksheets take time, be careful and prepare well.  Debugging can be challenging due to longer programs.  Significant amount of material covered.  ",
        "When did you take this course?": "Fall 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "1/24/2016 20:19:18",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/28/2016 20:28:26",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Fa 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/6/2016 15:17:50",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/13/2016 10:47:32",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/15/2016 17:23:33",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Try to get ahead on readings before the course begins. Try to code as many of the review questions for each chapter as you can. Pay attention to the lecture notes, in addition to the textbook.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/23/2016 14:35:05",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/27/2016 16:04:44",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/3/2016 3:01:17",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/5/2016 17:55:38",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice different problems in the book, not just the ones for the homework",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/13/2016 16:16:29",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Do really well on the programs and you don't need to stress about the exams much.  ",
        "When did you take this course?": "WU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 9:43:11",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 11:23:54",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start early and do not waste time.  Seriously this stuff will take you longer than you think if you don't have prior experience.  \n\nI'm a very successful student in this program and this is one of the most intensive courses I've taken in terms of project requirements and self learning.  My family feels like I've been gone for a few months because I've spent multiple evenings and weekends shut-in to my office.\n\nPrepare to teach yourself.  A lot.  Even you have a question for the instructor, don't wait to ask it.  He sometimes can take days to answer on Piazza.  Send emails.  This feels less like a \"learn-about-a-topic\" course and more like a \"prepare-you-for-the-real-world\" course.\n\nGood course with good \"real-world\" usefulness but not easy like many others.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 11:36:02",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class is largely focused on group work.  Be a good group member, and it's an easy A.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 12:54:16",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Make sure you put some thought and effort into your group project and follow directions, as grading on that can get a little picky. It's easy to slack because the rest of the class doesn't require much work or complex thinking. Watch out for trick questions on tests and quizzes.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 14:40:48",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The group work is mostly useless. The \"book\" for this class is a joke. I'll be planning to take a free online data structures course to brush up, because this class fell really short in terms of making me feel like I could go into an interview. The homework code feels hobbled together, and often contradicts itself. Be sure to keep current with the discussions on Piazza because many people will hash out the issues ahead of time.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 16:33:25",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 17:17:55",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the summary exercises, as they are pretty much exactly what is on the weekly summaries and quizzes.  Midterm was taken from quizzes.  Get a calculator that can translate back and forth between bases; you should know how to do it yourself, but you do NOT want to waste time calculating back and forth or risk making a mistake.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/15/2016 17:54:59",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first 5 weeks are incredibly hard. The tests are hard. The homework's hard. The projects aren't too bad. I recommend using Python for most of the projects. And the lectures are pretty bad; use your google-fu.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2016 20:01:37",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 7:50:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 8:59:06",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Don't wait until the last minute for the group assignments.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 10:17:15",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Don't be dick to your group mates. Be a good member and get your shit done. The class is easy, as is the project. You just have to slog through it (if you find it as painfully boring as I did, you might enjoy it).",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 10:57:20",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Not as difficult as most people lead you on to believe.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 10:58:43",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Pace yourself.  I feel as if I learned a lot, but most of the learning came from Stack Flow and You Tube Videos which is both a good and bad thing and probably a contributor to why you had to spend a lot of extra time on this course.",
        "When did you take this course?": "Winter 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 12:13:46",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Watch all lectures and take a lot of notes and do the reading. Coding projects are not too bad but can be difficult if you get stuck since there is pretty much no information outside the book and whats covered in lecture. Midterm and Final are pretty intense but if you spend a lot of time making your note card, you will be OK",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 18:53:01",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Pick a vision statement for Project A that you like, and pick a vision statement for Project B you could see yourself actually writing. If you end up as a client (a group picks your statement) don't be a dick by being picky and demanding. Know that Project B is a class assignment about learning Agile, so define the goal end product but don't get demanding on platform or tech. If you ask for a mobile app but the group doesn't know how to make one, they can't spend time following the agile process when they're frantically trying to learn enough about mobile dev in a 2-3 week period to make your stupid app. 40% of project B is delivering \"substantial working code\". Don't be a dick.",
        "When did you take this course?": "WI2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2016 22:14:01",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2016 2:04:15",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start your project early because it is pretty time consuming. Also dont feel bad if you're not understanding sql right off the bat. I didn't really understand it until I made my own queries with the project.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2016 8:16:45",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The key to this course is having a group where everyone participates, if you have a good group you shouldn't have to spend more than 4-5 hours a week on the material. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2016 10:50:37",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Bone up on your algebra before taking this class and make sure you're familiar with summations.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2016 14:05:37",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The class is not terribly difficult with the ability to take quizzes unlimited number of times.  Just practice your queries early and often.  Play around with it a lot.  Start on your final project as soon as you feel comfortable as having it done 3 weeks before deadline was a huge boost to my time.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2016 23:00:18",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Dont do the final project all at once. Spread it out in to chunks and get the free feedback.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/18/2016 18:30:36",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The concepts are new to many people - if there's anything you don't completely understand, be sure to clear it up by asking questions on the forums or with the TAs, because you need to really understand the concepts to do well in the course.\n",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/18/2016 18:49:45",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the book and practice writing lots of code both in an ide and away from the computer.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2016 16:03:26",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Professor is difficult to understand. Little useful feedback. Overall easy. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/19/2016 16:04:45",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Socket programming coursework is challenging. Otherwise on par with average coursework. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2016 2:32:08",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Estimating time spent for this class is difficult.  I spent minimal time on this until the group project at the end. Be adamant that your group uses languages/frameworks that the majority are comfortable with.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/20/2016 2:40:08",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Highly mathematical...depending who you are that could be a very good or bad thing.  ",
        "When did you take this course?": "WI 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2016 16:24:43",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do the extra credit if you can",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2016 17:55:25",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Stay on top of the schedule for the project parts and reference the examples provided in the class resources section in Canvas. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2016 20:12:33",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This is an easy class. 60% of your grade will be determined with the Final and Project so make sure to plan accordingly.",
        "When did you take this course?": "WI 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2016 11:41:38",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Coordinating the group projects can be difficult. Make sure to communicate early and often. No Midterm. Final was easy if you make sure to study the starred slides. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2016 11:54:35",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class isn't particularly difficult unless you struggle with grasping abstract concepts when it comes to logic. Mostly I found that it was time-consuming. While the work was not tough most of the time, doing all of the homework was tedious and took the better part of a weekend day to complete the homework and quiz for the week. I would suggest not procrastinating and spreading the work out during the week to make room for any other class you might be working on it or free time. ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2016 11:58:59",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Be cooperative and communicate with your group.  There is no programming and the content does not present any real challenge, so do not become apathetic toward the individual assignments.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/25/2016 13:39:31",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class has a lot of busy work but is also not difficult. Be prepared to do a lot of work if you're stuck with horrible teammates.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/29/2016 1:18:55",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Don't panic during quizzes and exams.  ",
        "When did you take this course?": "FA2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2016 2:24:37",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2016 10:21:45",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Class is setup like 271. Weekly summaries, weekly graded discussions, 2 quizzes, 2 programs, 5 labs, midterm, final. All interesting stuff. The labs use Wireshark which is easy to install and use. The 2 programs are fun but take some time. There is the option to use Java, Python, C or C++ for the 2 programs which is nice to be able to code in something other than C! ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2016 4:30:00",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 16:05:43",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Stupid. If you take this class late in the program you'll likely learn very little. Review your C syntax as most of your coding will be in C up until the final assignment which will all the sudden be in Java and require Junit. Our program doesn't expose us to Java at any point so read up on it if you're unfamiliar with it, and read up on Junit as well.\nTotally easy class though. I lost only 5 points on the midterm.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/17/2016 17:47:46",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The second project can be far more time consuming than the first, so plan accordingly!",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/17/2016 17:50:59",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 17:59:32",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "sp2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 18:01:02",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Drink a lot of alcohol while you're taking this course because it'll help ease the pain that you're dropping almost $2,000 for such a shitty course. ",
        "When did you take this course?": "Spring 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 19:27:12",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "It's a Wolford course, so the lectures are insufficient and sometimes near-worthless. Class is heavily front-loaded so try to keep up with everything for the first few weeks. Get as early of a start on the project as possible and you should be fine.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 19:34:31",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Since the class starts off slow, dig into some extra JavaScript resources on the side, that way you're better prepared when the class ramps up later in the quarter.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 19:43:39",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take 344 first--it makes this class much easier.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 19:43:50",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take 344 first--it makes this class much easier.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 20:19:14",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Ask the TA's for help. Not a lot of outside resources to rely on. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 20:32:46",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Bring a pillow.  This one is a snoozer.  You'd have to be a complete retard to not get an A in this class.  There is one group project that is hardly enough work for a group.  You'll work mostly in C but a bit in Java/Eclipse so brush up on those if you haven't worked with them in a while.  Or don't.  You'll have plenty of extra time to brush up during the course.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 21:14:06",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The midterm and final were decent. You need to be able to hand trace code otherwise you'll have a rough time on the exams. The last two coding assignments were challenging, everything else was pretty easy. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2016 22:05:11",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The first program is easy. The second program is much harder than the first, so don't underestimate it. CS 372 is like Assembly except with extra help on exams (no credit quiz reviews!) and less coding. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/17/2016 23:17:06",
        "What Course Did You Take?": "CS 419 - Software Projects",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Fairly light work, but you need to get on things early. Pick the project you are most passionate about and run with it. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/18/2016 0:06:43",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 1:13:48",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Do homeworks, and memorise quizzes for the tests ",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 2:50:43",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "For the exams practice code tracing, the theoretical stuff is way less important. Score as high as you can on the homeworks so you have wiggle room for the exams. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 4:19:53",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 7:08:18",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The time estimate given is more for Project B than for Project A.  Your team for Project B needs to be able to communicate since you work in pairs coding the assignment, so when one pair is done the next pair needs to know what the first one did.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/18/2016 7:16:14",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The first 3 weeks( of the 10 ) are the hardest. Find a study group to help learn the hard material with and double check your homework answers with.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 9:20:43",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Watch lectures on 2x speed. Use Google, the book is standard in programs across the country so it's easy to find related material presented in different ways to get a better understanding. Find group members if possible, it'll be more likely everyone participates which makes the four projects a lot easier.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 10:13:19",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Projects are graded generously but take the most time so I would put less effort into those and more effort into the homework to the point you can do it without looking anything up.",
        "When did you take this course?": "sp2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2016 18:24:16",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The projects are crazy involved!  There are discussions each week - do them, they are easy points!  Very similar structure to 271.  ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2016 8:10:24",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Work ahead.  Read the text (it's very good).  Start the programming homework assignments early, those are the biggest portion of your grade.  Make sure that your code compiles and runs on the FLIP server, it doesn't matter if it runs on your home computer.  If it doesn't run on FLIP, you will get little or no credit.  Also turning in an unfinished project on time is better than missing the deadline completely.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2016 16:07:30",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2016 17:09:35",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The 2nd half of the course is harder than the first. I also found the office hours more helpful than the lectures. The book is hard to read but if you fully understand those you're golden.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2016 23:26:06",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The tests test your ability to create a notecard with answers to the weekly objectives, not your understanding of the concepts.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2016 6:54:33",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2016 8:24:10",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do very well on the homework and you won't have to worry about the final. I got an A by getting As on homework and only a 60% on the final. I don't test well, so I always try to make up for it with homework.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2016 9:13:53",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SPR 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2016 13:17:03",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Pretty straightforward class. The homework is pretty useful as you do get your hands dirty with MySQL. Final exam did not require us to use relational algebra or create diagrams. Could do better to have a midterm or something to prime you for the final exam but the class really winds down after week 5-6, even if you are programming your final project. \n\nRecommend pairing this with a harder class, unless you really want to make your final project look pretty.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/21/2016 16:20:19",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy class. Was not very useful, and I am not confident at all about testing despite getting an A. ",
        "When did you take this course?": "Sp2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/23/2016 11:20:04",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I actually enjoyed this class a lot. I thought it was really well taught. Start early on assignments, MASM is a beast. Look over the practice questions posted with the lectures. Quiz and summary exercise questions will be similar. Test questions will be as well, if not taken directly from the quizzes/summary exercises. Make good use of your note sheet for exams, there is a lot of information to know, but largely nothing surprising.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/24/2016 6:35:43",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "You must do outside exercises and practice to succeed in this course. The lectures alone will not be enough to really understand the material. Make sure you fully understand a concept before moving on to the next week's material. Do not just copy and paste code, as this will make things very hard for you later on. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/25/2016 18:55:30",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/26/2016 2:08:39",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It starts off strong with interesting and time consuming projects on testing. Then  eases up in the second half. Would pair well with a course that's back-heavy",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/26/2016 11:44:40",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Don't anticipate much feedback from TAs.  If you have time, I'd recommend doing the practice program assignments in the book. Definitely practice code tracing before the exams, that's really most of the exams.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/27/2016 14:41:01",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Use the exercises to prepare for tests",
        "When did you take this course?": "Sp 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/28/2016 17:01:28",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Reading the material before watching the lectures helped my understanding.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/29/2016 19:58:28",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Very straightforward class.  You can take the quizzes as many times as you need to get 100%.  Assignments are straightforward.  Do not wait to start the project at the last minute, especially if you are not familiar with php or mySQL.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/30/2016 16:08:35",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the book and look at example code ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/5/2016 12:57:02",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Do all the self study worksheets, take quizzes 2x times, plan for last 2 assignment being hard",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/5/2016 22:01:03",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Do not use a grace day until after the midterm, the assignments get quite a bit harder after that. Also, make sure you know the quiz material well, the midterm and final are pulled from those questions, which are quite a bit tougher than the weekly assessments. \nIf you have time make sure to do the extra credit. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/2/2016 16:48:33",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "- Start early and often on assignments.\n- Make sure you understand pointers (there is a group collaboration review of these but that is halfway through the quarter. You start using pointers immediately.)\n- Ask questions when you have them. Many assignments/labs have misinformation in the instructions. (i.e. left over from previous quarter or just plain wrong)\n- Watch lectures and read chapter before starting on homework\n- Always check your code for memory leaks using valgrind, you lose quite a few points if you have leaks.\n- Don't panic. Meditate. :)",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/3/2016 14:48:37",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This is a bruiser of a class if you fall behind. I ended up behind and focused solely on the programming assignments and ended up with a horrid grade. Don't fall behind. Watch the lectures 2-3 times and study hard for the mid-term and final. ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/6/2016 23:00:54",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I'm not really sure why this class has such a rep for being difficult.  The course grade is a syllabus quiz, 4 programs, and a final; that's it.  While the lectures do not hand everything to you to complete the assignments and you will need to do some research, it is more than enough to point you into the right direction  \n\nThe grading scripts are provided for all assignments but 1; this is usually ~90% of your grade.  The remaining 10%ish is from your code style and comments.  Comment a lot and keep notes on what references you used.  Probably due to the class size and the automated nature of grading, feedback is minimal and grading seems to be extremely lenient, which is unfortunate if you are looking for helpful feedback where you can improve.  Overall, the class is as straightforward as can be without doing all the legwork for you, but programs might take extra time if you don't understand the content.\n\nThe lecture about zombie processes is mildly embarrassing to watch; try not to cringe too much.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/7/2016 5:26:43",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/10/2016 17:32:46",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get started ahead of time on the final project, and get familiar with PHP and MySQL if you can before taking the course.  The final project is the only time consuming part of this course, otherwise it's pretty easy and straightforward.  You can additionally take the quizzes as many times as you'd like which helps pad your grade.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 8:56:04",
        "What Course Did You Take?": "CS 419 - Software Projects",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This course is about what you expect. A quarter long group project with fairly high expectations on the total content your group delivers. You're graded subjectively on the final product which means individual grades/contributions aren't as important. Establishing a solid group dynamic where everyone contributes and does a good job is key to success. Brewster is a great mediator and is very practical though, so don't be discouraged. Definitely doable in Summer if you put in ~10 hours a week and keep on schedule.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 8:57:44",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Make sure to tackle all of the group assignments at least a few days before they are due!",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/16/2016 9:25:41",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The TAs feel like robots - expect no help there. Redfield very helpful as an instructor - if you have an issue, take it to him.  The summaries are easy, quizzes slightly more difficult - there are lots of opportunities to screw up.  The Midterm and Final were fairly difficult.  I did well (at least on the midterm, no final grade yet), but it took a lot of studying and there was some fairly obscure stuff, and a few 'gotchas' that really took understanding the nuances very well.  The programming wasn't bad, but some of the extra credit could be a little tricky.  A lot of people struggled with stuff, I would definitely start early.  The accelerated pace seemed a bit much once or twice, otherwise manageable.  It would be nice if they went back and adjusted the materials somewhat to correctly reference other assignments, as they were all swapped around.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 9:33:16",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Project 1: Website, (choose GAE if your not familiar with creating a DB; use this all term)\nProject 2: Start thinking about a mobile application you want to develop that incorporates a NoSQL DB and relations between objects in your DB, (i.e. One object is a Book, another is an Author, and another is a reader. An author can write many books, a reader can read many books).\nProject 3-Final: Build on your idea through the term.\n\nWolford doesn't tell you any of this early on and it royally screwed me as the term went on. Lots of long nights.\n\nAre you a strong coder in python, javaqscript, and HTML? Cool, this class should be fun and not too bad, (just time consuming). If you're none of the above, (like myself), prepare for a stressful term. Totally doable as the TA's are generally awesome and lenient in their grading. As long as you hit all the requirements for the assignment, they'll give you full credit, (you have up to a day to turn it in after the assignment is due for up to 80%).\n\nOne issue is that some of the requirements aren't always clear. Once again, TA's are lenient. I turned in one assignment where I didn't meet the requirements, (misinterpreted what Wolford wanted), and the TA let me turn in the assignment again after he had graded it when I brought up my concerns. Totally fair.\n\nSpeaking of Wolford, you'll find his lectures are totally useless aside from scrapping code together for your DB. He basically just talks about what his code does. That's it. Be prepared to do a lot of your own research.\n\nPros: you end up learning a lot. \nCons: you're paying ~$1k to teach yourself how to create a mobile application. ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 9:36:30",
        "What Course Did You Take?": "CS 419 - Software Projects",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Make a really good design plan do you stay on track. Communicate with your team regularly",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 9:37:52",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Everyone says it but whether or not your get started early on your final project will determine if the class is \"totally doable part time\" or if it is \"almost no work until the last week where you literally die\". If you have previous SQL experience, you will likely find this easy to complete. I did not know any PHP going in and did not struggle to finish the final project at all. There are examples provided that basically outline how you can do all the tasks you need to do in PHP so you can easily learn the parts you need and apply them. ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 9:39:58",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Try to write pseudo code for all the algorithms don't lean on your group or you'll do poorly on the tests, ask your team for help if you don't understand an algorithm.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 9:55:02",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Read chapter 11 gaddis before starting this class. Will be a monster, monster help. \n\n-Get started on the Labs as soon as they're assigned. Even if it looks like Egyptian, just get started on it. Write out some pseudocode, design doc, whatever. \n\n-Write C++ every day. Every damn day. Even if it's a int main with a while loop asking for input. Just something to keep you going and your brain alive. \n\n-Comment your code as you go (in terms of function headers and file headers). Will save alot of time. \n\n-Get started on the Doodlebugs assignment as soon as it opens. This is when the class generally shits their pants. \n\n-Don't be overwhelmed by the group work, just try and contribute early on. \n\n-Take the design documents seriously. They can really help.\n\n-Pray to fuck you don't get assigned Niza Volair as a TA. Because she is literally a Nazi. \n\n-Pray you to get a badass, cool TA like Harlan Waldorp, who grades on the important stuff and not the ass kissing factors (ie, writing a 15 page design document). \n\n-In general this class seems fairly TA-dependent, which is quite unfortunate. \n\n",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 10:02:20",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Don't skip over anything. Even the thing you think is so obvious and won't be on the final, could be.\nStart early on the videos each week and watch them at 1.5-2x speed (a suggestion from prior students that really helped!).  They're long and speeding them up almost makes them sound normal speed.  Attend the review sessions, office hours if you can. Some weren't helpful, but others were - especially the midterm and final study sessions.  \nThe textbook was helpful in the beginning, but not so much later on. Still a good resource to have though -- (note:  it's available online here and there..). \nJust relax and really try to enjoy the class. It wasn't as bad as everyone made it sound. Try to find real world applications for the concepts you're learning - that helped me a lot.  Good luck!",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 11:00:36",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "All the assignments can be piggy backed on top of each other, keep this in mind on day 1. The last half of the class has the most work, start on stuff early.  ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 12:01:15",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you're looking for more of a \"software engineering\" experience out of this CS program, then this class will feel like an idiotic waste of your time every step of the way. But take heart: there are actually a few useful nuggets sprinkled here and there.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 12:16:24",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start the programs EARLY!  Do not fall behind!  Brewster is a fantastic teacher, ask him questions.  ",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 12:25:44",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Too much group work. The most difficult part of this class is trying to stay interested. I program back end stuff at work, have no interest in design, and am frustrated I had to take this course.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 13:10:38",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start the assignments EARLY! This class is structured like CS271, so take the Summary Exercises and Lecture Exercises seriously.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/16/2016 13:11:28",
        "What Course Did You Take?": "CS 419 - Software Projects",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This is not a class to slack in -- get as much done as early as possible. Be sure to be on your teammates to get stuff done. ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 13:34:48",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get started early and brush up on your C programming. The lectures do a good job of giving you the tools you need for each project but there will still be C related programming that the textbook can fulfill for you.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 13:40:55",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The projects may look easy, but they are harder than they first appear. Don't wait a day or two before its due.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 13:43:07",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 14:30:58",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start on the final project as soon as possible. It's not that difficult but it does takes time to do.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 14:40:23",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Study study study. Everything builds on each other, so if you don't get something from the previous week it will be difficult to catch up. The homework takes several hours. Start early. The projects take several hours. Start early. Make sure you actually understand the concepts. If you look up an answer and say 'oh that makes sense', make sure you know why it makes sense. The class lectures are pretty terrible so try MIT, geeksforgeeks, etc for content. The best way I found to learn the material is do as many example problems as possible. Reading is good but I found it took too much time and I didn't get much out of it. I't's a tough class but I made it through and so can you!",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 15:39:50",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "It's very challenging and you need to put in the time on the projects. START THE PROJECTS EARLY or you're gonna be screwed. Brewster is the best professor there is and this is probably the best/funnest course in this program. ",
        "When did you take this course?": "SU2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 15:43:47",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Course is not terribly difficult until the final project and the final exam.   Study the details.  Exam is mostly Javascript trivia, be sure you know AJAX html requests backwards and forwards. Lots of 'select all that apply'.  Did worse on this final than CS 261 & 271...",
        "When did you take this course?": "SU2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/16/2016 16:11:27",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start the project as soon as you can. If you're using PHP, start learning the language first day of class.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 16:17:42",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Do the stanford databases course.  If you understand that one, this one should be fine.  If you decide to stray from the guidelines of the final project, you better know what you are doing.  \n\nMode analytics also offers a decent SQL course on analytics.  Try it.  Honestly, watch lectures on 2x speed, watch and understand stanford databases course, and if you want to have a deeper understanding, read the book by elmasri.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 17:31:00",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 18:01:29",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is a good companion to a demanding course. It's a waste of time otherwise. 90% of what you'll need to know is in the videos. Look at the example assignments when putting together your group projects.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 18:41:41",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start looking into cloud and mobile platforms well before class starts.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 19:23:21",
        "What Course Did You Take?": "CS 419 - Software Projects",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The real lesson you learn in this course is group management and working together. Keep constant communication with your groupmates! If you're having a problem, reach out as soon as possible to your team members of the class.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 20:00:04",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 20:21:02",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The lecture/recitation videos from MIT's two algorithms courses will be more useful than the ones done by OSU.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2016 22:13:29",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Make sure to spend time understanding the homework problems. Try some similar problems with answers in the back of the book if you are struggling. Exams were very similar to practice exams/problems provided. ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 0:30:26",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Build rapport with your project group if you can. My project group was more helpful for questions than the hw groups were. The hw groups felt like one more hoop to jump through, notably because of the requirement to post multiple times over multiple days for each homework.\n\nLastly: python is your friend. In 261 I enjoyed using C, but python was so smooth for the projects, even with feeling fuzzy about the language at first.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/17/2016 3:14:45",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 8:04:33",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This course is organized the same way 271 is. I found the content to be easier, but challenging. This class should be taken after 344 as currently 344 has socket programming assignments and completing those before the class will make it significantly easier.\n\n\nThis is one of the best designed classes in the program. Expect workload to be even and constant - like 271 there are no surprises. I took this class by itself in the summer.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 9:29:00",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Do not pick iOS unless you are fluent in Objective-C.  Be realistic, even seasoned developers need weeks to ram up in Objective-C, and you just don't have that kind of time while taken other classes.  The instructor should have warn students, who have no monile experience, off iOS. Other then that, I think this is a great class.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 12:12:00",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "su 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 19:23:13",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "As everyone will tell you start the projects as early as possible",
        "When did you take this course?": "Su 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 20:24:38",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start the projects early. They are involved so give yourself time to really absorb the lecture material and do lots of Googling. Professor Brewster is very involved and supportive, and the final seemed very fair.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 22:13:01",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Su2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2016 22:13:29",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Su2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2016 5:37:26",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Complete each requirement one step at a time and make sure it works before moving on to the next.  This way you won't run into big problems and have to start over from scratch.  You'll also at least have parts of the assignments complete to be able to get patrial credit if you are unable to get everything to work as it should.  Start assignments early.",
        "When did you take this course?": "SU",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2016 8:22:15",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course was awesome!  The design and organization were a breath of fresh air when compared to 162 / Rooker.  Everyone says this class is one of the hardest, but I did not find it to be that way.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2016 13:10:22",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Once you get to joins make sure to practice them a lot to really understand how they work and to cement your understanding of foreign keys. For the final project start on it right away, the real coding videos the last couple of weeks are very beneficial. ",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2016 1:14:51",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Early Objects is a great textbook. Take time to do the reading and do a great job on assignments and you will have a good grasp of the material, which will buy you room to miss a few tricky questions on the tests. I did have some prior programming experience so the material came easier to me, as there was less completely new material.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2016 1:17:04",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Summer course was rough. Topics are not tough to learn, just make sure you have a good grasp of pointers. Just the condensed amount of work in the short time frame made for no weekends/social life to complete the assignments/labs and study for tests each week. I was easily spending 30 hours per week to get an A.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2016 14:36:01",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Do the practice problems in the textbook",
        "When did you take this course?": "Say 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2016 15:21:00",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Course organization is dismal and the assignments are barely graded.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2016 12:17:43",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I took it as a summer class, so the pacing might be different vs a normal quarter. The pacing is great, until the last 2 weeks. The last 2 weeks prepare to get wrecked, there were 2 projects and a paper due. It's a very open do whatever you want however you want style class, so if you don't like freedom and need lots of instruction, you might have a hard time in this class. Additionally, I have been playing around making android apps for 6+ months when I took this class, so I didn't have to learn as much.",
        "When did you take this course?": "SU 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/31/2016 6:18:25",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There is a lot of group work, so anything you can do to make sure your group works well together, with everyone happily contributing, will make this class (even) easier.",
        "When did you take this course?": "SU",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/31/2016 6:20:16",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Starts off slower and ramps up (in difficulty) towards the end of the term. Work hard in the beginning of the term and take advantage of open note quizzes.",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/4/2016 16:03:17",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/7/2016 17:38:21",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Don't bother with Wolford's lectures unless you want to use Python/GAE/Windows phone (WHY?!?!) .  I used Ruby on Rails, Heroku, and iOS Swift and it was a lot of work but totally doable.  Make one project out of your assignments rather than a new project for each assignment and you'll have your final project mostly done! ",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/8/2016 6:17:06",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Redoing the worksheets was one of the most helpful things for me for studying for the exams",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2016 16:47:19",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start early on the final project",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2016 6:41:43",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first few weeks are cake - the last few weeks are time-consuming and the content is very detailed and complex (for me). Work ahead if you can (modules may not be available ahead of time), and, if you have extra time, learn about node.js and express ahead of time. The two recommended texts are useful, and the JavaScript text 'Eloquent JS' is available online for free.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2016 14:59:29",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The material is not too difficult, but with other obligations you may find that you just need more time to let it really sink in.",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2016 21:19:10",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Study as much as you possibly can. Unless you are naturally gifted in the material its going to take some work. That said use as many outside resources as possible (search MIT, Cal Tech, etc) as the actual course content is lacking.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/14/2016 11:12:16",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This term was the first one using Java instead of C, so the hardest part at the start of the class was getting familiar with Java since it is not taught in the intro classes anymore.  The class teaches about testing, so you do not have to write functioning programs, you have to test ones that should be functioning.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/15/2016 0:18:29",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Not a difficult nor easy course. Just very time consuming so plan accordingly. ",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2016 15:13:51",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Like the other Redfield/Paulson class (assembly), this class is similar in structure and has tons of information.  You can use notes on the exam, but be prepared to cram lots of information on it.  I'd advise taking 344 before this because the last project in 344 has a lot of code which can be reused for this class' projects.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/31/2017 13:03:14",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I had not taken a math class in 10+ years. I did terribly on ALEKS, but I went through most of the modules. I came out with a B+ and was thrilled. The quizzes and HW are basically the tests. Show all of your work-she is very generous on a couple points here and there. ",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/20/2017 13:15:15",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/21/2017 5:39:20",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Spend extra time learning the pointers.  These will be a major component of 162.  The workload in this course is far less than 162, so make sure you use the extra time to really understand the topics, peruse chapter 11 in Gaddis, and dive head first into double pointers (indirection.)\n\n161 tests are basically T/F and code tracing. Be prepared to trace code without a computer/compiler.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/21/2017 23:22:57",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/22/2017 9:37:17",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Be comfortable with basic algebra and learn properties of integers and rational numbers. Overall, the grading in the class was pretty easy, but some people have a hard time with logic and proofs. Fortunately, everything is covered in the textbook, so if you can remember the proofs from there, you will probably be fine.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/8/2017 21:13:57",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/8/2017 21:14:54",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2017 8:03:23",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "- Alcon likes to ask \"gotcha!\" questions on the exams.  Be prepared to parse and pay close attention to simple, but tricky questions.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2017 10:56:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2017 13:21:12",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The first half of the class doesn't have much activity, things ramp up a little in the second half of the class.  You will likely be doing a web based project, for Project B so having completed 290 and 340 before taking this class is a good idea.  Be prepared though if Rooker is teaching it.   Here are some things to watch out for:\nDiscussions - Rooker expects you to comment regularly in the discussions he posts for credit, so put a few comments in every couple of days\nGroup Evaluations - put comments in for every thing, and don't forget to evaluate the customer.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2017 20:34:29",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Programming the algorithms up in Python and trying them out helped my understanding a lot.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2017 20:46:10",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take control of your group as soon as it is assigned.  Initiation communication on Google Hangouts (set up a group chat).  Set up file structure in Google Drive.  Do not leave anything to chance.  Drive the performance of your team.  Ask them why they've been radio silent for 6 days.  Badger them to complete their tasks.  Don't be shy.\n\nReview the starred slides weekly for just a few minutes.  By the time the final comes around you'll be ready to go.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2017 21:19:44",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2017 2:35:15",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "wi 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2017 7:53:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The hardest part of this course is proofs, especially by induction. Quiz and exam proof questions are frequently taken straight from the book.\n\nThe professor provides plenty of practice exams, and they are very closely aligned with the real exams.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2017 9:21:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Not a very difficult class. Induction can be a difficult concept at first but there are plenty of outside resources and example problems. The grading is also very lenient on exams.",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2017 10:41:00",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Debugging and stepping through a program helped keep track of registers",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2017 17:31:29",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Larger labs and projects. Make sure you understand pointers and how memory leaks work.",
        "When did you take this course?": "Winter 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 4:34:54",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 5:29:48",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Don't really need to do more than skim the readings and watch the short videos.  Just write more than you think you should and you can probably get an easy A.  Include a little material from the readings/lectures and you should be golden.  Find a project you want to work on early and start getting familiar with it.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 8:35:42",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If the course still uses PHP for the final project, use it.  You can reuse the example code provided which makes it easier.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 11:23:24",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Reading isn't required but you will have to do some googling on things not completely covered. I lucked out and had a very active weekly discussion group which contributed to my learning immensely so if that doesn't happen be the one to ask questions!",
        "When did you take this course?": "WI2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 12:03:03",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't be afraid to use outside resources. The lecturer did a poor job of editing his videos. \n\nHe frequently misspeaks and has to clarify what he's saying, and it's almost always in the middle of a complicated concept. Goodbye, train of thought.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2017 12:07:53",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Well organized but midterm, final, and last few quizzes are tough.  Make sure to double-check your calculations carefully on these.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 12:14:36",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Try to come in with a group already formed.  The course is mostly in C, writing test cases for various cards and functions for the game Dominion, written in C.  The code base is insanely buggy.  Keep your local repo handy, because the entire class uses the same repo, so you can imagine how many times stuff gets overwritten.  The final project is writing test cases in very simple Java.  I didn't study Java at all and did well.  Some of the individual assignments (which are in C) are long and tedious.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2017 14:38:24",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Be very active in trying to find requirements because the class is not formatted well. Make sure to read email for random updates from the professor.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2017 14:45:31",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2017 17:32:23",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't stress. Material is confusing but they grade fairly easily. Follow the study guides and practice tests and you'll be fine. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 18:24:11",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Harder than 271, but doable. Weekly meetups with your group members. More coding needed than 271. Recommend you do all the worksheets and know them very well.",
        "When did you take this course?": "W2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 18:33:37",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 18:41:20",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is hard, but well structured and fair.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 20:51:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do all the homework problems seriously. Samina takes so many exam questions from hwk and prior quizzes. Really just memorize how to do the problems and the exams should be okay. Also almost any assignment or quiz question can be found using the power of Google.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 21:26:40",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Just do the homework and have it open when u take quizzes",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 22:48:55",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Pointers pointers pointers. This class is heavy on pointers so be sure to know your pointers.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2017 22:58:16",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2017 6:45:20",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Wi 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/23/2017 8:13:35",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "You should be able to get 100 on all programming assignments if your code works. Read the book-it is pretty good. Watch Bucky's videos for stuff that doesn't click. Alcon is great on Piazza(very dry, don't let this discourage you). If you know anything about any programming language, you should ace this course. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2017 9:01:15",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I spent 10 hours a week on the capstone project - work diligently and it isn't a big deal!  Try to have a group picked out ahead of time so you keep the group drama to a minimum.  ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2017 9:28:00",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The class starts off fairly challenging but levels off towards the end. If you have never done proofs before, the class goes over direct proofs, proof by contraposition, by contradiction and by (weak and strong) induction. The proofs were the most challenging part for me.\n\nIf you have not taken any math classes in a while, I would suggest practicing some algebra using the ALEKS program. Things like factoring, combining like terms, properties of different number types and other math concepts are useful for proofs. \n\nIt is doable just put in the time. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2017 14:54:17",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2017 17:29:38",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Refresh you algebra.",
        "When did you take this course?": "WI",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2017 20:08:25",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Winter 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2017 18:02:07",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Study study study.  Technically difficult but great class.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2017 1:49:51",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Go into this class with groupmates you know will work well.",
        "When did you take this course?": "WI2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2017 10:09:02",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I had a very interesting relationship with this class. Sometimes I loved it, other times I hated it. Looking back, I really do enjoy the material. I didn't find that this class get harder/easier after a certain point in the course - I think it remained at the same level of difficulty for the most part. I read somewhere that induction is the hardest part of the course, but unfortunately that was not the case for me and many others in the class. Permutation and combinations were very challenging (2nd to last week).\n\nYou'll find that most weeks are challenging since everything is new stuff but then you look back and study for the midterm/final and you're a pro at all the stuff before. Induction becomes fairly simple after a few weeks of letting it sit in your head, so don't sweat it if it's taking you a while to grasp it immediately. \n\nRegarding the lectures, for some weeks they were good and others they weren't. I found them more useful in the beginning , very weak during the middle, and better the last weeks. You'd think the practice problems they go over in the lectures would help you in the HW but for most weeks they don't. Apparently the lectures were made while they were using another textbook. Be prepared to watch youtube videos - plenty of great content on there. TrevTutor was especially helpful for me. ",
        "When did you take this course?": "Winter 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2017 15:39:45",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "-The course consists mainly of weekly writeups (in the form of blog posts) of the previous weeks materials (week 3 writeup is on week 2 material). The 1st assignment was like a proper lab submission and there was a single graded discussion post and then we just did writeups for the rest of the term. Basically each week there is about 1-2 labs worth of work to complete and then you make a blog post about what you did, what you learned, anything interesting you found and submit a URL to that post. Yeah, that is pretty vague instructions but that's the nature of this class. I would do a writeup of the portion of the lab(s) that I was able to complete for that week and include a bunch of screenshots and commands I used. Sometimes I was not able to get through all of the labs but I still received full credit on my writeups. The Final consisted of recording a ~30 min presentation on a cybersecurity issue of your choice.\n-You get as much out of this class as you want. The professor is a ghost. If you are interested in CyberSecurity you have the opportunity to learn a lot, sort of an intro to many different areas of cybersecurity. If you don't give a shit, you can half-ass the writeups and still do fine. I thought the lectures were very interesting and different from the usual OSU format. They were all guest lecturers, different security professionals, most of whom worked at Intel Security and the videos are of the actual lectures given on campus. As a result, there is quite a lot of lecture video each week (about 1-2 hours) where they discuss the materials as well as go over the labs. I only thought the last one on Mobile Security kinda sucked, the rest I enjoyed. If you are interested in the material, and not OCD anal retentive when it comes to instructions or prompt grading (we received grades only 3 times the whole quarter, in week 8 covering weeks 1-7, week 10 covering weeks 7-9, and the final grade), I think you will enjoy this class because it is a class where you can learn a lot AND that is low stress at the same time. I think that is rare in this program. \n-McGrath is sometimes not clear with his instructions and is stubborn. Ask for clarification on the forums if you don't understand something. Some students may be tempted to offer reasonable suggestions for improvements (such as using a single place to post all course information rather than multiple websites or posting all TEACH submission links at the start of the term). He will not listen to you. Regardless, there is NO POINT in being argumentative with him on Piazza. This class is very easy and all you are doing is poking a sleeping bear. \n-TopHat is the \"textbook\" for this class. It's basically the equivalent of Canvas where videos and assignment due dates are posted. He will not allow students to download the videos. There is no point in paying for the year long access because you won't have access to the Virtual Machines so just choose the cheapest option which was the quarter long access for $60.\n",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2017 6:58:22",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This one is a sneaky-lot of work IMO. I learned a lot, but it's also currently light on the lessons so you need to dig into some good self learning. I think it's being redesigned tho so stay tuned...",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2017 11:13:01",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice is key in this class.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/27/2017 15:24:40",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It's Rooker, so be prepared to try to predict what he wants. Assume anything mentioned, either in passing or on a requirements doc, is a requirement. Participate regularly in the group discussions, or you will lose points. Be a good group member. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2017 19:16:19",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Some weeks I spent less than 2~3 hours on assignments, some weeks you had to spend a little more, thus averaging somewhere between 6 and 10 hours.  I pulled through due to prior math knowledge and doing quite a lot of ALEKS prep before the course.  This class is one where if you took it by itself, it would seem like it was too slow or too little.  However, a solid time investment should get you a 100% final grade.  The grading is very lenient, just make sure you do the work and put in a little genuine effort.  People made a big deal about induction, but it wasn't that bad.  Weak induction is pretty easy, but there are some tricky things you can do with algebra that aren't taught very well.  Strong induction is probably one of the more difficult sections in the course, but it isn't that bad.  Put in a few extra hours and you will be fine.  Definitely use some outside resources to supplement the book.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 2:24:25",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Took course during redesign period. Course itself is very easy. If your group cooperates it's best to split up each submission to minimize the workload for any one person. Final, no cheat sheet. No midterm. 4-5 short, timed quizzes which can be taken 2x",
        "When did you take this course?": "WI 17",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 8:11:47",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I did the restructured version of the class. Class was split into half cloud half android programming. All but one of the home works were project based. As long as you stay on top of the material the class is pretty easy.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 11:21:26",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 11:36:03",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Keep ahead in the reading, practice extra problems in checkpoints and the review questions, learn pointers very well. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 15:31:41",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 19:07:12",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This course is a bit annoying because there is a lot of subjectivity when grading. Make sure to participate more than you think you should in the discussions or be prepared to be counted off. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/28/2017 20:28:25",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Go through the lectures...they're boring (duh, they're lectures) but they're informative and will give you plenty from which to start your assignments/project. Start your project early, work on it in small bits when you finish each week's normal assignments...if you wait until you get a \"break\" from assignments to do it...you will be using time better spent studying for finals. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 22:33:02",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It's easy to get A's on all of the assignments (the last couple are harder) and in the class doing the bare minimum, but you won't learn much. If you are interested in web dev, you'll have to put in extra work than what it required. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2017 23:31:48",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Make sure you know Induction!",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/29/2017 5:43:43",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Certain topics are challenging later on in the quarter. Read the book. That is your best resource. They grade easily and give a lot of partial credit ",
        "When did you take this course?": "Winter 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/29/2017 8:14:13",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "It's been said before, but the course is seriously weighted to the last few weeks so after mid-term, make sure to stay on top of your other classes.  The final is not a gimme, but it is not difficult to go in to it with nearly full marks from the rest of the assignments.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/29/2017 20:03:51",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The class is really open ended and Brewster is very encouraging. Enjoy it and create something for the resume!",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/29/2017 20:57:40",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Use the answer keys from the quizzes for how to format your answers. It can be a little confusing how to format the homework based off of the lectures and book, but you get a demo quiz every week whose answers will make it clear on how you should format everything.\n\nMost people struggle a little with induction, but the trickiest parts of induction just involve manipulating equations with algebra. It's definitely the hardest homework, but don't psych yourself out over it and you'll figure it out. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/29/2017 22:19:56",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do all the homeworks, even if they aren't worth a whole lot, because it will help you understand how to approach the quizzes. This class is all about recognizing patterns. I'd say this class is easy if you have decent algebra skills and are good at memorization. This class is definitely doable otherwise, as all the math/logic tools you need to approach most questions are taught/reviewed during the course.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/30/2017 1:15:41",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/30/2017 11:33:49",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course was challenging but doable. Like everyone said, start the projects early. I had to turn in one project late because the entire weekend was not enough time. Brewster is the best professor and this is by far the best course of the program. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/1/2017 7:17:07",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I spent more time setting up the client side of my final project than on the actual database parts. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/2/2017 0:52:10",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Good class. ",
        "When did you take this course?": "Winter 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "4/2/2017 7:24:42",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This course was very light. The biggest thing for me was choosing a project to work on. That was a little intimidating, but once I choose one I was good. I would also recommend choosing an active project so you have other people to talk about the project with. This class would be really easy to pair with a more involved course, I wish it wasn't the only class that I took.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/6/2017 13:02:33",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start early, read Piazza daily, and don't be afraid to Google. This class WILL take you more time than you're used to from 161. Also - the first few weeks are the worst, really make sure you've set aside ample time for those first few weeks.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/17/2017 17:15:29",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/4/2017 22:14:55",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/24/2017 20:11:55",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I hadn't taken a math class in 10 years and I struggled. Ended up with an A, but it took a lot of effort. Use the study guides for the tests and review all of the questions listed. If you understand those, you'll do just fine.",
        "When did you take this course?": "WI 2016",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2017 10:25:05",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "There's a lot of memorization.  The weekly summaries require a bit more digging than the summaries did in 271.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2017 15:20:04",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start your projects early. Some of the projects can seem overwhelming, so break them up into doable chunks and work steadily on one or two pieces a day.  Try to finish each project at least a week before it's due, so that if you misjudge your ability to complete all the requirements, you'll have the time you need to finish.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2017 18:27:16",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The programming assignments were not bad or difficult, however Alcons midterm and final were seriously on another level.  For the midterm the whole class , including myself thought we did well, however our grade showed otherwise. Make sure you hand trace and practice writing code, and take some time to read the test questions, dont just breeze through them.  \n\nThe only reason why I am giving the class a 4 rating is because of the   exams.  ",
        "When did you take this course?": "winter 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2017 9:57:55",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "There is a lot of lecture content, so what it early otherwise you wont have enough time for the projects.  The projects are large but the requirements provided are detailed.  Just code towards passing the grading scripts - don't worry about extra features.  Take advantage of the Slack room (details are on the subreddit) because Brewster is active in there in addition to Piazza",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2017 21:58:46",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The first project is not too bad. Make sure everyone is on board with the IDE, timelines, and coding for the second project. Don't overcomplicate it.\n\nRooker is very hands off of this class and discussions are graded sporadically. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 5:07:50",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Extremely backloaded workload with the database assignment coming right after the how-to guide. Minimal engagement from the instructor, so Slack is probably your best bet for getting help.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 5:36:18",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The projects are pretty easy just be sure to know the why behind the results. This is probably the most interesting course I took. You can tell Bailey is passionate about the subject which helps keep you engaged.",
        "When did you take this course?": "SP2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 5:50:49",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Focus on collecting as many points as you can from the HWs/Discussions/Projects. They add up quickly so that you don't need to do crazy well on the exams to pass the class.",
        "When did you take this course?": "SP",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 8:53:06",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Brush up on your algebra before taking this. There are some really complicated algebraic operations, especially with the strong induction.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 9:57:32",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 10:13:02",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 14:10:09",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Set up a schedule with your group of times to meet. Breakup all the portions of the assignment so that everyone knows what they are responsible for. Communication is key. ",
        "When did you take this course?": "SP 207",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 16:12:10",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2017 20:32:30",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 10:03:20",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It's not difficult, but the assignments can take some time if you want to do them well.",
        "When did you take this course?": "SP17",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 10:29:49",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "1)Avoid this course even if you are interested in UX/UI. 2)If you must take it, I hope you are assigned a good group. I got insanely lucky and was put in a group with the only other person I know personally in the program, plus 2 other really great group members. If you have that you'll be golden and the class should take no more than 4 hours a week at a stretch. 3)The final is short answer & multiple choice on the reading and lectures...and it's 25% of your grade. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 11:15:59",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't give up if you don't understand a concept at first exposure.  I'd often have to watch the lectures and read the book a couple times to let the information really sink in.  After you have a decent understanding, most problems are fairly straightforward.\n\nGrading on the quizzes and exams is very fair, so be sure to show work or exhibit some level of understanding even if you can't get a final answer that you believe is correct.\n\nThe practice quizzes and exams are extremely similar to the actual versions, so use those as guides when preparing.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 11:53:09",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Review pointers A LOT. You will need to figure out a menu function, input validation function and makefile in week 1 so if you can learn those in advance - do so!",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 15:44:24",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is a logic course, not so much a math course. Review basic algebra and you'll be ok",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 15:54:36",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get a chegg.com subscription for help with answers. Do more than just the assigned homework questions: do the practice quizzes, do the previous homework(s), do the example problems that have answers in the back of the book. The midterm is harder than the final. Review fraction multiplication, division, addition. Class gets hard around week 4, 5, then really calms down around week 6, 7 and 10. YouTube has better video tutorials than the class. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 16:38:20",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start the final project ASAP. Take the time to understand advanced SQL queries. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2017 20:47:34",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Github familiarity is a must. Learning JUnit, Eclipse, gdb, gcov, and how to write basic unit tests will be helpful if you want to prepare. Otherwise, light to mid amount of work. Course content is not too difficult.  ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2017 5:36:41",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Overall very fair, son't be intimidated by the first 2 weeks",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2017 6:43:21",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take this class if you just want to get 4 elective credits and want to spend as little time as possible doing work. Its not really worth the tuition cost but if you just want credits to graduate, its worth it.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2017 7:23:09",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take 290 first.  The final project for 340 is a lot easier if you've already done the final project for 290.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2017 9:05:59",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class is a joke. Just make sure you get ALL the requirements and follow them exactly. Do not deviate in the slightest and you should do well.",
        "When did you take this course?": "SP2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/15/2017 23:01:26",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Find outside sources. I learned very little from the course lectures. Download a chrome plugin to listen to the lectures with 3x speed. She speaks very slowly... Only watch the lectures to get an idea of what to look up/learn yourself and/or see if she mentions anything regarding exams or group work. I did not spend much time on this course compared to other, but I was flying by the seat of my pants the entire term. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2017 4:47:27",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Try not to procrastinate. The work isn't terribly difficult, it's just constant and there's a lot of it. The first two weeks ramp up really fast! If you feel like dropping, wait it out. It seemed like things got a bit easier after getting through those initial weeks.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2017 16:30:58",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Queries can be really weird. Practice and it makes it not so bad. If you haven't already taken 290 i suggest php for the final project. ",
        "When did you take this course?": "Sp 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2017 8:26:27",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2017 22:04:31",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The workload is decent, be prepared to read chapters or familiar with sample codes from textbooks. Usually every week covers 2 chapters. \n\nRead w/ Video materials, you will find the hw is alright.\n\nBe aware of more reading materials in the first four weeks.\n\nThe Professor is always on the Piazza, usually take him 30 mins to response, if you got questions on your codes.\n\nMost TA are reasonable with grading.\n\n",
        "When did you take this course?": "SP2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2017 6:43:44",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get your homework done on time and it will be super easy to get an A.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2017 11:23:21",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Enjoy Brewster's teaching!  He's great.  Assignments take a long time, but you are given everything you need to complete them successfully.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2017 9:21:57",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I had to do extra examples each week to prepare myself for quizzes and exams. If you do well in assignments and quizzes, exams will be easy.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2017 12:56:38",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do you assignments a week early so you can get TAs to help you through any bugs you encounter. Look up an Express tutorial on youtube",
        "When did you take this course?": "Sp 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2017 13:48:40",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Just make sure you participate in the  discussion groups you are assigned.\nMost assignments are writing papers, which are to be done by group.\n\nMake sure you are on the same page with all your group members.\n\n",
        "When did you take this course?": "Spring 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2017 8:49:30",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class isn't conceptually difficult, but the A isn't guaranteed. The bulk of your grade comes from a large project with multiple turn ins which you complete with an assigned group. Don't wait till the last minute to finish the project submissions, some require a good amount of work and writing. The final versions of your UI prototype need to be interactive (clickable), the examples are given as a PDF document containing intradocument links. Late in the term (it was already too late) we were told we had the option to create our prototypes using HTML/CSS (nothing fancy because it must run locally) and submit a zip file with all our pages instead of a PDF. I highly highly suggest doing this if anybody in your group knows HTML/CSS. You can host your prototype from your own ONID or any free service for testing/project galleries and just submit the zipped files for the project turn ins. Dealing with a hyperlinked PDF is  frustrating!",
        "When did you take this course?": "SP2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2017 11:01:13",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Really pretty easy. I found the textbook to be boring and hard to focus on. Last assignment requires a synthesis of server side and client side coding.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2017 16:50:57",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you have ANY prior webdev experience, ANY at all, this class is a breeze. If you're thinking about getting an override to take it with CS162, I'd say do it because it was a nice, low-effort class that enabled me to focus more time on CS162.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/21/2017 9:46:06",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Some topics are explained poorly or not at all. Get started on How-To and database projects ASAP. Course is extremely back-loaded.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/23/2017 14:07:48",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Have fun and enjoy a class taught by someone who truly cares",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/25/2017 19:25:34",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is heavily front-loaded, you'll be learning a ton in the first 3-4 weeks and then the pace slackens significantly.\n\nI highly recommend all the extra credit! On early projects it will get you ahead for your future projects, and the later ones it gives you a chance to learn things that aren't emphasized in the course but are interesting, like writing code for the floating point unit.",
        "When did you take this course?": "SPR 17",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/26/2017 10:34:24",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I thought the class was front loaded and hits you pretty quickly with some tricky work while you get used to looking at the theory and language of algorithms.  The second half of the class was much easier since there is only so much depth you can go into linear programming and NP problems in an undergrad class that does not require a lot of math background.  \n\nThere seems to be a lot of people who recommend looking at other sources of information to get through the course.  I did not find that necessary.  I only used the textbook and lecture videos to do all the work.  The lectures are long and sooooo slow, but I would caution against watching them sped up too much because they are the best resource for completing the assignments.  I found 1.2x or 1.3x speed was best.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/26/2017 12:27:07",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "the quizzes are literally verbatim from the lectures",
        "When did you take this course?": "SP16",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/14/2017 4:37:15",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2017 14:53:25",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy class overall, the first part is C and the second part is Java, but you don't really need to know Java to actually do anything.  Look on Piazza for people participating to find a group, which hopefully makes it more likely to be good.  This term people were posting right at the deadline looking for teams.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2017 12:54:22",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is not too difficult, just  if you make sure you understand all the concepts and can do all the HW problems without difficulty. All of the mid-term and final question will be drawn form the HW and quizzes so there will  be no surprises. Grading is very generous too so at least try to solve every problem on the tests for partial credit. While not too hard the HW and reading do take a lot of time so make sure you don't get overwhelmed especially if you are taking other classes.",
        "When did you take this course?": "SUMMER 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2017 18:51:55",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Tests are very easy, generously graded, and often times repeat questions.  The homework and quizzes are what you need to focus on doing well on.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 8:43:20",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "In the summer you need to dedicate one to two days MORE than you think you need. Debugging and searching for documentation online is what you will be doing most of the time",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 11:00:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice a lot of example problems",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 13:13:43",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 13:32:48",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Always start projects and labs as early as possible.  Get a plan outlined before starting to code.  Get very comfortable with Pointers.  ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 13:53:04",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Exams pretty much determine your final grade for this course.  Carefully read the book + course material and look for material that could be possibly be used as trick questions.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 14:40:08",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 15:57:44",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start your projects early and test them often. Get ahead of the reading so you can focus on your programs. ",
        "When did you take this course?": "Summer 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 16:05:04",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start the assignments early",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 17:14:54",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Read the programs early and think about them while watching the videos, reading the book or just out doing something unrelated. Always think about the program. Study up on Github it is a great backup tool. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 17:45:20",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "It's a BS, fluff course. Use it to knock off a couple credits or bolster your GPA. Don't expect to actually learn anything.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2017 19:17:02",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The entire class is a group project with the same group.  It could go either way.  ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 2:24:50",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 3017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 6:05:52",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Tips are to actively try to find good group members because that will make or break your class. Also, I would highly recommend trying to find a project that uses languages and frameworks you are familiar with so you can start building right away instead of learning how to do basic stuff. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 8:42:23",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do lots of practice problems. Check out trevtutor and Eddie Woo on youtube as both often explain things better than the text. Grading is super lenient so don't stress too much. As long as you take the course seriously and do lots of practice problems, an A is very attainable (our class average was a 90%!). ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 8:49:37",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Brush up on algebra.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 9:34:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is not particularly hard, but does involve quite a bit of course work. \n Read the assigned readings and supplement with the videos provided as needed, talk to your peers (Ehsan and the TAs are available but pretty hands off unless you email them - take advantage of them as resources if you're really struggling).  Look into YouTube videos (TrevTutor and Eddie Woo).  Know your basic algebra - it will help you understand induction. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 13:47:05",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I spent a lot more time on this class than should of been necessary because out of my 4 group members I was basically the only one doing any work. If you need up in a group like that just be prepared to do the work without them, because if you try to wait them out and worry about them having time to help (when they wait till the last day to do so) you'll end up with a lot of work and a little time to do it. If you have a fully functioning group it really isn't much work.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 13:49:54",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 13:52:21",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Don't expect to learn ER diagramming/MySQL from the class lectures. If you're unfamiliar with MySQL commands, find outside resources. Start the final project early.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 15:51:39",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the assignments very carefully and get clarification from the professor when needed. The course is very disorganized and it's easy to miss points on things that are not clear.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 15:59:01",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The last project requires you to combine DOM interaction and server-side javascript to create a database tracker. It feels clunky though because you don't really use a framework other than vanilla JS for client-side and node.js for server-side.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/22/2017 16:42:43",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There is a lot of writing.  Good communication between team members is key, make sure everyone knows what is expected for each weekly assignment.  We used google docs to write our reports, google sheets for scheduling and google hangouts for meetings.  We left tagged comments for each other in the doc.  Although they aren't prerequisites, it's good to have taken 290 and 340 before you take this class.  The last third of the course focuses on implementing a software project that you are given at random, and many of them were web apps.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 16:52:04",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Check out Udemy's Web Developer's Bootcamp. They really do not go deep into anything but the assignments are not too difficult. Unfortunately, that means that you do not get a lot of good practice. This does not count for the final project. It is way more complex than any other project. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 18:11:38",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start reading the book as soon as possible",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 20:32:35",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "In my term, there were two textbooks (the required textbook and an optional textbook). If your CS 225 term is like mine, definitely use both textbooks. Sometimes one textbook explained certain concepts better than the other textbook. Practice the homework problems, previous term homework problems, the demo quizzes, and similar problems from the textbooks. CS 225 was difficult for me at first, but I got the hang of it by constantly practicing problems and rereading the required readings. Make sure you review how to do algebra especially if math is not your strength. Also, don't wait until the last minute to do assignments and quizzes.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2017 21:17:34",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start early! The minute..... the SECOND each module begins, start working on the stuff!",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2017 7:00:35",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Starts easy, racks up later. Learn the concepts of stacks, passing parameters, array syntax clvery well. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2017 13:15:38",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The course is being redesigned. My term was the first term in which Rooker combined what used to be Project A and B into a longer project with weekly report submissions (similar to 352). Overall, still a relatively easy class...but be prepared to do a lot of writing. The entire class is group-based, so your experience will depend a lot on the kind of group you end up in (randomly assigned). For the final, don't just study the starred slides, go through all the power points. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2017 18:02:35",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Practice just doing random stuff with databases using SQL. If you can understand how SQL syntax works then you basically will get an A in this class. Don't wait until the last second on the final project. I also HIGHLY recommend taking CS 290 (Web Development) before taking this class. There is no point struggling with CSS/HTML/JavaScript/JSExpress, websites, servers, and more ALONGSIDE the SQL work",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2017 18:42:15",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is very easy. The midterm and final were open book/notes/internet and tested you on the application of things you already learned. Not difficult. The most annoying part of the class is working through all the buggy code and weird requirements they give you to get assignments working. Still, this class is pretty light and can definitely be paired with more difficult courses.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/24/2017 8:55:14",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/25/2017 9:10:56",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you're confused, do the lab and the lab helps a lot on clearing things up.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/26/2017 6:59:35",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Final project builds on project from 290, about 15-20 hours/week last two weeks or so due to working on the project.",
        "When did you take this course?": "Summer 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/29/2017 0:31:06",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/29/2017 13:35:04",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Do not underestimate this course. It is very well organized but if you fall behind early (like I did) you will find yourself struggling. Keep on top of the material and give yourself plenty of time for the assignments. Once I began dedicating the time needed for this class I improved. The practice exams are helpful for the real exams. The book and lectures are great resources. He gives demo code when going over new topics, I highly suggest downloading them and running with the debugger to understand what is happening in the code. ",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/30/2017 9:36:17",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start early on projects",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/30/2017 15:31:29",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "If you start early on assignments you will do fine",
        "When did you take this course?": "SU",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/3/2017 7:09:58",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the book.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/3/2017 11:18:00",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Do the homework and watch the lectures. Don't both reading the book. The real explanations are in the answered questions in the back of the book.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/4/2017 18:21:45",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class seems really difficult at first. We had weekly homework and weekly quizzes. She provides you with previous homework assignments and previous quizzes to help you study. Make sure you study and understand all of this material and you should do fine. The grading is VERY generous.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2017 17:15:56",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Pick a project that you think you'll really enjoy working on!",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/30/2017 21:22:44",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/16/2017 3:23:42",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Marking is very generous, just make sure to justify your answer. If on the midterm or final exam you use the wrong formula but still work through the problem, you will likely still get 9/10. Quizzes are mc but are open book and are very similar to the assignment questions. Lectures are alright, but youtube teaches most concepts better. The textbook is written in a more mathematical and rigorous style than required for this class. Use chegg if possible, but remember the academic policy and keep in mind that you paid to learn this stuff, and it is useful in program design.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2017 12:22:51",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Read the book",
        "When did you take this course?": "FA2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2017 12:23:38",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Learn Pointers and Dynamic memory before starting the class.",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2017 12:25:18",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Study the quizzes and exercises",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/18/2017 19:07:18",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/19/2017 20:17:15",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/23/2017 19:34:38",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Look at outside resources (MIT Lectures, etc), definitely try to understand the jist of dynamic programming before starting the class.  The exams and homework are pretty fair, but you'll have to work hard.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/2/2017 11:40:49",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy if you have programming experience. The assignments are too easy compared to 162. Taking 161 + 162 is better preparation if you've never programmed before.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/4/2017 6:42:34",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't stress the first couple weeks.  It comes at you fast and with seemingly endless amounts of information.  Spend your time on the stuff in the Summary Exercises, that's really what you're expected to know.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/4/2017 22:40:25",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Study the practice quizzes, read the book, and enjoy a well-organized course!",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2017 15:43:39",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class has a unique workload.  Every week, there is just 1 lab due.  However, every 2 wks, there is a lab, project, and test/group project due.  Make sure you start on the projects early on, preferably the weekend the assignment is given. Even if you have programming experience, expect to spend about 20-30 hrs/week on this class.  Learn how to use GIt early on.  Use Slack + Piazza for questions.  Never fall behind in this class.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2017 18:14:33",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Good course - especially easy if you have a CCNA",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2017 19:36:40",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "You need to work every day. Many assignments are not complicated, but the number and length of assignments is HIGH.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/8/2017 7:34:46",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "A lot of this class depends on how good your group is. Don't spend time reading the textbook.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/8/2017 18:04:14",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Stay in the books, do all the review questions (in the book and in the lectures). Overall well organized and put together. ",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2017 10:55:38",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I believe your group will be a big determiner in how you feel about this class. The material learned here is vital to separating you from the posers so do give it the attention it deserves.  The concepts require a good deal of abstract thinking, but if you give some effort you should be able to get an A pretty easily.  Reading chapters is not important.  I never read anything after the midterm and did great in the class.  Literally everything you need for the assignments/exams is in the videos/worksheets.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2017 8:14:09",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Study c++ syntax",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2017 8:17:10",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Study c++ syntax",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2017 15:12:55",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The majority of this class isn't very time consuming -- however, this course is incredibly back heavy. The final project is incredibly time consuming and you will not be able to finish it if you put it off. I recommend finding a good partner to do the project with and starting early to make the work more bearable. A lot of the SQL concepts didn't fully click with me until the end when reviewing relational algebra, so don't worry if it seems overwhelming at first. This class has a good way to pad your grade a bit with the quizzes, as you can retake them until you get a perfect score. There isn't a lot of homework, but some of the assignments can be time consuming so don't put them off.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/18/2017 14:56:17",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Spend time learning how each data structure works, not just the code. There will be many questions on the theory as well as Big-o. The exams are worth a large part of the grade so don't shrug off learning the theory. Still, an enjoyable a fascinating class!",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/19/2017 8:59:37",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Data structures are pretty boring but they are the basis of computer science. This is one of the things you will probably not learn as well if you rushed your education(bootcamp).  This is something that separates programming from computer science.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/19/2017 19:10:12",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Do all the worksheets yourself, even if your group splits them up. The class has a nice slow-down around the midterm and final so you should have some time to study for these tests. Since tests are over half your grade in this class, take them seriously - the midterm is heavier on coding, the final is heavier on trivia type questions. I made a huge stack of flash cards full of tidbits, trivia, and dry facts (run time complexities, signatures, etc. of data structures) and studied them for the midterm and final. Doing this helped me earn an A in 261.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/2/2018 0:50:26",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class was pretty tough. You are expected to know a lot of material. The first four assignments are pretty straight forward while the last two are much more time consuming. If you have a chance, do the extra credit for the programming assignments. Study the self-checks, weekly summaries, quizzes, and programming assignments (basically everything) for the midterm and final.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/4/2018 16:47:53",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Just do the work. The grading is lenient so don't stress too much.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/4/2018 16:54:52",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "An easy A, fairly low stress.  The material got much harder the last few weeks but the grading was very lenient. I didn't come out of the class knowing much more than I did going in.  If you're looking for a GPA booster, this is a good course.  If you're looking to actually learn web development, this is a terrible course.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "1/7/2018 12:32:36",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/11/2018 5:08:19",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The homework, demo quizzes, real quizzes, and exams all build on each other. Use these examples.\nDon't expect support from TAs or the instructor. You're on your own here.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/14/2018 7:59:40",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't freak out; stay calm.  If you've never studied algorithms before (like me), then there will be weeks where you are lost. When no YouTube or reading will help, go to office hours ( I did 2 or 3 times and it helped tremendously).  At the least, office hours will get you through the HW. But for me, it helped me straighten out my thought process.  For tests, you get a whole week to study. I used each day (1-3 hours) to study 1 week of material, then used the last day to write my cheat sheet from my study notes and re-practice problems.  Remember, the problems on the midterm and final are the same structure as problems you've seen in the class and in lecture. Practice identifying the problem structures as you go and it makes getting the nitty gritty details down easier.",
        "When did you take this course?": "FA17",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/20/2018 16:16:38",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Utilize outside lectures/videos a lot in addition to course materials.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/20/2018 16:18:25",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Pay extra attention to the practice questions after each lecture.",
        "When did you take this course?": "SU 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/20/2018 16:20:11",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The final project took way more time than anything else in the program, so don't delay on that.",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "2/22/2018 7:53:27",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Graded discussions were total BS. I was fortunate to be placed in decent groups so it wasn't too bad overall. The final is very poorly written and tests over opinions that aren't even discussed in the lecture materials. You're given topics and told to go find information on them yourself. ",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/27/2018 13:24:04",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Prepare to spend a lot of time on the class.  Start work on the midterm cheatsheet as soon as the class starts.  Consider reading Grokking Algorithms before you start the class ... it's an easy read that will help you get your bearings a bit, but the class itself is much more difficult.  If you're looking to do more to prepare, consider teaching yourself Python.  Take as a goal translating some of the more interesting data structures from the c/c++ implementation into Python.  Having working classes for graphs, vertices, etc., and a functional BFS would be great preparation.  ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/8/2018 8:14:40",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The book is terrible at explaining concepts for the first half of the class (weeks 1-5), so look up videos on YouTube to make up for that. The assignments, quizzes, and tests are graded generously, so always attempt to answer a question, even if it's just a general explanation of HOW you would solve the problem.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2018 7:16:00",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There isn't really a particular strategy for this course since the majority of it is random assignment (group and project topic). The individual assignments are heavily subject to instructor interpretation. There is a fair amount of writing. There isn't much in-depth instruction around the course content. It's just one of those courses you have to get through.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2018 22:23:36",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The final was challenging. I learned a lot through self-teaching and troubleshooting my webapp. Readings were nothing more than links to documentation and a strange page in Swedish... Similar to CS 290 (web programming) the course starts out very simple and easy and then ramps in complexity fairly quickly.\n\nIt seems like such a simple idea, select what you want from a database through joining tables but it is needlessly complicated...",
        "When did you take this course?": "WI 18",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2018 22:30:36",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Concepts can be confusing, so take extra time to understand and practice. Midterm and finals are fair, but make sure you write some actual examples (especially to hard problems you can solve so you can use the solution pattern to guide you) on your cheat sheet. I recommend doing assignments in Python, great way to pick up a new language, and makes some of the assignments easier to implement. Project is not bad, and we're given more than enough time (2 weeks) to finish it - just don't research something crazy hard to implement. Overall a tougher class relatively, but fair and not bad if you aren't overly confused by concepts.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2018 22:40:26",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It starts off light but the concepts grow in complexity as the course progresses (linked lists, arrays, etc. --> hashtables, dictionaries, etc. --> trees --> trees/graphs traversal). Overall not a bad class, and as long as you take the time to read and watch the lectures, you should be fine. Make sure you understand the concepts each week, since they build on each other. This class should allow you to start Leetcoding with a software engineering mind :)",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2018 22:44:54",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Can be challenging if you aren't proof/math inclined, but otherwise very easy and light. Study and make sure you understand the proofs and why, don't just memorize patterns. It's helpful for later courses.",
        "When did you take this course?": "SP 2017",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2018 23:52:35",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Check piazza regularly. Sometimes the requirements would change there.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2018 0:04:09",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "If your quarter is like ours, you will begin to doubt if your homework is even looked at.  Don't even bother doing the labs unless you have to hand something in for them, because you will get very frustrated with missing instructions and confusing set-ups.  Just write in general about the week's topic, at some length, and you will not get any points docked at all.  It was fun to do a final presentation instead of a final exam.  Interesting course--enjoy!",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2018 6:57:25",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I found the 2nd half of the course to be incredibly difficult.  Don't be lulled into a sense of complacency after the first 6 weeks.  The final is also insane so try hard to go into it with 100s on all hw",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2018 11:05:24",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the textbook.  Do the no-credit weekly summary exercises to review for the tests.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2018 15:05:38",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Communicate well with your group and be a nice person. A lot of the material is pretty intuitive, but if you wait until the last minute, you may find yourself in a bind. The quizzes aren't that difficult, but the final expects that you've read and paid attention to the video lectures.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2018 16:39:15",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Learn some bootstrap to make things look nice. Start early for the last homework assignment.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 5:55:08",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get started on the assignments early, but if you have taken CS344 already than half of the coding will carry over to CS372.  You probably don't need the book, but some questions may require outside material to answer.  Also, there are practice summary exercises in the \"Quiz\" section of Canvas - they are ungraded and can be used for additional practice.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 8:18:10",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Get started on each weeks material early. It can take some time for the concepts on the homework to sink in.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 8:49:32",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you're looking for a good way to light $1900 on fire, you've come to the right place. Almost exclusively group work and thankfully I had a pretty solid group. Use Slack to communicate with your group members, much better than Google Hangouts (esp when multiple people are involved). Rooker is a good guy but a bit of a bumbling idiot. People were overly dramatic about the final exam: it's 70 multiple choice questions and if you thoroughly review all lecture slides you will do well. No point in watching the lecture videos, just read the slides. This class is easy but the group work every week is fairly time-consuming, make sure to start it ASAP. ",
        "When did you take this course?": "W 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 8:51:53",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The course is... interesting. I liked the course overall but the material was very dry. It was like reading a verbose instruction material. It made it hard to stay focused sometimes.\n\nI found doing the project then the quizzes the easiest. I get to play around with new techniques/concepts before being tested on them.\n\nI studied for the midterm and final using anki flashcards. I'd pull all of the questions from the summaries/quizzes/end of section textbook review questions and put them in to a flashcard app. This helped me get an A on both major tests.\n\nThe extra credit options for the projects are worth taking. They get harder as the semester moves forward so try to do as much as possible in the beginning of the semesters in order to give yourself a buffer for the midterm and final (worth a combined 40% of your grade).\n\nOverall I learned a lot from the class and it was well put together. The textbook was the worst part of the course so don't get discouraged with the readings. The programming assignments and extra credit will teach you the most!",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 9:38:15",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Would have been easier if I had taken 344 first. 70% of the grade is tests (weekly reviews, quizes, midterm, final) on canvas so take them seriously. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 10:42:13",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Instructor simply recycles material left by the previous instructor and barely ever answers any questions on Piazza. Answers given by the instructor even when she does respond are superficial and of little help. That said, the HW assignments are easy enough, and grading is fairly lenient. Start the last two assignments early though (final project and database HW). These will take up more time than all the other assignments combined.",
        "When did you take this course?": "2018 Winter",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 10:43:46",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2018 10:58:40",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Only a couple homework assignments offer extra credit, so don't assume that because there was a chance for EC this week that there will be a chance next week, too. The lectures are unedited, long, and generally not up to the usual OSU standards, but you should watch them anyway because they WILL help you on the exams (which together are 40% of your grade) and give you some idea of the topics the homework will cover. Use Google and YouTube to find better resources for those topics once you know what they are. They open the midterm after it's graded so you can see what you missed points on. The final is cumulative, so be sure to go back and study what you did wrong on the midterm and make sure you won't make those same mistakes again. Test study tip: several questions will ask you to consider a hypothetical \"word problem\" style problem you've probably never seen before, describe (in words) an algorithm that solves it, and then give the running time of that algorithm. The first 2-3 weeks are the hardest, but the class is well-paced overall. There is a homework-free week in the middle to give you time to prep for the midterm, and no homework to compete with the group project at the end of the quarter. One last tip: C++ is more performant than Python, so keep that in mind when picking a language for the final project, which is the only time actual running time (in seconds/minutes) will matter in an assignment for this class. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 11:08:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I watched a lot of TrevTutor on youtube and I paid for a Chegg subscription that was definitely worth the cost for the quarter. The concepts can be difficult to grasp at times but they grade pretty easily. I thought the weekly quizzes were harder than the midterm and final exam.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 11:10:23",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Make sure you read and are very clear on the specifications for each assignment. Learn hand-tracing and how passing to functions works for each data type",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 11:21:41",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Keep a running doc of summary exercise questions, it'll help you make your crib sheet for the midterm and final. Don't just copy and paste these, type them out, and you'll be surprised how much you retain. :)",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 11:53:21",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do ALL of the summary exercises and review the quizzes for the midterm/final exams.  The tests are hard, but 100% fair.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2018 14:27:18",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The class expectations are very clear and nothing on the projects or exams are surprising. There is a lot of content to grasp though. It's a very dense class and it can be challenging to understand all of the concepts thoroughly.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 15:29:55",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Get a smart partner. Start the project sooner rather than later. Brush up on aggregates and Joins for the final. All in all, I thought this was a fairly easy course, but the final was not the best and poorly reflected classwork even with the double sided cheat sheet. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 15:31:44",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This is the most we'll put together class in the program, hands down. Make sure you start assignments early. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2018 17:56:44",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Badass course. Seriously levels up your 1337 hxx0r skills.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 18:12:54",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Winter 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 18:48:25",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Exam questions come from lecture videos, lecture exercises, weekly summary exercises, and quizzes.  Projects are interesting, but require a high degree of focus.  You get to learn how a computer works, cool!",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 18:52:47",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy class.  Do some sql exercises on your own.  Final project is an opportunity to build something good for your portfolio, or you can stick to specifications and spend a few days building it and get an A in the class no matter what.  Final was a bit harder than expected, but I had a 100% in the class going into the final...the class is that easy.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 19:21:02",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "study the review questions so you know them inside and out",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 19:23:17",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start assignments right when you get them. I barely touched the textbook and watched youtube videos on the relevant topics. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 19:27:34",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2016",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 19:32:48",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Don't sweat it if you don't understand AVL trees, it happens to all of us. ",
        "When did you take this course?": "FA 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 19:34:32",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Skip the textbook. Watch lectures and do the practice exercises after each one. Make your cheat sheet detailed, you'll be able to help yourself a lot on the midterm and final. Also the last project will take you a long time. Get started early, because you'll also have a final exam and 2 quizzes to take care of in the last week of the class.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 20:18:54",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start the project early! Get comfortable with javascript",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 20:20:28",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do the readings and homework. Do not be discouraged by the tough material. The exams are similar to the practice exams the teacher supplies. If you need help use your resources! TA appointments, NetTutor, YouTube videos (TrevTutor), etc. Class is pretty fun once you get a hang of it.",
        "When did you take this course?": "W18",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 20:33:44",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Use her study guides! The class is very fair. No one is trying to trick you ! ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 20:56:45",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 22:30:31",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Similar to 271, lots of reading, picking up fine details, and regurgitating them for weekly assessments. The programming assignments are challenging, but much easier if you've already done 344 and still have that code to reuse.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/22/2018 22:31:51",
        "What Course Did You Take?": "CS 496 - Mobile and Cloud Software Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Make sure you get your development environments (Google App Engine, Android Studio) setup well before assignments. Seek out tutorials not in the course material for better explanations of assignments.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2018 23:34:52",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There are some annoying mistakes in the \"textbook\" and worksheets that seem to never be fixed quarter after quarter. That said, if you complete all of the worksheets yourself (without just copying what your group does), do all the reading, and be thoughtful as you complete the coding assignments, this class will both teach you the essential basics of data structures, and not be too difficult to finish with a good grade.  ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/23/2018 2:20:46",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Colt Steele's class on udemy is useful for some concepts like http requests (post/get), DOM manipulation, and most of the js covered in the lectures. If you want a more rigorous web dev education, freecodecamp is the place to be. \n\nYou will be learning front end: html/css/js backend: node.js, express, handlebars, sessions, request. jQuery, bootstrap, etc. are not covered, although you can use whatever you want on most projects.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2018 6:29:42",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "CS161 is a great course and I learned a lot. Workload is not really that bad if you stay on top of things. Read the the textbook and highlight any unusual exceptions or tricky concepts (these are likely to be tested on the exams). If you take your time and test thoroughly, you should be able to get close to 100% on all of the programming assignments (which represent 60% of the course grade). This leaves you some slack to get a few wrong on the exams and still earn an A. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2018 8:39:29",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Similar to 271 with the weekly summaries and quizzes, but there are also a few Wireshark labs and two programming projects which you should definitely get an early start on (these go a lot easier if you've taken 344 before). Make sure to look through the exercises and solutions posted with each lecture before attempting the weekly summaries.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2018 11:45:50",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start assignments early, watch lectures on 2x speed, make an amazing cheat sheet, take full advantage of the week to study for the midterm and final. This class is TOUGH but doable - just requires a lot of focus and effort. Look to slack, your hw discussion groups and Tushar's youtube videos for guidance. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2018 0:08:15",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class doesn't take up much time (it is probably the least time consuming class I've taken in the program) and the grading was very lenient. The extra credit is pretty substantial but you probably won't need it. The midterm and final aren't proctored and are open notes, book, internet etc. There are five assignments and two group assignments. You pick your own group, so if you get a good team it's helpful. But even if you don't end up with a good group the group work is pretty easy. The individual and group assignments don't take much time to complete if you're just going for requirement completion. If you want to do the work well and beyond minimum requirements expect to spend more time working and learning more about testing resources outside of the class.",
        "When did you take this course?": "WINTER 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2018 4:47:57",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2018 14:31:56",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Workload starts off heavy, but if you write your functions for the first few labs and projects well, you will be able to use them for future assignments. The difficult part of this class isn't the work, it's the time required. ",
        "When did you take this course?": "WI 2017",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/24/2018 15:59:33",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Find outside sources for content.  Lecture videos are a dud",
        "When did you take this course?": "Spring 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2018 8:05:51",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Unfortunately, your experience in this class is likely to be dominated by the random draw of your group. Follow the reading and you'll be fine.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2018 11:06:33",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get out there and get your group going if they are not taking the lead. It really pays off having a good group. I couldn't imagine having a bad group as the class sucks enough as is. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2018 11:32:20",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Like always, do the readings, read the examples, do your assignments yourself, don't copy from others and utilize the resources they give you (old exams, old quizzes, old hw).",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2018 19:25:41",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The tests are no joke. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2018 9:46:49",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take some of the more exaggerated complaints leveled against this course with a grain of salt. You will learn about software modeling, working together with others, the waterfall approach to development and how to bear down and just get through it. Make sure to avail yourself of study materials pinned to the Slack channel -- the final exam is only marginally correlated with the material covered in the lectures (at least in terms of depth). If you want to do reasonably well on the final, you'll have to do some of your own legwork.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2018 11:34:29",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Plan group work in advance to maximize efficiency as following the suggested schedule can turn into 5-6 days of meetings every week.  Follow the HW requirements but don't lose sleep over completing the assignments - grading is pretty arbitrary so no need to stress too much about it.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/26/2018 15:40:18",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This was a pretty interesting course, the format for this course is very different than the other eCampus courses though.  There's about 3-4 hours of lecture material every week from a guess lecturer from McAfee, followed by writeups every week.  Some weeks there's a lab or homework assignment to do.  No tests or quizzes, just a final presentation that's due at the end of the quarter on a topic of your choice.  Overall I thought it was a good course.  Assignment descriptions/requirements are pretty vague though.  For the writeups just be sure to cover the lecture materials and talk about the labs.  A good opportunity to get an introduction to security.  Everything this quarter was graded promptly too.\n\nPros\n - Interesting course material\n - Educational labs\n - Lenient grading\n - No tests\n\nCons\n - Vague assignment requirements\n - McGrath can be difficult to interact with, although he was usually responds on Piazza\n",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2018 8:22:34",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Commonly recommended resources: Grokking Algorithms, The Algorithm Design Manual, Tushar on youtube. Use slack! Use slack. Be part of the conversation. Use the pinned resources there. Watch the videos at 1.5x at least. Start the assignments early.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2018 12:03:43",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Practice C++ everyday, especially to prepare for CS 162",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2018 16:23:42",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I really liked this class, but it was challenging material in my opinion. There is a lot of memorization of tiny details that can make or break your programs. The projects are no joke, and they are graded strictly. i.e. f your code does 99% of the program correctly, but formats the output incorrectly, the graders will mark you down on it. Start projects early, procrastinate and you will fail",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/28/2018 6:38:51",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "For the midterm and final, focus on making a robust cheat sheet! It can be double-sided, and you really should replicate algorithms onto the cheat sheet as well as (for the final) examples of NP-complete problems and their descriptions. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2018 9:53:56",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Meh. Focus on what you want in this course. It is a good practice in corporate BS.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2018 12:22:02",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Know your pointers really well! Get a head start on all assignments if you can. Really focus on the Labs and Projects. Use outside resources (YouTube, cplusplus.com, etc) to thoroughly understand the concepts. It's okay if Big-O notation is confusing at this time, class did not dwell too long on the subject.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2018 19:54:36",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Complex concepts, shallow depth so the class was a lot easier than it can be. Grading is very lenient as well.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2018 23:33:33",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The textbook isn't very helpful, to be honest. The lectures are pretty good. Knowing the worksheets backwards and forwards will help you the most.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2018 23:49:05",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Like others have said, this this class is only really challenging in the final few weeks. Start early on the project! I learned this the hard way. The website has a lot of things you need to implement and can take a deceivingly long time to complete. The final was challenging but pretty fair overall.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/29/2018 10:15:34",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Slack is a godsend, ask others. Make sure you do the extra credit when its offered.  Getting bonus extra credit in the discussions is really easy to do as well.  The midterm and final are rough but fair (also graded pretty leniently). See the reddit sidebar for some great external learning tools. Highly recommend reading Grokking Algorithms ahead of time.  ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/1/2018 10:37:07",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It's all group work, so hope for a group with 2+ active classmates. Review the examples and instructions before turning in your deliverables. Balsamiq is good for prototyping.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/2/2018 9:52:52",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "If you already have a job, just pick a project that is fun to you.  If you don't, think about what type of project you would like in a portfolio to show potential employers.  ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/2/2018 14:01:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The material is challenging but the grading is lenient. The prof wants to make sure that you understand the material more than get the perfect answer.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/6/2018 5:50:01",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "161 taught you how to cin and cout, right? 271 would be doing lots of those too... except now a \"cin\" will need 4 - 6 lines of codes. Learn to use the VS debugger to watch the registries, that was very helpful for most of my assignments. Skip the book, only use it to search for terms. Lectures are hard to pay attention to but a must. Final and midterms were both reasonable but not easy.",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "5/8/2018 8:45:50",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Be prepared for a large learning gap from 161 to 162. 161 does a great job of setting the foundation for C++, but the first project in 162 is intimidating at first. Be sure to get really familiar with pointers, including double pointers. ",
        "When did you take this course?": "Winter 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2018 15:28:08",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start homework early, they will make or break your grade. Tests are relatively easy",
        "When did you take this course?": "SP18",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/9/2018 15:29:59",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do a project that is complex and interesting. This should be something you want to show off during interviews. Otherwise, it's a breeze",
        "When did you take this course?": "SP18",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2018 15:38:23",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "First of all this class is in the midst of a re-design.  Take any older post or even this post with a grain of salt - things likely can and will change.  I won't talk about my frustrations (which were many) because it likely was due to a new professor coming in and trying new things out.  At the end of the day the material is pretty easy.  This class focuses on SQL and it never gets particularly difficult or complicated.  While the class material may change, I highly doubt this will ever be a very challenging or time consuming class.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2018 12:56:14",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The book and the teacher's notes are really all you need, which is good because the lectures are okay at best. Both the teacher and TA were responsive over email and Piazza. I did worse on the first exam than the second, mostly because of first time ProctorU issues. Prof does like to be tricksy on the exams, and there were errors with some of the questions, so double check your results when you get them. Protip: the reading for module 7 is extra long and arcane, and that week you also have two group assignments on top of the normal homework, so be proactive.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2018 6:59:53",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Familiarize yourself with a unit testing framework like catch2 early on. If you can write your own unit tests for your projects, you can be almost 100% certain you'll pass the automated tests on mimir. Get a headstart on group work since it can be slow to reach consensus. The class is not that hard if you manage your time and test your code before submitting it.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2018 15:08:22",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The lectures are really good. Make sure to do all the self-assessments related to the lectures. Make it a point to do as much extra credit as you can early on (before it gets harder). It can help improve your grade significantly.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2018 21:12:46",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The projects are more for you to get a feeling of an \"experience\" versus the \"learn this and build that\". Concepts are taught and usually most of the code is written out, you just need to add your own twist and understand \"why is this happening\". Listen to the lectures, they're worth it. Tests are proctored this term.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/13/2018 21:59:34",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start projects early.  Use Slack as a resource early and often.  Don't overthink things.  Spend time on the writeups explaining your data and making connections to the lectures.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/13/2018 22:39:37",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy class, but beware, it's all points, and you can only miss a total of 30 points or so out of 1000 (>97%) before you drop down to an A-. Weekly quizzes are easy if you went through lectures, projects have very little coding, and most are given to you to just do the analysis, so it should take very little time. Everything's easily graded, and provided you've done everything, you'll be fine.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/14/2018 10:07:13",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get an early start on the assignments",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2018 12:01:28",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Overall the class is a waste of time; get what lessons learned you can out of the course when working with your group. Most of our assignments were graded arbitrarily, losing few points for formatting versus content. The final is silly and studying won't really help you with the weird situational questions presented. ",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2018 19:09:20",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Try to get a copy of the textbook in advance and read as many chapters as you can to prepare. Staying ahead of the course was a big help. The lecture videos aren't too helpful but outside resources such as learncpp.com were. The professor is very responsive on Piazza. The midterm and final are proctored and mostly M/C and T/F questions from the readings. Overall the courseload is pretty light up until the assignments for the last two weeks.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2018 0:18:20",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": " Join slack. Other students often help each other out or at least you won't be completely confused alone since the instructor and TAs rarely ever answered questions on Canvas. Don't miss any of the projects.. the homework isn't hard(but often confusing just graded leniently) but there's very little leeway to lose points in this class. The grading scheme requires you get >97% to get an A. Don't miss any of the weekly quizzes either. Exams are proctored but not difficult.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2018 4:28:42",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I found the class delivery to be a bit dry, but it is the same format as 271, so no surprises ever.  Paulson-made classes are quite predictable.  Exams and quizzes are made from the weekly questions.  Take each weekly check twice as questions change.  Programming assignments are the most difficult part.  I'd say to budget 15-20 hours for each to be safe over the two weeks they are available.  YMMV. ",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2018 4:35:43",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Be disciplined and attack the content early and often.  It can be easy to fall behind because of the block format (not weekly as in other classes).  You are given much time to learn but need it to cover much material.  The programming assignments are fascinating and this was my favorite class so far (261 - Data Structures being a close second).",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2018 17:16:14",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "As with CS161, dive into the code as early as you can to practice learning the concepts. learncpp is sufficient for doing well on the assignments. I also used visualgo.net to learn about linkedlists. My grades were being submitted slow, but seemed to be more lenient than 161. Perfectionism will kill your time, just nail all the requirements, and double-check the grading rubric. My confidence went from 0 to 100 after the second major project. Code and test everyday on FLIP. I wished I used my time to learn VIM, would've saved me a lot of headache from trying to figure out errors from going from Visual studio to FLIP.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2018 17:04:00",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I was initially intimidated by the course due to the rumors.  Class is actually not bad.  First few weeks may be confusing but it will make sense around week 3-4.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/25/2018 22:25:43",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Most of the assignments can be done fairly quick, maybe a couple of days or so. As everyone mentions the last assignment is killer, but you get the most out of it. It seems like putting in a lot of effort and features in your website project is not a factor to get you in the running for EC. Also, it seems like the EC list is chosen willy-nilly.The lectures are really good and worth it, same with the readings. Supplement with Colt Steele's Web Dev course and you're golden. ",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/1/2018 22:55:57",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Watch the lectures and take notes carefully, and you can skip the readings entirely. Be able to solve all of the problems from the lectures and try to relate questions on the quizzes and exams back to them. \nDon't stress if you feel like you didn't do well on the quizzes and exams - grading is very lenient, so make sure you answer all questions so you get partial credit. Don't worry about formatting too nicely on the exams, that can be a real time suck that you want to avoid.\nChegg can save you quite a bit of time every week.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/2/2018 12:27:08",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The homework will not prepare you for the tests. Take the questions from the self-checks, biweekly tests and quizzes and put them in a doc. Print them. Do the questions over and over on paper until you truly understand them, and even then, expect the exams to wreck you with questions that are just different enough from what you saw on homework or practice tests. You'll probably run out of time on exams. GET A CALCULATOR that can do binary-hex conversions like the Casio fx-115ES PLUS. They don't make it clear in the syllabus or course materials that this kind of calculator exists and that you can use it on the exams. Don't be misled into thinking you have to do all the conversions by hand. There's no point in doing them by hand, it'll slow you down way too much on the tests and you'll never be tested on your abilities to convert/add/subtract binary or hex by hand. The extra credit part of the homework usually takes as long as the meat of the homework and is worth just 1-2 piddly points. You're better off using that time to study for the exams. Class is overly focused on minutia and details. Expect to spend 11 weeks learning a lot of stuff you'll (probably) never use in your CS career. ",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/15/2018 7:24:16",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you can start reading ahead of time (before the course), do it! Getting ahead of the material will be super helpful. Also, I recommend using videos to really hone in on concepts you're having a hard time grasping.",
        "When did you take this course?": "SPR 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/19/2018 10:12:54",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The Epp text is so full of errors and badly organized that you'll need the Rosen text for clarity. Obtain both. Study the old homework and quizzes from on-campus classes; their questions show up on exams. Video lectures are not very helpful.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/5/2018 7:57:02",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Winter 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/5/2018 8:22:04",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Read through the advice on OSU Course Explorer and follow it: learn about/prepare makefiles, menu functions, input validation, etc. before you even reach the first day of class.  You hit the ground running in this class and it doesn't let up until you're in the last few weeks.  I found the book helpful and stopped watching the lectures completely by week 3.  LearningLad and TheChernoProject on YouTube were helpful for some of the more difficult concepts.",
        "When did you take this course?": "Spring 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/15/2018 17:36:37",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Read the book and get started on the assignments sooner than later. I would start the week off with reading and lecture videos, and then start the assignments afterwards. The lecture videos were sometimes helpful for reinforcing concepts, but I don't think you'll be missing out on much if you skip them. Piazza was a great resource. The last 2 assignments were significantly more work than the earlier assignments. Get started on those projects early. Read the exam questions carefully and take the time to study for exams. Very enjoyable class.",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/15/2018 17:45:00",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I found this class to be more difficult than CS 161. The book is difficult to follow at times. The lecture videos are helpful about half the time and they are dated. Sometimes the lectures aren't in line with the book. As everyone else has said, Youtube videos are a great resource: TheTrev Tutor and Eddie Woo. Chegg can be a good resource for checking homework or additional problems not included in the back of the book. Piazza is pretty dead in this course, but slack was fairly active.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 9:18:50",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This is a course where you need to have a mind-meld with the professor.  Specifications are not given clearly and yet points are deducted when you do not meet the phantom requirements and you cannot challenge the deduction. \nMore than actual testing, you better know the terminology of testing.  The final project that is worth  20% of the grade is in Java, which might be the first time you have used Java.  No help from the TAs in answering questions on Piazza.  Professor only answers periodically and typically not for student's problems with Java and JUnit.  It is mostly fend for yourself.  If you have a good group, you will not get slaughtered for the project.  Check that someone in your group knows Java and has some testing experience in JUnit.  ",
        "When did you take this course?": "SU2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 9:24:22",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't spend too much time reading the textbook - it's not the most helpful and there are much better resources out there. Lectures are great and do a good job at stepping through each of the concepts using sample code. If you are struggling with a concept - especially with express or AJAX - find outside resources immediately. The course modules provide a basic overview of these concepts and do not go too in-depth.\n\nThe class project is relatively straightforward - if you are only looking to complete the requirements then just make a quick static website. You do NOT need to implement any server-side code for the project. However, be prepared to spend a fair amount of time on the final homework assignment, especially if you are not comfortable with express, AJAX/asynchronous events, and mySQL. The last assignment combines everything you cover in the course in a basic CRUD app, so you'll be juggling a lot both on the client and server side.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 10:01:48",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Ignore the textbook and the provided lectures as they provide very little value. Instead, rely on learncpp.com, cplusplus.com, Paul Programming on youtube, and TA office hours. The TAs for this course were tremendous. It was not the super difficult class that it is made out to be. If you are able to plan your assignments and manage your time, you will get exceptionally fast at the concepts.  ",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 10:41:18",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't wait until the weekend to cram in all the info.  Read the book; the lectures were pretty bad near the end.  Literally, the professor said that the definitions in the video were wrong and you were expect to remember the book definitions, but here's the video anyway.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 15:52:34",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The lecture videos don't quiet cover the full scope of  the material each week and could use updating. The test and quiz questions come directly from the textbook, so your best bet is to study and understand those as best as you can. ",
        "When did you take this course?": "SP 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 15:56:05",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The weekly work likely won't take much longer than 5 hours to complete - that being said the constant group work requires lots of group meeting, discussion.  I found that even though I wasn't spending a lot of time on the class it always weighed on my mind, remembering the various group meetings, customer meetings - it just wears on your over the course of the term.  The test at the end is difficult.  I strongly recommend making note cards as you go through the term and study a little bit each week.  This will make the final much more manageable.  It is stressful to cram all the material in the final week while also trying to decipher Rooker's confusing, ambiguous questions.  Seriously, study as you go and you will thank me come the final.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 15:59:04",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "While the lecture videos are some of the more interesting I've seen to date, the material included doesn't give you everything you need to be successful for the final project and the final exam. If you've had experience with Javascript, AJAX, and Express then you'll be fine. But for a newbie like me, it was a lot to get used to. Especially when some of the assignments essentially throw you into the deep end that you're not sure what questions to ask. It also didn't help that the instructor and the TAs were non-existent during the duration of the quarter. I would recommend avoiding this class over the summer. And if you're new to JS, the  take this class by itself during the summer.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2018 16:33:53",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class feels slapdash and indifferently maintained. The primary book is bloated and the videos are from some other class using some other book, though you can get by with them. Assignments are graded slowly, often still not returned by the time you have to take a quiz, midterm or final on the material. During the quarter I took it, the second section got their stuff back much more quickly, presumably because they had a lot fewer people, so consider that when registering. Teacher presence is minimal.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2018 15:13:50",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Write more than necessary and format everything nicely. That should help you get good scores on the coursework. Pray that you get a good group. The final is full of weird and subjective questions, but be sure to study all of the slides anyway.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2018 5:24:33",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "You're stuck in the same group and with the same randomly assigned project all term. Accept that, accept that this class while being \"revamped\" is not going to get better until there is a new instructor, which isn't going to happen. ",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2018 16:57:06",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "To prepare for this class, try out the mobile/PC game \"Human Resource Machine.\" It doesn't teach you code, but it does get you in the \"assembly mindset.\" \nThe early projects are very easy compared to the later projects. Don't let the early ones mislead you on the time commitment to finish the later projects. \nThe weekly summaries and couple of quizzes were great for checking my understanding between exams. For exams, I studied the weekly summaries, put these questions onto notecards, and rewatched lectures. ",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2018 23:29:36",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do the homework and all the practice you can. If you have a question, be prepared to look for it on your own because there doesn't really seem like there's anyone to help. It isn't terribly bad though. Lectures are well done, grading is generous, and the class is actually kind of interesting if you like logic games.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2018 19:49:04",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The first few weeks of this class are fairly straightforward, covering things like dynamic arrays and linked lists. On top of these you implement interfaces like bags, stacks and queues. The latter part of the course becomes more challenging conceptually, covering trees (BST, AVL, heaps), hash maps/tables, and graphs(BFS, DFS, Dijkstra). Exams have a lot of questions revolving around time complexity (e.g. whats the average case for adding to a linked list, what about a hash map with chaining, with buckets?). They also have a few programming questions for which you can use a text editor (offline), and of course application questions like simulate breadth and depth first searches of this graph or remove the value 16 from this BST.\n\nThe assignments required us to implement the interface as specified in the header (.H) like add, contains, removeAt, etc. You do not need a strong understanding of headers, OOP, makefiles, etc. as the focus is on the data structures themselves. Some assignments will build on these data structures (we built a spell checker on top of a hash table with buckets).\n\nMost weeks you will have group work covering 3-5 worksheets (taking 1-3 hours to complete in one go), and an assignment. The worksheets require the group to work on implementation of the same basic functions you will implement in the assignments. They are worth basically nothing in the grand scheme of things at 1 mark each for participation. That said, understanding the worksheets will help you succeed in both the assignments and exams for this class.\n\nThe lectures are basically visual versions of the textbook readings. I found myself reading the chapters less and less as the semester wore on. Most of the content in the readings are covered in the videos, with the longest being around 30 mins and the shortest around 10 min. Make liberal use of the 1.5x speed to get through some of the repetitive or drier sections. In addition, Mycodeschool on youtube does excellent comprehensive lectures about most of the data structures covered in this class.\n\nFor me the most difficult part was rebalancing AVL trees (although we didn't implement it). Conversely, the easiest part was hashmaps/tables (since these are basically identical to the first weeks coverage of dynamic arrays and linked lists).  The best advice I can give for this class is to understand the abstract data types (ADTs) conceptually along with their interfaces. If you can visualize the data structure (like a linked list or a tree) and imagine traversing through it or removing elements then you will find this class a breeze. Best of luck to future students!",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/28/2018 5:27:40",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Be sure to read the notes in the lecture module.  A few mention that the weekly write-up should include some detail about a lab, but that requirement isn't highlighted anywhere else other than a sentence below all of the videos.  If the module doesn't mention the lab as required, then you can skip it, though as a learning experience it might still be worth doing.  The programming assignments are easy though the directions are nonexistent.  Just do the bare minimum, if it doesn't say the program has to be interactive than you don't need to make it interactive.  Also, the syllabus mentions something about compiling on the VM but it's not actually possible since you can't transfer on/off and the TA wont be able to either.  If you show some effort and can check off any of the requirement in some form you should get a 100.    ",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2018 12:46:36",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The format of the class is to watch weekly lectures about 3-4 hours long, then regurgitate the content in a blog post, peppered with maybe 2 easy coding assignments throughout. The final is to make a 30 minute presentation that counts for 50% of your grade over some security topic. I would have liked more 'hands-on' activities weekly.  If I could speak to my past self, I would advise to take another elective.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2018 12:49:07",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The class focuses almost entirely on group work and writing (it's the intensive writing course for the degree).  Points will be taken off here and there for seemingly nominal reasons, but just accept it and continue on.  Everyone will get an A if they pull their weight.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2018 12:51:46",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Similar but easier than 361 in my opinion.  The group work is still consistent, but much less writing and shorter assignments for that matter.  I felt that we would get an A simply for turning in the assignment.  Learn how to play the card game Dominion before starting to get a leg up on the class.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/26/2018 9:15:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There was a lot of complaining about this class this quarter, but the truth is, you are given everything you need to succeed. There are even practice quizzes for the quizzes. Study the homework, quiz and practice exam questions, and you will be fine on exams. You may need to use almost all of the time on the exams, but the grading is fair and lenient.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/29/2018 10:03:37",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Course is more work heavy than I expected. Lots of different concepts (boolean math, basic probability, basic data structures) lumped together into one class so you will feel like your changing gears every other week or so. The course was more annoying than anything having to deal with equation editors. Still, it's pretty easy if you have a decent math background, but perhaps a struggle if you don't.",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/16/2018 8:19:14",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you've had previous experience in C++ or Java, consider taking 2225 at the same time even if working full time if you don't have a ton of other responsibilities.  ",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/26/2018 19:10:50",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is the same structure as 271. Everything you need to know is in the lectures. There are two programming assignments which are both difficult but very meaningful and teach you a lot about the coding side of the material. There are also a number of labs where you simply walk through packets and answer questions about what you see. The rest of the class is really \"book learning\" where you need to prepare to answer multiple choice/ fill in the blank style questions. It is very straightforward and there are zero surprises.",
        "When did you take this course?": "FA2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/27/2018 12:29:44",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Lecture are very boring, but useful. Exams are very similar to weekly summaries and quizes.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/1/2018 17:18:39",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The reading is tough and the subject matter can be hard to wrap your head around. Try taking good notes on theories and starting off strong, which will help you get in the mindset for the logic taught in the course.  Grading was rather lenient, it seemed that the instructor/graders cared more about you understanding the concept as opposed to getting it perfectly correct, which was a big positive of the course.  \n\nBrush up on some math if it has been a while, and get familiar with your text editor of choice early in the course so you can spend more time on the test material as opposed to formatting and getting the symbols right.  Also definitely save your work often for homework and tests - I used Microsoft Word which crashed on me twice during a test and having to re-type an answer wasted a lot of time.",
        "When did you take this course?": "Summer 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/2/2018 17:43:34",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This was one of my least favorite classes. Everything is so disorganized. The instructor is awful. I missed part of a super easy assignment because I didn't even see it since everything is all over the place. When I emailed the instructor explaining my situation I got two words as a response. I learned very little about databases in this class. The lectures aren't all that great but it's a good idea to watch them anyways since they are very short. You will learn more about routes and node.js/handlebars than sql in this class. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/3/2018 13:07:33",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The videos are more helpful than the readings provided in each module. The stakes on the group work are low, you get your 1 point as long as you turn something in, correct or not. Class is more coherent than 225, but there's still plenty of conflicting and/or nonsensical instructions. You get a pretty good gut feel for Big O and the various data structures by the end, though, so I would say the content is actually good. Tests are fair, if not immune to gibberish.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/3/2018 14:53:03",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Starting after week 5 or so, start the assignments as early as possible.  A lot of the material required to do the homeworks isn't covered well in the modules provided in the class.  Some others suggested taking Udemy courses or others beforehand - I highly recommend this, especially if ones exist that focus on client/server side interactions in Javascript and other JS extensions as this was a focus that was significantly under-covered in this course.  Maybe the pain of this course is that HTML and JS are so fragmented, but this course is extremely poorly organized relatively to other courses (344, for example).",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2018 11:31:44",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Use the Canvas calendar to keep track of assignment due dates. This class is a complete mess with its organization, and is still in the process of being redeveloped. Overall, the concepts covered in the class are extremely basic. There's also much more of a focus on back-end web development than there is on actual database management/design/theory, which is disappointing. \n\nMost of the work in the class focuses on a term-long project that you can complete solo or with a partner. If you do it solo and are not comfortable with back-end development, I suggest keeping your project extremely simple and to follow the specs closely. You're able to change project ideas whenever you want, but this can add a lot of extra work if you realize your original project idea was too complex.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/7/2018 8:36:55",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you have any web development experience at all, or if you take an online course in webdev before this class, it'll be a breeze. The last homework assignment is much more time consuming than the main project; start it early.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2018 12:46:30",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Fairly straight forward class if you have any sort of programming background. For the coding assignment, follow the specifications strictly and you will get full credit. Study the end of chapter problems in the textbook for the exam.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2018 15:47:14",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2018 15:47:53",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2018 15:48:58",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/10/2018 6:25:27",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The description for this class reads like a dream for people applying for jobs - Learn git! Learn testing! Buzzwords!\nUnfortunately, the class compiles 3 different sources of lectures for material where you'll spend more time listening to someone saying ummm than actually teaching. \nDon't bother with the lectures. You can sign your name and write lorem ipsum in each assignment and I'm confident they'd still give you 100% for it. Don't stress too much about the group project - it's as worthless as the rest of this class",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2018 8:38:54",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice problems are your friend. Try to find the answers online so you can look back at your work and correct yourself.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2018 18:06:48",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Your group is everything, so hopefully you get a good one. The lectures aren't great but at least there aren't any readings. The final is an absolute mess, it's all multiple choice and honestly horrible. Duplicate questions, poorly worded and not great. I ended up submitting it in like 25 minutes because I just went with my gut on everything. Honestly ended up being a pretty good strategy.",
        "When did you take this course?": "FA2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/11/2018 10:36:24",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Pray for a good group otherwise you will be sinking a lot of time either doing the project with yourself/less people or trying to get team members to communicate. The problem with this class is that people have labeled it an \"easy A\" so people sign up for it expecting to do very little. That is only the case if the group all works and functions effectively together. You are expected to report people who don't work, or else they get a good grade on your work. Here's the catch though: you have to call them out and write it on the group report each week. There are also individual team member evaluations at the end of the term, so everyone feels pressure to play nice up to that point. The bottom line is: **if you have a bad group, you'll have a bad time and it will be a long quarter and not an 'easy A'.** I was stuck with 4 morons and ended up spending a ridiculous amount of time on this class. This class is A LOT of writing. Also, the assignments themselves and the final are VERY subjective and not concrete. Be aware that you are rolling dice when you take this class.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/11/2018 11:52:17",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I would not recommend taking this course without web development knowledge. Most of the work in this course involves the class project, so if you're not familiar with web development it will be very frustrating. Lectures are enough to get through the quizzes and assignments.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/12/2018 17:29:24",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do all the easy EC on the projects that you can. Really makes up for any mistakes on the Midterm or Final",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2018 17:34:52",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This is a frustrating class - even with a decent group.  I think there is some valuable information to be learned here which makes it even more frustrating that it's poorly taught.  One thing to keep in mind - Everyone talks about how easy this class is but if you don't put in time studying for the final your \"easy A\" could easily turn into a B - which happened to several of my classmates.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/18/2018 8:08:50",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class wasn't as hard as I thought it was going to be. Yes, it is challenging and some of the math in the first few weeks can be a struggle. However, after the first two or three weeks it kind of slows down. I found that the most challenging topics in the class were dynamic programming and NP problems, so if you have the opportunity or time, at least get familiar with those topics. Resources are plentiful on the internet but for the most part I stuck to the provided lectures and watched a few YouTube videos about topics that gave me a hard time. The provided lectures are not great, in some cases far from it, but I believe it covers everything you need for the homework. I didn't really touch the book as it was too mathy for me but YMMV. Some people really like the in-depth breakdown of algorithms along with their proofs that the book offers. Fall 2018 grade breakdown: 55% homework, 5% discussion, 20% midterm, and 20% final. If you make sure to do the discussion each week and focus on your homework grade the exams won't hurt you too much. I found that the midterm was easier than the final but that could be from my lack of motivation to study at the end of the term. Make sure you take full advantage of your cheat sheet and fill it with lots of example problems. I did pretty bad on the final but finished the class with an A-. ",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/19/2018 17:15:59",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Don't slack on the weekly quizzes,  commit to either the lectures OR the book, take 344 first, don't spend too much time trying to port your 344 assignments over",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/20/2018 9:20:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start early",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/26/2018 13:26:15",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If this is your first math class in a while, I would recommend reviewing basic algebra before you take this course. It was usually the algebra that made things difficult, instead of the actual concepts we were learning. Grading is very lenient. ",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/2/2019 19:43:16",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Fa18",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/2/2019 19:43:23",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "Fa18",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/4/2019 21:19:17",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/4/2019 21:28:23",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Procrastination is not your friend in this class. Do your best to get readings, labs, and projects done early. Find a group for the group project early, one that actually communicates. Find the time to do the extra credit, not does it only help your grade, but it reinforces the topics that show up on the quizzes. Start planning your final project the day the specifications are released to allow time for debugging.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/6/2019 19:49:21",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "In retrospect, priming myself with a Udemy / Coursea course before starting this course might have been a better idea. The lecturer makes it quite difficult to follow her lectures. I suggest turning on captions to read the lecture instead of listening, as she pauses mid-sentence, and may even change the whole sentence in mid sentence. Turning on the captions helps you anticipate what she is about to say. Likely by the time you finish reading the captions, then she would complete her sentence. Material is challenging and fun. I found myself relying heavily on external resources because of the difficulty in staying awake in lectures. It seems like there use to be a group project in the past few terms, but we didn't have it this term.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "1/16/2019 16:09:58",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you really want to learn this material, it can be tough. But if you just want to get through the course, they set it up so you don't actually have to learn/memorize a ton of stuff.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/23/2019 17:33:13",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I had no programming experience beforehand. The assignments are not time intensive until the second half when you are introduced to pointers and arrays. For a beginner this was a little confusing but the TAs were willing to help look at my code. For this reason I would recommend starting on the assignments when you can so you can get feedback outside mimir on what you can do to improve your code. I found the exams difficult. Textbook checkpoints are suitable review. Overall enjoyable class though.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/24/2019 7:37:38",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take Colt Steele's Udemy course and prepare to do a lot of googling.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/25/2019 14:26:59",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Thankfully I got a good group and client. Group, client, and project assignments are totally random. We did have trouble scheduling meetings across four timezones, but the work itself was not too difficult, just long - about 10 pages of writing and diagrams most weeks. Try to add as much as possible. There's only a little bit of coding at the end, implementing a small part of the client project. The TA we got was pretty lenient with grading, though I got the impression grading across the board was kind of random and people got docked for arbitrary things. Rooker emails several times a week and seems really engaged, though I can't forgive him for that final. Tons of random questions confusingly written. Studying the lecture slides is helpful to an extent, but there was no reinforcement of the lecture material in assignments so I did pretty badly on the final. YMWV.",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2019 10:48:39",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Just read the book and do your homework in time. Make sure you test your stuff thoroughly.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2019 9:24:25",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Try to avoid talking to the professor - he contradicts himself and makes things seem harder than they are - instead follow the written instructions to a T. Get into a good group - but you have no control over that, so good luck!",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/18/2019 4:54:52",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I wanted to love this class. Like others have said, you get out what you put in to this. The professor can't be bothered by students asking questions which was off putting.  Overall... fine survey course that left me uninspired.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2019 11:44:56",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "It's like doing four final projects in a row. The four projects of this course are all large and time-consuming and the course feels more like an advanced C course than it does an intro to operating system topics. You'll get introduced to things like file i/o, threading, sockets, but expect those parts of the assignments to feel slapped on to a behemoth C project that could've easily been 162's final. However, unlike many courses in this program, this one is ORGANIZED and the expectations are CLEAR. You will be given a grading script to run and interpret to determine if your program will get a passing grade. Final is open book and multiple choice. Hot tip: the class will tell you to author all your work on the school server using Vim, but that's insanity mode for C files with hundreds of lines. I was able to do all of my work in my usual IDE on my Macbook and transfer it to the school server with no ill effects. Reports of things going horribly wrong if you develop on your own machine are overblown. Signed, someone who did all the work on their own machine.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2019 19:45:04",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Take notes as you read the materials for each module; don't just read what you need in order to complete the homework. Monitor the instructor-led Canvas discussions; she often revises homework requirements on the fly and is frequently notified by students of errors in the course handouts. Don't forget to participate in the group-level Canvas discussions; the extra credit will come in handy. Attend office hours and eliminate any doubts you have about your homework answers.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2019 14:45:04",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Watch the lectures and be proactive with your group.  This is a document heavy course, with very little coding.  The hardest thing was trying to get 15 pages of documentation per week with a group that had a hard time getting together at the same time.  The final is awful, and filled with T/F and MC questions that have tricky wording. Otherwise this class was an easy A. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2019 16:53:40",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Make sure you take the time with the homework to study it and absorb material. It will make things easier on the long run. Everyone on here says \"Just review the study guide, quizzes, homework and textbook and you can easily get an A!!\". Well, duh, that's a majority of college courses. I thought the homework is the most useful, because the study guides reference it a lot. \n\n",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2019 23:37:15",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class will be semi-difficult if you are not familiar with NodeJS and MySQL. Try to find a good partner that will complement your own strengths so you guys can create a 100% working application by each deadline. Overall, the course is good but do not take this class for granted. I witnessed many colleagues suffer towards the end due to their lack of knowledge on back end development. In addition, make sure you find a partner that is time zone compatible with you because a lot of things need to be verbally discussed. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2019 11:04:50",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Forget about the lecture and books. It would be better to teach yourself with outside resources unless you already have some strong experience in JS and Ajax. Also, there are two options: Zhang and Ianni. If you are good at JavaScript/Ajax and want to talk to the professor personally for some reason, Dr. Ianni's class might be good. Otherwise, you should take Zhang's class. It saves you time.",
        "When did you take this course?": "2019Winter",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2019 21:27:44",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Finish homework and quizzes early. Make sure to absorb the material as best as you can each week. To supplement the course material I suggest watching TrevTutor, Trefor Bazett, and Eddie Woo on YouTube. Start studying for the midterm and final the moment that the materials are released. Grading is lenient; as long as you show your work and try to regurgitate theorems/proofs you should get the majority of the points.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2019 7:45:05",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Though advisers don't seem to have an issue giving overrides to take this class with 290, it's definitely for the best to take 290 first if you have no back end knowledge. I realize 290 does an awful job of teaching that too, but the project in this class is more complex than 290's final assignment so you need some idea of what you're doing. To be frank, this is also a pretty terrible and basic class as far as material goes. \nIt seems partners were optional before, but were mandatory this term. Thankfully we were able to choose our partners. The entire class is building on \"project steps\" while doing \"group reviews\" with a separate group (which some people gave good feedback and others clearly did not care at all). There were also some easy quizzes and assignments sprinkled in. You design your own project and can make it as ambitious or as basic as you want, but don't expect to get much from the class itself.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/26/2019 11:58:20",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is toughest in the first few weeks, when you're still trying to learn the basics of MASM and have a ton of readings to cover. Once you get past that, the class slows down and becomes much more manageable content-wise. It does start to peak again towards the end, but that's mostly due to the amount of time it takes to complete the last two programming assignments, so get started on those early. Go for as many easy extra credit points as you can, because they do add up and can really boost up your final grade. Most of the weekly reading quiz questions are either directly from the book or from the lecture slides, so take your time while doing them (6 hours) and don't worry too much because you get 2 attempts. For quizzes and tests, go over each of the questions listed after every lecture video and also review the weekly reading quizzes. This is a very straightforward and well-organized class, and as long as you put in the work, you will do very well (I ended with over 100).",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2019 12:32:50",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Can be as easy or as difficult as you want it to be. That said grading is lenient and you get a ton of flexibility in your project - even if it's a pre-made on",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2019 8:09:10",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "If you have no background in CS, I would spend way more time trying to learn C++. Get a head start on all the readings because they are really long. Watch youtube videos to help you explain concepts. The exams can be tricky, try hand tracing everything before you answer exam questions. Be prepared for the last assignments which can take a long time to debug and figure out. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/28/2019 18:18:49",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I'm late to review my experience in 290 but looking back, after taking almost all the classes in the program, I would rate this as one of the 3 worst classes. The course is theoretically supposed to help you develop the skills needed for Databases(CS340) but it is presented very poorly.The lecture content was pretty awful.  The lectures are given as if everyone is already familiar with the topics and just needs a refresh on material. You'll find that a large amount of the class does have Web Dev experience and will rate the class as easy but do not be lulled into a false sense of security if this is your first time with Web Dev. \n\nThis course was my first experience with Web Dev and it was one of the hardest  \nclasses I've taken. I would rate it harder than 325 because of the lack of quality reference material. I took this course over the summer along with data structs and found myself spending about twice as much time on 290 than 261. The asynchronous requests on the last project were brutal and I went to office hours multiple times to try to get my code working but the TAs would just alter the code for you and not really explain anything. \nFinal thoughts: If you are concerned about this course I would strongly recommend Colt Steele's Web Dev Bootcamp Course on Udemy. In total it has about 45 hours of lecture and covers almost every topic from 290 in much better detail. I came out of 290 scared of web development and I took the Udemy course and feel so much more confident in my ability to put together professional web pages.",
        "When did you take this course?": "Su 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/30/2019 16:26:05",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "162 does require a higher time commitment than other classes, but the grading is very lenient. If you meet the grading rubric and have a foolproof input validation, you should be averaging close to a 100%.  You have the option to retake each quiz a 2nd time, but you only keep your last score. Only retake it if you scored less than 18/20. Prior to the semester starting, go through Suraj Sharma's C++ tutorials, learn to use makefiles, and learn to use Valgrind. Get familiar with Langston's Ant and maybe even start on it. I found the video lectures to be of no use, and the textbook was marginally better. C++ online resources and Stock Overflow will be better resources for this class. This class is all about producing code that meets the specs, don't make it any harder than that.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/31/2019 10:09:33",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course is structured well, so that you always know what's expected of you. My time was split pretty evenly between weekly checks, bi-weekly quizzes, and programming assignments. The textbook is useful but dense. Early programming assignments are simple, but the last two take a substantial amount of time/frustration. Don't be afraid to ask for help! I found office hours very helpful. The proctored midterm and final are similar in difficulty to the quizzes.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/2/2019 12:06:52",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Read the early chapters of the book to make sure you understand it, later on you can be more selective in what you read. ",
        "When did you take this course?": "WI 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "4/7/2019 12:26:43",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get a testing suite like Google Test or Catch up and running in the first week of class and learn how to use it. This will save you tons of time debugging during the middle of the course when the assignments get longer. Get comfortable debugging in an IDE or with gdb. Fixing non-working programs will go much more quickly with a debugger than with cout statements.\n\nExams are about 50% reading code and being able to discern a result. Reading a lot of code will help with this - go through the book examples with your whiteboard and get practice tracing values through the sample programs.\n\nThe other 50% of exams will be language features. Things like default constructor behavior, \"which function gets called\"-type questions for polymorphism, and \"which variable is in scope at this time?\"\n\nThe best practice for the exam would be doing all of the checkups at the end of the book sections. If you can do well on these, you'll do well on the exam.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/10/2019 9:51:55",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/11/2019 13:47:58",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/11/2019 14:11:17",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I was one of the first people to post a project idea and my group formed very quickly. I figured that the type of person who was looking at the projects before the term even began would probably be the type of person I want to be group members with (e.g. proactive, knows what they want). Turns out I was right. I ended up with a wonderful team. My other suggestion is to use technologies you already have experience with if you want to produce something substantial. Otherwise, you'll be under a lot of stress and pressure.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "4/11/2019 18:09:09",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Lectures are great in this class. Take the weekly summary twice, if possible. Start the first reading early and don't skim those chapters. You will need to become familiar with that information.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/11/2019 19:05:06",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Tough class, but it's pretty well designed and organized. Don't get bogged down by the minuscule details. Just write a very good page of notes for the midterm and final. Split your notes page into 2 columns and use really small font.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/11/2019 20:05:22",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "It gets easier towards the end. Stay on top of things early. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/11/2019 22:12:59",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/13/2019 8:37:27",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/14/2019 22:14:54",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This is the best organized class I have taken so far. It is tough, but they provide you with everything you need to do well. For the exam make your cheatsheet. and then don't use it. The book is good, the lectures are better. The lecture check worksheets should be done over and over as practice for the exam until you can do all of them with no issue. Class was hard at first, but things start to coalesce midway through. Prof is super responsive on slack/piazza/email, even on the weekends.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/16/2019 0:16:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/16/2019 5:45:58",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "My biggest complaint about this class is that it's light on material, doesn't teach what material it offers very well, and has assignments that feel much more like busy work than anything.\n\nPersonally, I didn't find Rooker to be as bad as everyone made him out to be - he really does seem to want to do well as an instructor. Students disagree with some of his teaching methods or feel that he should have concrete answers for things that are incredibly subjective - but if you just follow the assignment instructions and explain your reasoning then you should end up with a decent grade.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/20/2019 7:37:53",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "If you don't have a Math background, you'll spend a lot of time trying to understand concepts. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/28/2019 16:28:48",
        "What Course Did You Take?": "CS 199 - Companion Course",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/9/2019 0:31:34",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "First half is super light.... don't get used to it. Not sure what else to add that hasn't already been added. Watch out for due date of final assignment. All quarter long, everything was due on Sunday, except the last assignment. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/21/2019 7:19:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first half of the class you might be like \"wtf\" but it seriously gets easier as you go along. It just took a bit for me to adjust to thinking logically after so long! The book is basically trash, use youtube instead! I used TrevTutor videos a lot. The videos are also not very helpful. Take advantage of the free tutoring, that helped me the most. Grading was super lenient, as long as they saw that you know what you're doing. Problems repeat a lot, so you will recognize patterns.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/6/2019 18:10:49",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "No preparation needed. 161 was my first exposure to programming and that was  adequate for 162. It was easier than expected but time consuming. Not a class to put off until the last minute. The projects had game like themes if you like games. Just think of coding in this class like grinding in an rpg for EXP to level up and that will essentially be this class. ",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/8/2019 8:13:38",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class was incredibly annoying, but didn't require much of a time commitment. It's almost exclusively group work, and the TAs will take points off the group assignments as some sort of power trip. When approached, he would deflect questions and try to point out other deficiencies in the homework (but not address what we lost points for). \n\nThe first two exams were not proctored, but you have 15 minutes to answer 20 questions. The questions will be filled with errors and you will be confused. Just take your best guess and hope that the professor throws out a question or two (he did for my class).\n\nI'm glad it's over.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2019 9:06:35",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take Colt Steels Udemy course on web development prior to the term starting. This will make the class much easier. The class moves swiftly and does not dive deeply in to the topics.  Homework 6 is harder than the Project so start early. There's only 1 option for extra credit and its on an early assignment. Make sure you do this because it is actually worth a lot of points.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2019 19:15:05",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start assignments early, plan carefully, make use of extra credit. Contact your TA's often or other TA's frequently with questions. ",
        "When did you take this course?": "Spring 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2019 19:18:02",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Start assignments early, watch Cherno, participate in slack and ask TA questions. ",
        "When did you take this course?": "Spring 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2019 10:19:21",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Probably one of the worst courses in the program. While the course material and assignments are \"easy,\" you'll spend a lot of your time paranoid and/or frustrated about points getting taken off for random/unjustified reasons",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2019 0:28:36",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Easy class as long as you get a good group. The java debugging can be a mess and the instructions aren't the greatest, but very easy once you set it up.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/12/2019 12:16:01",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first 2 or 3 weeks are very overwhelming. There's a lot of information needed to start learning assembly. The middle 60% of the class isn't so bad, but the last 2 homework assignments can be really time expensive. Make sure to start the last project (#6) as early as possible so you don't get stuck trying to study for the final at the same time. The quizzes and exams are very similar to the summary exercises. Review them early and often before taking exams. If you want to prep before starting class, get Visual Studio up and running with the Irvine library via the instructions from the Irvine book's website. This can be time consuming if you aren't used to Windows or Visual Studio.",
        "When did you take this course?": "SP2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2019 16:44:40",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start early, even if it's just writing down requirements and formulating a plan for coding later, this will save you time. Reusable code is your friend (menu/input validation). The front half of the class is an uphill slog, it does get better but be prepared to code, a lot. If you can take this course alone, do so, especially if you are working. If you need to take another class try and take one with a lighter work load.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2019 17:35:33",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class is great, I would recommend it to anyone. The instructor does his best to fit a good amount of information in the short term. The listed pre-req is CS325 (algos), but if you've taken CS261, you should be fine. I thought having CS271 done was more helpful than either of those though. This term, the class had 8 projects, weekly quizzes and two exams (midterm and final). Grading is not harsh, but you do need a 96-97% or so for an A. The (unofficial) Slack group was really helpful, and the instructor is also very helpful and responsive.",
        "When did you take this course?": "SP2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/19/2019 5:09:55",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class, as taught by Ehsan, is not bad. You might not come away from it being a discrete maths genius (it is a very lite survey over the topics with no deep dives into them), but as a class it's not a tough one to get through. \n\nThe content in this class can be obtuse in spots, but as others have mentioned after the midterm things get easier. As a person that isn't a mathy in any way at all I managed to do ok by simply brute forcing the information. Continuously go over the answers provided to you for assigned HW questions and quizzes, as those are the types you will see on the exams. Familiarity with the subject matter makes everything easier. Also, using chegg/slader to check your answers and see how problems are worked out is very helpful as well.  And you might even find that these concepts start to make sense to you after a while.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/20/2019 16:23:52",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start all projects as early as possible - you will be thankful you did because you'll need the time to debug and test your projects. The quizzes are more or less helpful, so don't stress too much about them. There is a huge knowledge jump from 161 to 162 (though I don't know how this will change as the courses switch to Python). ",
        "When did you take this course?": "SP2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/21/2019 22:24:50",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "As it is now, this class is pretty cut and dry. There are 5 assignments relating to Github and a C program that is given to you, along with some straightforward quizzes, a midterm, a group \"final project\" and a final. The assignments involve writing tests and then writing about what you did. Assignment 3 is the most intense. The project consists of you and two people of your choosing figuring out exactly how some given Java code works, and then you all write tests for another buggy version of the code. You are given very clear indications of what to expect from the unproctored midterm and final. The material itself, as far as the lectures and the assignment code, isn't overly interesting, but the class is absolutely better than 361.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/23/2019 21:37:11",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I highly suggest finding group members that are engaging, ones that discuss the topics beyond just the worksheets. Make sure you understand how and why structures and sorting methods work. Focus on watching the lecture videos and worksheets rather than the readings when studying for the exams. The topics for the first half of the class are not too bad, but the latter half ramps up in difficulty.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/26/2019 19:49:50",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do all the problems on the exam study guides.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/29/2019 2:06:16",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Far and away the best elective at OSU. It's practical, Bailey is readily available and helpful during office hours, and it's interesting. Start the assignments early. And note that he gives you starter code, it's not explained very well how that part works but I initially thought I'd have to re-learn parts of calculus for the first project, but didn't realize he gave us all the math, our job was just to parallelize it.",
        "When did you take this course?": "SP2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/1/2019 0:33:09",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course should be taken after, or in concert, with CS 271, as there are some aspects of it that build and expand upon what's learned in Computer Architecture.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/2/2019 18:28:12",
        "What Course Did You Take?": "CS 165 - Intro to Computer Science (Accelerated)",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/9/2019 8:39:22",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "It's very difficult and I'm probably dropping out of the program due to the time intensity. I cannot stress enough. START EARLY. Take alone if you can or with a very light course. Spend weekends and nights on this. Toughest course in the program, and I've only got 4 left.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/9/2019 20:41:14",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Try finding a project that you might want to contribute to before even taking the course. This is absolutely the hardest part of the course. It was intimidating to make a contribution to a project and I had trouble finding a project to contribute to but it was pretty rewarding process. I can't really recommend taking this course though unless you just want an easy A and need a reason to contribute to an open source project. A project was added to this course this last quarter that a lot of people had problems with as it lasted way too long. I personally didn't care for that part of the course. I personally couldn't take a different elective but if at all possible, take something else as the best part of the course can just be done for free in your own time.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/24/2019 8:14:50",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Practice the sample quizes and exams. Find youtube videos to help with example clarification. Make sure your text editor is solid, I used Microsoft word. Just grind away at practice problems and homework examples and you got it.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2019 16:02:01",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Assembly, the language, is annoying, but I did find the worm's eye view educational. The class is very well structured, stuff is graded in a reasonable time frame, and the professor is present, fair and kind. He actually replied to an email I'd sent him multiple times, to make sure I understood. All in all, it's an example for other classes to follow.\n\nTips: The book is a bit messily laid out, but it's actually pretty good. Read it. Become best friends with Visual Studio and its debugger, especially the memory, register and flags panel. Don't be afraid to copy things to a register so you can see what's going on. You don't have to buy a calculator, you can use the Windows one, so get used to using its Programmer view. Do as much extra credit as you can. Do not fall behind!",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/13/2019 12:30:26",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/18/2019 13:21:00",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There's a few random assignments throughout the course, but your grade is all centered around your 2-person group project. Understand the project requirements from the beginning and do not exceed the requirements. You will only create excess work and problems for yourself in the final week. The class is very lacking in terms of SQL data validation, security, protection etc. There is a reliance that you already understand node or flask as you have write the front end and backend of your database project. The relational algebra assignment at the end makes no sense.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2019 8:29:33",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Laurel and Larissa were teaching this term and were very responsive and friendly. It looks like they are taking over this course while it is being re-worked for next year. The content in the class is VERY old. You can trace the assignments and worksheets back many years. Throughout the years, it has received little to none quality of life updates as the worksheets use inconsistent code style or are even incorrect. If you can do anything to make your life easier in this class is get in a good group. My group was great. There are weekly meetings and it is key to get a group who is engaged with going through these spaghetti worksheets. The greatest part of all this is the amount of time spent on the worksheets in the end makes up so little percent of your grade (15%) it is ridiculous. Assignments are copy-paste from worksheets so they are meaningless. Tests are the only meaningful part of your grade so you better pray to rng gods. ",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2019 10:20:27",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Take advantage of the free ALEKS review materials before this class if you feel like you need to brush up on any math topics. Give yourself ample time for homework and quiz/midterm/final review, as the topics you cover will increase in scope quickly. Take the practice quizzes/midterm/final multiple times and get comfortable with them, as you will see very similar and sometimes exact problems on the actual quizzes/midterm/final. Get ready to do more proofs than you've ever imagined you'd do. The grading was fair and the instructor and TA's were quick to respond. Trefor Bazett's Discrete Math tutorials on YouTube were EXTREMELY helpful multiple times when I was stuck on particular topics. I took this during the compressed Summer term and the pace was very fast and merciless, so do your best not to fall behind as it would be extremely tough to catch up. ",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/22/2019 1:07:22",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class was a shitshow. It was reworked and poorly done. The midterm average wound up being a D+ students then began pulling apart the poorly written midterm and points were given back. The issue was their was a poor correlation between the topics and structure of the midterm and the assignments. The textbook for this class is very useless. The lectures were OK but I recommend San Diego State University's lectures (there is a bald headed british guy) , the lecturer there explains AVL trees, Binary Trees etc much, much better then the OSU lecturer. The final for the term was better then the midterm but still had some ambiguity. In fact both exams I believe the professors knew some of the questions were written poorly because they included an assumption box on both exams where you could basically write down what you assumed about the questions and why and they would look at these while grading. Overall, I am one of many students who is disappointed with the quality of this class and hoped for something better. Not sure if other terms are better but the summer term was paltry at best. The group work in the class was another annoyance. I had a good group , but the group work felt superfluous and not really beneficial in any meaningful way that couldn't be accomplished in a more efficient manner. The course work wasn't difficult but the poor presentation overly complicated the course.   Do better OSU. ",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/2/2019 8:59:45",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The tests are faithfully taken from the lectures and weekly summaries. Convert that content into flashcards and/or retake those regularly. Make sure you are familiar with even the last few lectures for the final. The final project seemed significantly harder than the others, but I found the grading to be fairly forgiving for that one. In hindsight, I would recommend \"timeboxing\" that project so that you can be prepared for the final.  I took this compressed which required a lot of time for me, but I think they did remove one project for that version of the class so it's doable. I purchased a calculator for conversions which is allowed and is useful for most of the conversion problems. I would also stress that TAs are very helpful (for this class they were mostly available during the weekdays) and held office hours on slack. Also, piazza was useful. I even put questions up on piazza and slack in the hour prior to my exam for topics that turned out to be on the test and they were answered in time for me to understand - so that saved me some valuable points.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2019 9:14:21",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I was pretty lost the first few weeks of class, which starts with logic and expressions. This wasn't a typical 'numerical math' class, where you just operate on numbers. There is a lot of terminology and evaluating written statements. I think some general context and background of discrete math would have been helpful to ground the material in the real world, so if you want to prepare I'd suggest reading up on the subject and learning the basics of what this type of math is about and what it's used for.  As the class progressed I could start to see how all the modules fit together and tied into computers (as well as many other areas of life). Toward the end of the class I was enjoying the subject much more and wondered why I hadn't learned this stuff before. \n\nThe language in the required book can be confusing at times, and using the other recommended book or outside materials was helpful to parse some of the concepts. I also tried using an ebook version of the textbook for the first half of the class but eventually broke down and bought a physical copy around the midterm. I think having the physical version helps a lot when you need to skip around and review material. \n\nUnfortunately the midterm and final make up a HUGE portion of your grade (50%). However, the teacher provides some nice practice exams and the questions appear to be taken directly from the homework or quizzes with only slight changes. I thought the TA's and teacher were good at responding on Piazza and Slack.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/5/2019 9:27:41",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I had very little programming experience going into this course. The workload is challenging for sure and I found myself spending about 20+ hours per week, especially in the first half. Weeks 3 and 4 are particularly difficult and I felt overwhelmed by week 4, even questioning if this was something for me. I powered through it though and things started to get easier in the second half. The workload is still heavy but you can start to reuse a lot of the code you developed in the first half. By the end of the course I felt pretty good about programming in general. Be prepared to do a lot of reading as well, mostly in the first half. The book is well written and worth having for reference in the future. While you could certainly get by without reading everything and just looking things up online, I think the book helped me see how a lot of these concepts fit into the bigger picture. ",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/15/2019 10:28:45",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you have a little professional experience with web development, this class will be a breeze. Knowing how to use git from the command line and how to start/stop a node server (with forever) would be good things to practice before starting class. Do an hour long node tutorial on this so you can focus on learning the development concepts. If you want to prepare for the final project, learn how to setup a mysql server on your computer and make a connection from a simple node app. The mysql queries are super simple - no worries there.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/21/2019 12:46:46",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I was pretty lost the first few weeks of class, which starts with logic and expressions. This wasn't a typical 'numerical math' class, where you just operate on numbers. There is a lot of terminology and evaluating written statements. I think some general context and background of discrete math would have been helpful to ground the material in the real world, so if you want to prepare I'd suggest reading up on the subject and learning the basics of what this type of math is about and what it's used for.  As the class progressed I could start to see how all the modules fit together and tied into computers (as well as many other areas of life). Toward the end of the class I was enjoying the subject much more and wondered why I hadn't learned this stuff before. \n\nThe language in the required book can be confusing at times, and using the other recommended book or outside materials was helpful to parse some of the concepts. I also tried using an ebook version of the textbook for the first half of the class but eventually broke down and bought a physical copy around the midterm. I think having the physical version helps a lot when you need to skip around and review material. \n\nUnfortunately the midterm and final make up a HUGE portion of your grade (50%). However, the teacher provides some nice practice exams and the questions appear to be taken directly from the homework or quizzes with only slight changes. I thought the TA's and teacher were good at responding on Piazza and Slack.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/30/2019 4:47:50",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/31/2019 9:27:27",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2019 19:12:42",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start projects early.  Stay on top of concepts.  ",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2019 19:14:13",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Practice.  Doing the required assignments isn't enough practice to anchor the concepts in your head.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/3/2019 19:18:04",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take Colt Steele's Udemy course beforehand, and you'll get a lot more out of this class.  This class seems to focus quite a bit on odd exceptions rather than building things.  The Colt Steele Udemy class takes the opposite approach, and the introduction and framework will give you something to hang all of these little oddities and exceptions off of. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/8/2019 9:02:40",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you take this course after 290 and read/watch the weekly material then this class is a breeze. It takes some effort and is not a free A but grading is lenient and the material covered is not difficult. Start the project early.  ",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/12/2019 15:28:42",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/12/2019 15:29:11",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/12/2019 15:32:13",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I found the book and course material to be difficult to understand but with enough time spent slowly re-reading everything I was able to get it. I subscribed to Chegg.com specifically for this class which helped me a ton. They literally have the answers on Chegg so be careful not to use it as a crutch. I found it really difficult to see what was done between each step when reading the book or going over lecture materials and found Chegg had more in-depth examples as well as additional examples for other forms.",
        "When did you take this course?": "WI 2015",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/12/2019 15:34:21",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I found this course really interesting and the topics covered are SUPER useful and important for pretty much every other class, especially Algorithms. The provided lectures and material are pretty poor so make sure you do whatever is necessary to understand what's being talked about. The concepts covered in this class are fundamental to lots of programming so it's easy to find outside resources.",
        "When did you take this course?": "SP 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/12/2019 15:38:11",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is hands down the worst class I have ever taken, ever, at any school or program.The provided material is confusing and doesn't explain what you're doing or why. It fails to connect any previous topics to later topics and frankly made me lose all interest in Web Development. I was told by numerous people to take Colt Steeles Web Dev course on Udemy before taking this class and I'd recommend that to anyone else. It's around $12 and supposedly covers all the topics for this class except way better. Full disclosure, I haven't personally taken Colt Steele course but I'm planning on it cause I actually wanna learn Web Dev and not hate it.",
        "When did you take this course?": "SU 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2019 13:08:44",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Be honest about your class understanding with your group mates, be engaged in the Piazza discussions, start work early, and keep good notes. ",
        "When did you take this course?": "FA 2018",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2019 13:10:10",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class was the most difficult for me. Ask lot sof questions, work lots of examples, read all of the notes and watch lectures.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2019 13:13:17",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The instructor is terrible, so create great relationships with your group mates to get you through the semester. Write more than you think you need to, study the lectures for the exams, and be prepared to decipher a lot of confusing and vague instructions!",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/13/2019 23:21:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The algebra that you take on ALEKS will not be enough for this course. Best way to prepare is to buy the solutions guide to the textbook and do extra practice problems that resemble the assignments. Pay particular attention to the algebraic techniques. There is a good reason that you are taught Boolean Algebra initially... it carries on for the rest of the quarter into math induction and proofs.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/1/2019 1:16:42",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Take an intro to python programing course and you will be fine.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/3/2019 7:58:08",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I am not really sure what advice I can offer here. The hardest part of the class, for me, is weak/strong mathematical induction around week 4. Things get dramatically easier after that. I am coming up on my finals and still really don't understand induction. The best advice I can give is put something on paper for every question even if it is blatantly wrong (within reason). Whether we are talking about quizzes, exams or assignments, I found the grading to be abundantly lax in this class which I think is its saving grace.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/3/2019 19:16:13",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Use outside resources especially on topics before the midterm. Make sure you understand homework and quizzes prior to midterm and final. Keep on top of the material as it is easy to fall behind. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2019 15:34:52",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is not a class where you can either read the text or listen to the lectures. Some material that's tested on is present or elaborated upon in one set and not the other.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2019 8:08:45",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Stay on top of the material. Very text heavy",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2019 22:26:46",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Make sure your team is communicating often every week so that deadlines are hit",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2019 5:32:02",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2019 6:23:49",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't expect to learn the ins and outs of testing with the garbage game code that's used throughout the quarter. Lecture material is ok but the assignments don't match the material as well as it should. If no major change has yet been made for Winter 2020, make sure you play & learn the card game Dominion - it'll help a lot. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2019 8:34:07",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Doing a web dev course before this course would help immensely since it's not due for a revamp until late 2020. The front-end portion will be easy, but once you reach the backend prepare to spend a lot of time trying to understand why your requests are not working. All in all it's an easy course but don't slack off.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2019 14:36:41",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The tests are quietly worth a lot of points. I would really study these. I did the best on the final test after studying the content using flash cards. It's kind of sad because I could see the vision of trying to replicate a professional development team, but it puts a lot of stress on the situation when certain group members openly don't care that much about their grade and you're stuck with them. I spent a lot of time micromanaging distracted or non-committed group members, so my grade felt pretty outside of my own control, which was the really stressful part of the class. I was more stressed out in this class than other more technically difficult ones for this reason. I would suggest accounting for group members that might flake out and take control of the group early on along with the few members who actually do show up.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2019 19:52:39",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course is being redesigned, so this review may be outdated. Each week there is ~1 hour of lecture and ~50 dense pages of reading. For the most part, they cover the same material except the reading goes more in-depth.\n\nMost of your grade comes from Canvas quizzes, including the proctored midterm and final. This includes weekly homework quizzes, 2 quasi-exams (non-proctored), a midterm and final (proctored), and make up 69% of your grade. There are practice quizzes available after every week, and they are excellent prep for the midterm and final. If you're doing well on those, you should be very confident going into the exams.\n\nThe programming projects are by far the most intellectually challenging part of the course. Start them early and do as much extra credit as possible. This could easily bump your final grade by ~3% or more.\n\nThe labs are a nice way to demonstrate what's being taught in lecture, and they are easy. Do them early, because they can take longer than you think.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2019 2:20:59",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The projects are large enough that asking for help becomes difficult. Do your best to stay ahead. However, the course is changing from C++ to Python and python from my understanding doesn't directly deal with pointers. Not as easy as everyone said it would be. Yes, you will spend a lot of time in this course.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2019 10:09:46",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course is front-loaded: I spent between 14-20 hours per week on it during the first 3 weeks, then about 12 hours per week after that. Dynamic Programming was the most time-consuming assignment. The textbook is dense and difficult to understand, unless you were previously a math major. I reviewed the lecture PowerPoint PDFs instead of watching the lectures. Most of my learning happened from Abdul Bari YouTube videos, GeeksForGeeks, and general internet searches. It is challenging material, but it's made even more challenging due to having to teach yourself every week.The instructor Julianne Schutfort was reasonably active on Piazza but sometimes gave confusing/conflicting advice. This isn't a fun class, but it does lay an adequate foundation for learning different approaches to solve problems.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2019 10:11:25",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This has been one of my very favorite classes in the program so far. The first 2 weeks have very long readings and lectures.  Don't worry, it eases up. Programs 1-4 are quick and easy.  Program 5 is a step up in difficulty.  Program 6 is the most challenging, so start early on this one.  One of the most organized and well though-out courses in the program.  It is optimally designed for you to learn.  The weekly summaries are open book, and you can take them twice.  This is a great way to learn!  You take it the first time and really find out what you don't know, then you review those concepts more for the 2nd attempt, resulting in real progress.  Quizzes are also open book, but you only get one chance.  2 exams are 40% of your grade, and they are no joke, but about 80% of the questions follow the exact format (or are exactly the same) as ones found on your summaries and quizzes, so you know what to prepare for.  Having been in the IT field for 18 years now, I can offer this advice.  Don't rush through this class, the concepts you learn here will be very helpful for you during your career.  Not that many will be writing Assembly code, but understanding how memory is organized, and how the computer really works is a foundational concept that will pay dividends long into the future.  Take your time, learn the material well, and you'll have a great semester.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2019 10:21:04",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is one of the most well-organized and clearly laid out courses in the program.  Watch the lectures, do the reading and the provided exercises each week and you'll be in good shape for the many open-book quizzes.  The midterm and final are pretty rigorous & detail oriented, but again if you go over the provided materials you will be set.   The extra credit on the homework is usually not worth it unless you really want the extra practice - they'll have you do hours of work for an extra point or two.  Your time is better spent just making sure you get all the points on the main assignments/hw/quizzes IMO.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/12/2019 10:29:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I came in with an unusual level of preparation for this course, so I'm not the best judge of difficulty.  The structure (two weekly assignments, weekly 2-hour quiz, bi-weekly discussion post) means that all students will spend a lot of time on this course.  Most of my classmates who took both 161 and 225 spent at least 80% of their school time on 225.\n\nThe grading is extremely lenient overall, rewarding effort and attempts with large partial credit allocations.  The professor was extremely present on Slack and Piazza both, and she seemed to be working hard to answer questions posed by students.  Please ask your questions on Piazza and Slack.  (And, goodness gracious, please understand that \"Anonymous\" posts on Piazza are only anonymous from the students -- the instructor and TAs know who posted what.)",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/13/2019 5:21:55",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do solid work on the programming and quizzes where your effort will pay off because the exams are difficult to score well on. You can follow the grading rubric for the programs and do the assigned exercises to prepare for quizzes to get near perfect scores.",
        "When did you take this course?": "Fall 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/13/2019 21:08:32",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Course needs a reboot. Lectures are the worst I have experienced thus far. Listen to the class lectures at 2x speed. Doing this barely made them tolerable. If you want a superb explanation of the topics, look at Abdul Bari's youtube page. He was a life saver. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/13/2019 21:29:14",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This course has been one of my favorites thus far. The assignments are very challenging, but they provide a great sense of accomplishment once you complete them. Don't wait until two days before the due date to start and then bombard Piazza with questions in desperation. The assignments are worth 75%+ of your grade, so get a jump on them. The instructor and TA's were top notch! They were all very responsive and eager to provide help whenever needed. One of my favorite aspects of this course was the lectures. They are SOOO good compared to many of the others I have experienced up to this point. Awesome job Brewster! If you take the time to learn the concepts for each programming assignment, the final will be a breeze.  ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/16/2019 11:22:38",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Start early with homework. Make sure you do every exercise and read each assigned reading. Try doing extra problems. The class is not hard as long as you’re studying every day. Midterm and Final exams guides are there for a reason - do every problem listed there. Make sure to do problems in the lecture slides as well as in weekly quizzes. The TAs are very helpful, but make sure that you read assignments and do the problems first.  ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/16/2019 20:48:06",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is definitely front loaded due to all of the math you may have forgotten or need to learn. Once you get over that hurdle, you will then need to absorb all of the material from the lecture, outside videos (Bari), and other resources you can find online. Most lecture videos from the professor are ok except for a few. The book is horrible and dense, didn't really need it. Do well in the HW and quizzes and you will be in good shape come test time.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/18/2019 8:21:53",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you have a good group this class isn't terribly difficult. Grading is lenient and the material isn't anything too complex.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/18/2019 16:37:24",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't bother reading the textbook.  It's honestly a big waste of time.  The lectures are useful but I learned the majority of the material through youtube videos.  Don't stress the fine details.  Focus on the big ideas and concepts and you will do just fine in this class.  ",
        "When did you take this course?": "Fall 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/19/2019 10:57:31",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This course was pretty easy, and the grading was lenient if it looked like you put in a good amount of effort. The lectures will take you a fair bit of time (3+ hrs per week), but the material was very interesting and the labs were fun. Professor McGrath was also very engaged with the course and was always willing to answer questions on Slack.  My only gripe is that the material is starting to become outdated (The lectures were recorded in 2015). One of the labs used a VM with XP, for reference. That said, the lectures are very good, as they are taught by experts from Intel/McAfee, just need some updating. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/22/2019 11:55:15",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "They don't care about this class...I gave less and less effort each week and still got an A. Im pretty good at BSing write ups, so maybe I have an advantage there.\n\nSome interesting topics, some insight into hacking, but one of my least favorite courses behind SE1 and SE2. Kind of turned me off from pursuing a career in security.  ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/23/2019 12:32:48",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I took this class as part of the first Python cohort (Fall 2019). If you'd like to have a much easier time the class, I recommend taking a Python class on Udemy to get ahead learning the material. The assignments consisted of 2-3 weekly coding assignments, 2 group projects (which were written assignments), and weekly quizzes that are meant to reinforce your understanding of the material. If you have prior programming experience, this class should be a breeze. And even if you come in to the class with zero coding experience, the class is set up so that beginners can understand it. The weeks with the largest workload were weeks 9 and 10. My biggest piece of advice is to make sure to test your programs thoroughly and read the assignment specs carefully—the single Gradescope test that is run when you submit is not reflective of all of the tests that will be performed after the due date deadline.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/28/2019 17:50:30",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class was extremely tedious. I took it with wendy roberts and frequently found myself writing 20-30 page documents (not even counting the code). The assignments were repetitive and I can say aside from the readings I learned an extremely minimal amount from this course. \n\nOversight was also needed for the TA's. Some TA's were awarding students with 2-4 pages full marks while other students with different TA's who turned in upwards of 20 pages were having marks taken off for ridiculous items. The professor also as the semester progressed began to ignore emails from students. \n\nI would say wait until the revamp unless you want to be extremely frustrated. ",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/30/2019 11:35:32",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/31/2019 10:46:41",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class will only be as hard as you make it out to be. If you feel really passionate about doing a specific project, it's on you to find team mates who are willing to follow you. Do not expect a bunch of random team mates who are forced into your group to share the same passion as you do. Not only is it unrealistic it's unfair.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/6/2020 11:03:36",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Pretty difficult class if you are early on in the program, but may be easier/take less time if you take it later on. Subject material can be tough to wrap your head around and the coding assignments may feel a bit tedious.  Take time to watch lectures and try to keep up with the reading.  Practice problems, quizzes, and summary exercises are very helpful for preparing for the midterm and final. Conceptual and term/definition type of questions were more difficult on exams than the coding portions.  Do EC on assignments if you have the time to, but it is generally not worth stressing over unless you really need the points because you only get 1 point per EC (about 2-3 points available per homework) and they tend to be more difficult or time-consuming.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/23/2020 7:49:26",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The first half of the class is more work and harder concepts in my opinion. Tackle the first few weeks and do the additional practice questions. Rework the homework if you do not understand it. Redo the mock and real quizzes. The exams are graded generously, but still require a fair amount of comfort with the concepts. Second half of the class is much less of a slog. Honestly the hardest part of this class was motivating myself to do the work because it is not terribly interesting. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/27/2020 4:30:45",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Since the course is now taught in Python, it's certainly worth getting a head start via any of the free online resources that teach beginner programming, many of which also use Python. The rigor is somewhat uneven, with some weeks requiring very little (<2 hours) work, and some closer to 10. I had experience with programming going into this class and found it easy, but also rewarding.\nSide Note: If you've already got some experience, be prepared to write more comments and docstrings than you're used to. Other than that, it should be a breeze.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/10/2020 12:47:38",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is a lot of work, but it is by far the best in the program. The assignments are clear and the materials are truly there to assist you in completing your projects. The instructor is extremely approachable and knowledgeable. Designate a large amount of time for this class, but have fun taking it! The assignments are really great.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/11/2020 18:37:09",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start the project as early as possible.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/19/2020 20:11:12",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Data Structures Review from YouTube and group work are key to succeeding in the course",
        "When did you take this course?": "FALL 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/21/2020 15:24:54",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you have any prior programming experience, you will likely find this course very simple. If you don't, I highly recommend taking Harvard's free online course called CS50; It is much higher quality and more in-depth. It will be harder to complete, but absolutely worth it. 161 is easy, but I worry about how prepared students will actually be for later courses after taking it. Although, I've heard that 162 is easier now that it's been switched to Python, so maybe a slower ramp-up through 161 and 162 is what OSU is going for?",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/27/2020 11:31:41",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I would highly recommend taking this class as early in the program as possible. It's--in my opinion--the best class in the entire curriculum and you learn an enormous amount by taking it. Yes, some of the projects are difficult and they require that you actually read through the lectures and readings. But, if you do, you will have all of the tools necessary to complete every assignment. Will the assignments still take a good amount of time? Yes, but you'll have fun completing them. The instructor provides grading scripts to run all of your assignments against, so you will know that you have at least gotten as many points on an assignment that the grading script covers. Some points are still left for grabs to award to styling, commenting, and referencing sources. You are not expected to know everything prior to an assignment, but you are expected to show exactly where you learned different concepts. If you comment nearly every line and reference every Stack Overflow question you looked at, you will have absolutely no problem getting full points on every assignment. Start the projects early, work on them a little bit every day, and you will surely find this course be enjoyable and very well worth your time.",
        "When did you take this course?": "WI2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/5/2020 8:00:07",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The actual material you learn in this course is middle of the road in terms of difficulty. I came in with a strong math background, but still had to put in the time to fully understand what was going on. Definitely a course where the more you put in, the more you get out of it. The sheer volume of work in this course is what makes this class truly difficult. The class is very front loaded(quizzes/homeworks/readings are longer at the start). Other people will reiterate this, but stay ahead and on top of this course, at least through the midterm. The TAs and instructors were all incredibly helpful, so utilize them!",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/6/2020 4:27:50",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Do some quick you tube tutorials on basic coding in any language before the class",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/13/2020 0:15:23",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class is definitely challenging on the theoretical level and requires you to do a lot of higher level thinking. They're not joking when they say prepare to be wrecked. Take it alone if you can, if you want to have time to intimately understand how the algorithms work. Everyone is saying don't read the book, but I felt that otherwise you wouldn't understand the material on a deeper, theoretical level. For me, really battling my way through the book and understanding what is happening actually made the rest of the class easier since I could comprehend all the moving pieces of the algorithms. The lectures are best as a supplement to the book, it's more of a high-level review of the concepts. Watch them at 2x speed (which will result in them sounding normal, to be honest). Supplemental YouTube videos from Abdul Bari and Tushar Roy definitely help solidify and give examples of certain implementations of algorithms. But don't skip on the reading if you want to understand how/why the algorithms work and how to think like a computer scientist. Also, I recommend reading Grokking Algorithms before taking the course, it's a really short read and can be done in under a week. It also has a few algorithm concepts not covered in 325, and it introduces you to dynamic programming which made that portion of the class a breeze.",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/14/2020 11:20:52",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Understand how the conversions work early on (hex,binary,decimal, twos complement). Start early on understanding parity bits, and hamming code error detection/correction, because they're key concepts. Understand register memory operations, such as how the registers change for each instruction, how the stack works and FPU, which are also key concepts in the coding portion of the class. Rest of the topics in the class were easier to understand, but if you can understand these key topics, you should be able to easily obtain an A in this class.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/14/2020 17:50:13",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I found the subject matter almost unbearably tedious, but that was through no fault of the course: the quality is high. The lectures are good, the frequent summary exercises are actually really helpful, the expectations and requirements are crystal clear, the tests are fair and the grading is fair. The instructors and TAs were very, very helpful on the forum and Slack. If every course in the program met this same standard of quality, it'd be spectacular. Word of warning: while most of the programs are pretty straight-forward, the sixth program is a huge step up in difficulty from everything before it, so start it early.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2020 14:52:53",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Super easy class. I didn't know python and the \"projects\" that you do are all python based. Hardest part of the course was working with PyCharm for me. You get to pick your team for the group project which is a nice and welcome change from 361. Group project can easily be broken into three chunks that each person can work on independent of the others in the group. No proctored exams. Kinda a waste of a course IMO.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/16/2020 11:46:33",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The class starts out pretty east and ramps up in the second half, so be ready for it. Start reading and assignments early. This course is very well laid out, the textbook and lectures have all the information you need to succeed. There is plenty of information available online too, but if you do all the reading, lectures, and practice questions you will probably do a minimal amount of web supplementing for this course.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2020 12:14:49",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course is quite challenging, but I did think that it was very well made. The assignments can be difficult and it's important that you look to the example programs and lectures before tackling them. The lectures are useful, the book is helpful, I only wish that I spent more time actually understanding how everything we learned fits into what we do in other classes as a whole. Try to soak up as much info as you can, because everyone says this is a foundational\nclass for many others in the program. ",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2020 16:33:12",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Take a Udemy course or watch Youtube videos for a great foundation.  You can never get enough practice in programming.  Learn to read code for clarity and understanding.  Simply writing a program only through trial and error will not give you a firm foundation.  If you can read code before executing it and understand what is going to happen you will do very well in this course.  Share your solutions and critique each other's programs for additional practice.  Some of the projects are just a couple lines of code, while others towards the end are 50-100 lines depending on how you design your program.  Sometimes you'll spend a few hours in the week for the module and sometimes you'll spend 15-20 hours.  I've heard that students often have trouble with modules 1-5 or 6-10.  So if you're having a hard time with the first half, then it will likely get clearer for you as you keep going.  The TA's were great and readily available.  Same with the instructors...everybody is eager to help and encouraging. ",
        "When did you take this course?": "Winter 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2020 20:52:27",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is essentially a logic class. There is math involved but that is secondary to the logic. Focus on understanding the logic and definitions and then the math portion. This class doesn't use trig or calculus, so basic algebra will suffice (exponents, inequalities, add, sub, div). With that said, you can get the math correct but miss points for incorrect logic so focus on the logic.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2020 0:41:51",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The structure of this course was terrible, and you waste so time writing in pointless discussions that nobody even cares about. Quizzes were like having a 2 hour midterm every week (a bit much) and there was always a week lag between the quiz you were due and the assignment for that week - would have been much easier to sync them up.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/20/2020 15:43:14",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The concepts in this class weren’t terribly hard, but the class was handled like a complete circus. Quizzes and assignments would take up to two weeks longer to grade than indicated in the syllabus (meaning 3 weeks without grades and going into the midterm/final with heavily weighted assignments still out), TAs offered no feedback on grading decisions, and the lectures and textbooks were mostly useless. Also, the grading was not lenient for me at all. Any slight mistake would guarantee I’d lose the maximum amount of points possible in a question: for example, I lost 5 points for putting “if” and “then” in a proof supposition once. Take MTH 231 or get another discrete math class transferred in. Just don’t take this course. You are quite literally paying $2,000 to teach yourself material and become beholden to the whims of teacher’s assistants. ",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2020 7:15:12",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Stay ahead on all of your coursework.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2020 10:12:52",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This was a very easy class. Watching the lectures is mostly a waste of time--you can just look at the lecture notes. You choose your two partners for the group project at the beginning of the quarter but don't work on the project until the last two weeks of the quarter. This class doesn't teach you much, but at least it's a good one to pair with a harder class.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/22/2020 20:14:56",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I found a few TAs that were helpful and consulted them a lot. It was really hard for me, honestly. My kid kept saying I was ignoring her, but I still managed an A- it’s within reach. The grading scripts help, but it takes a considerable amount of front end work before you get your code to pass any of the script. Just please start coding each project as soon as you can.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2020 13:57:29",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I took this class during the quarter it was switched to Python. From what I understand, there used to be weekly programming assignments, a programming lab due every other week, and a group project or two. We only had to do weekly assignments and a few group code reviews. The weekly assignments varied in length. Some weeks they did not take very long, other weeks I spent nearly 20 hours working on them. But definitely not as much as time as this class used to be from speaking to past students. The weekly quizzes were super easy. The final was not though. I think the final took me twice as long as even the hardest weekly assignment. But I also learned a lot during the final. As long as you ask a TA for help when stuck, you'll ace this class. ",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/23/2020 22:29:14",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "The textbook OSU uses from MIT assumes a higher math background than what can be obtained from this program. It reads more like a reference book than an instructional device. While the lectures are unpopular, it serves as a better introduction than the book. That being said, the course content is inadequate and outside source use is a necessity. The homework is the type that makes you go \"huh?\" It is time consuming. Despite the challenging course the instructors design the grade scheme to work in your favor. As long as you do the homework and make good exam note sheets it is difficult to fail the course.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/25/2020 16:35:53",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get a good group as it was a term long project with you and 3 others. The content itself is not very difficult but it is more of having to do the work. A lot of writing, and thinking about what the instructor wants on the assignment, as opposed to anything technical. The whole class revolves around testing an already created project online, and doing things to test the code.",
        "When did you take this course?": "Winter 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2020 9:40:56",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The book is actually pretty helpful to be honest. This class just scratches the surface of x86 assembly. Before starting, Learn how to debug in VS and get acquainted with the MASM compiler that is used to compile x86 assembly into executables. This class will make you bang your head against the wall toward the end as the projects grow in size. The best advice I can give for that is start every project early and ALWAYS attempt the extra credit when it is given. Resources online for x86 are definitely lacking so prepare yourself to do a lot of guessing/checking when it comes to writing programs. Redfield was a pretty good professor and was very active on Slack with the students.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2020 16:50:41",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Best structured class in the program by far. The book is super dense but is well worth the read. To do well you really need to read the book well. Assembly was a bit like learning how to program all over again for me. It takes practice so you can't mail in the programming assignments. The last 2 programs took forever so start early no joke. There was an announcement which stated severe consequences for students caught plagiarising and there were several cases found that term. Exams were challenging but doable. DO ALL the Summary Exercises & Quizzes & Practice Problems and you'll be good for the midterm/final. Thanks COVID for bailing me out of that final lol.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "4/8/2020 10:18:50",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/16/2020 8:08:25",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Brush up on Algebra before this course. Especially exponent rules. Also, get familiar with using LATEX to write mathematical symbols on Microsoft Word. Other than that, be prepared to use the book... a lot. You will need to comb through the book and pay attention to the nitty gritty details that are covered in each section. The lectures are OK but don't provide enough detail and rigor that are required for the quizzes/exams. Do lots of practice problems, go to outside resources for help, and you'll be fine. But be prepared to spend a lot of time on this course. If you have any experience with Python, you should pair this course with 161, as 161 will likely be a breeze if you have experience. My first quarter I took 225 and 161 and probably 90% of my studying time was devoted to 225.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/18/2020 14:21:13",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Actually took MTH 231 - and my biggest tip is to study the proofs the professor provides & to read the book. I often found the book to be much easier to understand than professor notes. ",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/22/2020 11:36:03",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I went into this class with no prior CS experience, and it was my first class at OSU. If I could do it differently, I would have taken it at a comm. college to save money (you can transfer up to 12 credits). I thought the class was very easy in the beginning, and then difficulty just ramped up towards the end. Other students have commented before that it really depends on the TA you get, and I completely agree. I had a TA who docked me for tiny formatting things, largely based on preference. When we worked in a group, other students in this class shared that this wasn't their experience at all (confirming that difficulty depends partially on TA). However, because it was my first class, I felt like I learned a lot. ",
        "When did you take this course?": "Su 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/22/2020 11:43:21",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I went into this program with 0 prior CS expereince. After taking 161 and 162, I ended up in this class because I felt I was struggling in this program, and the advisor I spoke to said this was one of the easiest classes. I have to agree with her assessment. For people who have prior web dev experience, I could tell it was a REALLY easy class. The best thing about this class are that the book is OER, so you don't have to pay. I bought the Colt Steele Web Dev Bootcamp on Udemy since it was recommended by redditors (don't pay more than $11 for it - if you see it listed at a higher price than that, try using incognito mode or switching to a diff device). The bootcamp was helpful in the beginning of the course, but the second half is all about node.js, and that's where I struggled. I think this can be a really fun class. You have lots of room to be creative with the final project. For the final project, you have to make your own website. I saw examples that looked like they could have been made in the 1st week of classes, and ones that looked extremely well-put together. ",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/6/2020 13:03:00",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class will come as a surprise if you're used to just driving in and getting all the code done. This class actually makes you study. Read the textbook, or at the very least, watch the lectures. Taking the time to learn all the conversions and definitions taught in the first couple weeks will make the rest of the class a breeze.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/6/2020 21:56:55",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/11/2020 10:45:22",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I was able to get an A in this class. Review every HW and quiz in preparation for the Tests. There are excellent videos on YouTube. Any subjects I had questions about, I would check on YT. The lectures were not that useful.",
        "When did you take this course?": "WI2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/14/2020 19:23:49",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This was the 419 course offered Winter 2020, not 467.  It was horrible.  Pure trash and frustration.  The instructor seemed nice enough, but all the design choices and most instructor answers were simply no good.  It appears that OSU will no longer offer this course.  That's a good thing.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "5/14/2020 19:24:19",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This was the 419 course offered Winter 2020, not 467.  It was horrible.  Pure trash and frustration.  The instructor seemed nice enough, but all the design choices and most instructor answers were simply no good.  It appears that OSU will no longer offer this course.  That's a good thing.",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/9/2020 16:06:14",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The class is just a huge time-sink. Having taken or done previous math classes will most likely not help you. It's not hard to get a good grade, but it does take a lot of time to get through the required materials, any outside sources to fill any gaps you may have, the assignments, and the weekly 2 hour quizzes. This quarter had the benefit of no midterm and no final and it still stressed me out getting through everything each week. ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2020 11:33:23",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "New redesign, in an intentionally easier quarter due to COVID issues.  Light workload.  Light lesson modules.  I'm honestly not sure how much I learned.  I think/hope enough?  I made Gradescope happy, which seems to have been important on each assignment.\n\nThe instructors and TAs are present and helpful.  That's nice, and it's not true in some other courses.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2020 16:37:46",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class consists of a project in a group of 5 students while learning about software delivery life cycles and software design. The course material is a good introduction and contains a lot of good reading references to external sources. The project helps to reinforce these concepts with tasks related to those concepts interwoven between the normal weekly work. ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2020 16:51:22",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class was surprisingly easy for me. Due to covid-19 the worksheets and exams were dropped for the semester, so maybe that played a big role.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2020 22:28:10",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2020 4:42:16",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I think the class was probably easier than normal this quarter, as the grade was based entirely on 4 programming assignments of about 25% each.  I had no programming experience prior to 161/2, but I found these assignments to be really doable.  All gradescope tests are visible when you submit an assignment, so you know exactly what you need to fix, and help is readily available.  Again, with minimal programming experience, I was able to finish the class with about 98%.  The portfolio project took me about 10-12 hours to get a 100%, whereas the 162 project took probably 60+ hours to come out with about a 73%. I think that speaks to both the relative difficulty of 162, and the relative easiness of these assignments!  I feel like I did grow through this class, but I still have a TON to learn about data structures.  Taking 271 simultaneously definitely required that I spend the vast majority of my time on 271.  ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2020 5:39:24",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start early on the Programs! Some of these can get tricky, and there's not really any shortcuts. For the midterm and final, studying past quizzes/homework should suffice. This class, and program 6 in particular, was very difficult, but very rewarding!",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2020 18:53:01",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class covered Dynamic Arrays, Linked Lists, Queues, Trees and Hashmaps. The explorations covered other data structures but there were no assignments to reinforce the concepts so I just skipped them. Graphs and AVL trees were mentioned but not covered in any rigorous way. To be honest, a solid foundation in Python helps the most in this class. If you did well in 161/162, you are going to be well positioned to make this class your back burner class. No book, no exams, so its pretty much a gimme if you do the work and double check your submissions.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2020 9:32:47",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Pretty easy course--partly because of COVID and what I'm guessing is a reduced workload, but also because it is just so straightforward to implement this stuff in Python. There was such a big gap between modules that I sometimes forgot I was even in this class--I really wish I'd taken a second course with this. I didn't think the open source online text was very good, but there are lots of YouTube videos out there to supplement things for you.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2020 7:36:34",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "You get out what you put into this course. I took it the first semester after it was redesigned and really really enjoyed it. I took it alongside 362 which was really, really great. All of the testing skills learned in 362 are learned at exactly the same rate that you would utilize them in 464.\nHannah Scott was the instructor when I took it and she is phenomenal. She's engaged and is very responsive to students. She's always positive and seems to really care about the well being and success of her students. I always take courses with her if I can.\n464 involves working with real open source projects. I stuck with one project the whole semester, but you don't have to. The course material more then prepares you for the assignments, so if you read them, the assignments can be very easy. I say \"can\" because you could probably scrape by doing very little work and still get an A in this class. I would encourage you to challenge yourself in this class and really try and do some real world work on an open source project; the class provides a safe space to try out new skills that could ultimately be a portfolio project for you. \nI know reviews of this class in past semesters were less than stellar, but the redesign made it a class I really enjoyed. It was one of the best experiences I've had in this program, and I'd encourage anybody interested in open source to take it (alongside , 362 if you can).",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2020 10:14:00",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "took the math version of this course. The exams are completely unreasonable and wrecked my otherwise fine grade. Take the CS version if at all possible ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2020 15:54:52",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I suggest setting a schedule and sticking to it.  There is a continuous, decent amount of work in this course that is made more enjoyable by breaking it down into parts each week.  The TA's are a great resource, so use them if you have questions.  Also, the professor makes himself available to students on Slack, which is great.  Take the weekly summary tests twice if you can, as it will help you on the midterm and final.  Also, start writing your programs early, they are hard after the first one.  This class is full of great information.  ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2020 19:58:20",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/17/2020 9:57:33",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do not take the Math version of this course. The class average on both the mid term and final were in the high 50s. The professor informed us that between the notes, homework, quizzes, and practice tests that we should be well prepared for the tests, but this was not the case. In fact, the provided work was not nearly enough and I suspect that those who did well (B and higher) probably spent a ton of time going through the textbook that was supposedly not needed. While it sounds like the CS version has a lot more required work, it also probably prepares you better overall for the mid term and final, which weigh heavily on your final grade.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2020 14:55:49",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "The hardest part is picking a project without a doubt. Just find something you like to dive into and can actually pull to work on. You should start thinking a head of time on how to properly contribute. The class does not hold your hand onto teaching you the material. But rather checks to make sure you are doing it. Also have realistic goals and proper time frame of things! ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2020 16:17:30",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Try to get something out of the weekly summary and use sample math problems to build your exam \"one sheets\"",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/18/2020 20:13:01",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "No exams I’m pretty sure because of covid? But overall the course was easy, assignments weren’t bad given a skeleton for each one.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/19/2020 13:20:49",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class is easier now than in the past when it was taught in C++, but that doesn't mean you can skate through it. Some of the programming assignments have very detailed requirements and take a lot of time to sort through. As mentioned in other reviews, the portfolio project is a doozy. There is a heavy emphasis on object-oriented programming, so watch some youtube tutorials on Python OOP if you want a leg up.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/22/2020 19:09:45",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Be sure to start the assignments early because you WILL run into issues along the way especially if you are completely new to programming, or suck at technical computer stuff! Otherwise this is a very manageable course. ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/22/2020 20:16:28",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I'd either pair it with UC San Diego 'Data Structures and Algorithms specialization' or get a 'Data Structures and Algorithms in Python' textbook ( Goodrich, Tamassia, Goldwasser). Maybe both. If you are not interested in extracurricular activities, the homework guides are sufficient unless you overthink. You decide how hard you'd want to work and how much you'd want to get out of the class. ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/23/2020 9:09:22",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Your group is everything with this class. They allowed us to choose our own groups which is great if you know other students already who are hard workers. But if you don't know anyone, I recommend signing up for a group as EARLY as possible. Because you will choose from a pool of people who are also being proactive which I have found to be a good indicator of how they will behave during the term. We were given a list of project ideas and asked to choose from them so you could also choose your group based on interest in a project but again, I'd recommend to choose mostly on who is proactive and early to sign up. As a group, you can decide how ambitious you'd like to be but even if you do the bare minimum, I found that you can still come away with a pretty impressive project for your portfolio. Each week there were unproctored quizzes based on the reading and you could retake them as many times as you liked (highest score kept). The reading was easy most weeks and majorly dense a couple of weeks (they recommended to skim the reading on those weeks). It was actually helpful to learn about Agile and Software design etc. Those are things that are usually mentioned in interviews so it's good to actually about them now. The grading was super lenient. Basically if you and your group actually work together, it is super easy.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/23/2020 16:29:48",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "It is useful to put some time investment early in the class as there are many concepts to absorb initially. The exams pull from weekly summaries and lecture exercises so there is nothing strange. The assignments are easy but debugging in the later assignments can be time consuming. While the content was interesting the lesson material was a bit boring. I am sure I will not do hexadecimal conversions regularly in the future. Pay attention to signed/unsigned.",
        "When did you take this course?": "WI 20",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/23/2020 23:53:59",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "One of the better courses in the program. The professor gives most of the code, you just literally have to do the parallel parts usually. The professor truly feels like he cares, and it is nice to see. One time I was having trouble and posted on Piazza and he PERSONALLY emailed me to look at my code. That has never happened this whole program! Definitely recommend. And the subject isn't bad!",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/25/2020 6:18:17",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is the pinnacle of busy work. Textbook does a very poor job of explaining a lot of the material and the professor is equally terrible at explaining anything. Expect this class to be a huge time sink due to how it is designed. Every week you have a 1.5-2 hour quiz, so effectively every week is a midterm, although the worst 2 quiz scores are dropped and quizzes only count for 30% of your grade. This was during COVID, so this may change. Lean as much on the TAs as you can. They will be a lifesaver for you in this class!",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/27/2020 8:19:36",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "C skills and Bash scripting make this course much easier, but this is reviewed in the course at the beginning if you are rusty.  The professor's lectures are probably some of the best in helping you to understand the material, and you don't need to use any resources besides what he provides.  The professor is very engaged with the students, and was by far my favorite in the program.  Taking this course will help you write high performance code even when not in parallel, so I would highly recommend it.  ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/27/2020 10:17:16",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "For the problems that were due each week, also do all of the related problems in the book as well. For the midterm and final, keep doing each of these problems until you can easily finish them. ",
        "When did you take this course?": "Winter 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/27/2020 10:31:36",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The first several weeks of this class were not too difficult. The first 4 programs are not very complicated, and the midterm was fine. I just re-did the weekly summary questions and quizzes over and over, and put example problems on my \"cheat sheet.\" BUT...after the midterm is when I found the class to take a turn in the level of difficulty. Programs 5 and 6 were very time-consuming, as you now have to work with the stack and pointers. Start as early as possible on these. Also, I found the final to be much more difficult than the midterm. Make sure you know about memory addresses, the different addressing modes, and how they change after different parts of a program are executed.",
        "When did you take this course?": "Spring 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/1/2020 11:22:33",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I took the on campus version of this course in Spring 2020, which made for a very unique experience due to the pandemic. I found it hard to stay motivated as it can be hard to see the real applicable benefit of most of the course content, but it was still overall a good course and helps to understand some of the concepts behind team planning, testing, and software business. Just watch the lectures, don't take the content for granted, and you'll do just fine in this course.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/14/2020 5:51:34",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I used the low end of 6-12 hrs for this class; 1-1.5 hrs to watch the lectures and do reading and examples, and the rest in the assignments.  The first few weeks the assignments were longer than I had anticipated - start them early.  The course cadence was much more regular after those first few weeks.  Overall a good part 2 introduction to Python.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/16/2020 8:12:54",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The move to Python made this course a lot easier. Being able to focus on the underlying concepts of programming without getting caught up with the programming language itself was great, though I didn't feel very challenged until the final project. Even then, the final project's difficulty for me was based on the fact that every prior assignment was a hand-holding, \"make these classes with these methods\" experience. The final project is really just \"make this program, and make sure it works\". Best advice I can give for that is to get a deep understanding of OOP, and when/why you should implement different classes. ",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/23/2020 3:00:08",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Don't take this class if you like clarity, instructor interaction, or ever actually receiving grades for your assignments. Homework/labs are not closely related to the weekly lecture material and you are mostly left alone to decipher the vague instructions, figure out what the expected tools are, and put together a write up with no feedback on what should be included.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/2/2020 12:16:43",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/8/2020 10:21:08",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "As someone who's taken a prior programming class two years ago at another college (in c++), this is definitely an easy-to-get-into intro class (not because of the language switch). Curriculum is laid out pretty clearly. Most projects took between 20 minutes and an hour each week. Ample time to finish two bigger, final, projects.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/10/2020 18:47:24",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Took this class during summer, so it was a bit accelerated. After reading the other reviews here, I went into this class with pretty low expectations. The first few weeks are definitely easy, and as everyone else says, the project/database assignments/final cram time near the end really hits you. For the project, I personally did the minimum and did fine. Make sure to cite any outside code you may use, check off everything on the rubric, and you'll get an A. For all database/mySQL homeworks, study the crap out of all the material you can. I mean go over it until you understand it, and then go over it again until you hate it. If you do that, the last database homework will really be connecting the dots on a process you already know well (it will also give you the knowledge to fix any bugs that will 100% come up). As far as the final goes... good luck. The questions cast a wide net on information that isn't required in the previous assignments, and I only knew some of the answers from going through Colt Steele's Web Dev course. They're not impossible, but they go into far more detail than any homework assignments call for. Overall, this class gets a 3/5 from me. It wasn't as bad as I thought it would be, and I walked away a lot more interested in web dev than I was originally.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2020 13:04:57",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Focus on the material in Canvas and don't get lost in the weeds. Practice, practice, practice. Do the problems on your own before looking for solutions elsewhere.",
        "When did you take this course?": "WI 2019",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2020 13:08:16",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Really make sure you understand the last couple of modules in CS161, regarding classes, methods, inheritance and OOP. If you didn't spend the time to really get that in CS 161 on the last couple of assignments, then prepare to be wrecked on your first couple of assignments.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2020 13:10:24",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Put in the time to really understand time complexity and how these different data structures work. If you don't understand the intricate details of how these data structures work, then you are going to really struggle, especially on the quizzes. Understanding Big O notation from CS225 is vital here.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2020 16:13:27",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Read the book and start assignments early. The class is wonderfully put together and everything you need to succeed is given to you. It’s just.. a lot. The first few weeks are super heavy on content and the last few weeks are super heavy on programming. Take every opportunity to go above and beyond with extra credit. Make a solid cheat sheet for the midterm and final. It’s not as scary as it’s made out to be and is possible to do (very) well in this course if you put in the time. I was able to finish with a final grade of 99.96%",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/13/2020 7:59:08",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I thought this course was great. Just keep up with the readings and you should do fine. Utilize office hours if you find the topics difficult. ",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/14/2020 19:53:52",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Keep up with the readings. Some test questions come straight from the videos.",
        "When did you take this course?": "SP 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/15/2020 14:53:34",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "While the material is relatively easy and draws from CS 290, the amount of time you'll spend on this course largely depends on your group partner. If you find someone who is easygoing and willing to compromise it'll be a breeze. Unfortunately, I ended up with someone who was rather impatient and difficult to work with and thus spent more time than I would've otherwise. I strongly recommend you pick a simple idea for your final project that meets all the requirements. Thankfully, grading is lenient and there's several extra credit assignments if you need it.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/15/2020 14:54:01",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "While the material is relatively easy and draws from CS 290, the amount of time you'll spend on this course largely depends on your group partner. If you find someone who is easygoing and willing to compromise it'll be a breeze. Unfortunately, I ended up with someone who was rather impatient and difficult to work with and thus spent more time than I would've otherwise. I strongly recommend you pick a simple idea for your final project that meets all the requirements. Thankfully, grading is lenient and there's several extra credit assignments if you need it.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/16/2020 11:12:35",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Read the book. It's dense compared to the lectures and assignments, but it helps build your understanding.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2020 8:02:15",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Everything you need to do well in this class is given to you, which I greatly appreciated.  I was apprehensive learning about hardware, assembly, registers, the nitty-gritty of a computer, but this class wasn't actually that bad.  It's time intensive in the first half of the class with all of the readings and lectures, but definitely stay on top of those.  Start the assignments as early as you can.  Ideally you can finish those up in a day or two, but if you run into trouble you'll want the extra time to figure it out.  Some say to know the debugger inside and out, but I personally hardly used it and was still able to figure out where my errors were quickly.  Follow the advice for studying (look at quizzes/weekly exercises).  Once the midterm is over, the weekly readings aren't as necessary- I relied only on the lectures from then on and it went totally okay.  Lastly, always try to get as many rubric points as you can for the assignments.  The last assignment I purposefully \"punted\" on because I was  busy with other things, and I still ended up with a 35/50 on it somehow.  Just do your best to stay on top of the class and have a high grade going into the last assignment and final and you'll be okay.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2020 11:04:22",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I did 50% of Colt Steele course on Udemy and that was enough to do majority of CS290. Sign up for Eric Ianni's section so you can get Greg as a TA. He is very helpful for any sort of problem.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/17/2020 11:37:02",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Be sure to read the grading rubrics for the homework. I was docked frequently for things I thought were very small. The devil is in the details for this class. \n\nI found Kristen Jaskie's videos on Youtube SUPER helpful (I also used TrevTutor in the beginning). Toward the end I barely skimmed the official slides in order to make sure I wasn't missing anything. Find a supplemental resource you like early.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/20/2020 10:41:55",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "If you took 161/162 in C++ like I did, be sure to learn some Python beforehand. Assignments provide you with skeleton code to work with, having previous Python knowledge will save you time. I also recommend skimming through Grokking Algorithms and the class text (both available online with some searching) to familiarize yourself with different Data Structures and ADTs, knowing the general concepts will also lighten your workload.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2020 10:12:15",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The course was redesigned this summer. Modules now consist almost exclusively of written text and examples on repl.it (no lecture videos or required textbook). Also part of redesign, projects are now only in C (first 4 assignments) and RUST (last assignment, which was mostly graded as extra credit). Assignments can be heavy and tough, but grading scripts and guidelines were provided for all assignments.  So getting a perfect score on assignments is definitely do-able if you work ahead and double-check submission. Otherwise, grading is not very flexible. -- Final is 30%, multiple choice, unproctored, and open-book.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/23/2020 18:49:32",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This is definitely the most work heavy course I have taken so far in OSU CS. It was definitely all doable, though you really had to stay on your toes. I took the accelerated summer version of this course, there was one major lab assignment every week, with a mix of \"in class assignments\" and quizzes throughout. No midterm, but a final that ended up being the hardest part of the course for me.\n\nDue to the nature of some of the projects, You really want to start early. The only ones I ever struggled on were the ones I started too late. That is probably the best advice I can give for the programming labs.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/24/2020 14:24:04",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Not too bad, felt like busy work at some points with the group assignments but not too bad and captures fundamentals pretty well. ",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "8/24/2020 22:50:42",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "All the content you need to do the assignments and exams are in the slides and books. For the programs, you can mainly use the slides to get your answers, but will most likely need to supplement it heavily with the book. Learn to debug and become very familiar with it. I used it religiously for each program after learning how to. For exams, I studied mainly the slides, self-check exercises, and the weekly summary exercises/quizzes. The book sections would cover excess material that may not appear on the exam so I did not study the book much for exams.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/25/2020 11:23:26",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This is a good course to take during the summer as it's not too difficult. I highly recommend Rob Edward's YouTube videos as the lectures in this course are subpar. The programming assignments are fairly easy, although there are some tricky implementations that required TA help. Unfortunately, there are very few TA's and not enough office hours so they are swamped. Piazza was a cluster this quarter. Try to get to the assignments early so you can get help if needed. Thankfully the prof is really active on Slack and was more than willing to help me out. ",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/27/2020 15:04:32",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I had prior experience with SQL, so the SQL portion of the DB class wasn't difficult for me.  I had a tougher time doing Python/Flask for the first time, but there are so many resources available in the class that it's not difficult if you take the time to look for them.  The instructors were helpful in providing useful advice when I got stuck.  It may have taken me a little more time than if I had prior experience, but I didn't think it was impossible to learn the basics of Python/Flask for the class (again, utilize the resources given to you).  Since it's a group project throughout the course, make sure you try and find a good partner to work with.  I had a good partner and the work was really well divided and the whole term went real smooth and workload was fairly even across the shortened term being Summer.  Also, do the extra credit assignments; they aren't difficult and it'll help your grade if you're struggling with your project.",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/8/2020 12:34:20",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start on the final homework early, don't get sucked into making the project better than it needs to be(like I did)",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/10/2020 13:42:48",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "A lot of material and the homework and the assignment took time. I took it during the COVID-19 pandemic so there was no mid term or final exams. If you put in an effort you will do good. ",
        "When did you take this course?": "Spring , 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/14/2020 12:42:57",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "One of the better courses after it’s redesign. Basically work in a group to build a project. Lots of great material and cool to see that working in a group is actually all about.",
        "When did you take this course?": "Su 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/21/2020 12:58:53",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I found this class super easy, but I'd started learning with The Odin Project in the months building up to it. I seems like a very kind class, though - weekly lessons with a quiz, pretty straightforward assignments, occasional group work, few surprises. Didn't interact with the professors much. Felt very in control the whole time. ",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/27/2020 15:48:26",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/16/2020 6:16:48",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Do the homework several times over, do the reading, ask questions, you should be fine!",
        "When did you take this course?": "SU 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "11/21/2020 20:16:34",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Ugh.  I really hated this class.  Found it to be very frustrating.  Like every one else has said, unless you have web development experience you absolutely must take the udemy course before taking this one.  It's sad but that 12 dollar course is so much better than this course it's not comparable.  If you take the udemy course the first 6 weeks will be doable.  Once you move to the server side it all kind of falls apart.  I found myself hopelessly lost.  My impression is that the course is taught with the assumption that the student has at least some web development experience.  I think the reason for this is that many people taking this course do in fact have prior experience.  None of the concepts are all that difficult but its a bit like trying to navigate public transportation in a foreign country.  My opinion is that the activity's need to be smaller with more step by step instructions then build up to more of the complex implementations.  Instead the lessons will say things like \"this is all complex and we are adding more and more things so go and practice everything\".  I found myself staring at a blinking cursor not knowing where to even start.  Bottom line, probably the worst, most frustrating class I have ever taken, anywhere.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/1/2020 8:41:04",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The course is paced well so that even though the group project is substantial, it's broken down into small enough components as to never feel overwhelming. My group used Flask for our back-end interactions with the database and couldn't recommend it more. Just don't slack on getting your project steps turned in or you will have a lot of work to do at the end of the quarter.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/4/2020 11:12:07",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is a slog, but really not that difficult. Samina and the ULA's are great and you could generally get a response to a question within a few hours. It ramps up in difficulty with the peak being induction in week 5, then slides down in difficulty for the rest of the term. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/6/2020 17:32:39",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The last half of this class gets more difficult since it deals more with the sever-side and JavaScript. having some knowledge of HTML and CSS will make the first few weeks a breeze. Also recommend Colt’s updated Web dev course. It will immensely help you for the last few weeks. The course book is good but I also recommend the Jon Duckett book. It took me about 15+ hours per week but it really helped and got me an A. The course is well laid out and even though some of the syntax may be out of date, it doesn’t really affect anything since you can use more updated syntax if you wish. Ianni is a great instructor and the TAs were very helpful. A lot of students complain about this class but in reality, there is no “holy grail” course that is the best although Colt Steel’s course is really good. Learn from as many resources as you can. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/9/2020 14:38:33",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is not as difficult as many describe it. It is just a lot of work. If you start any class assignment right after it is assigned, I would say I spent about a week on each one. One would definitely set themselves up for failure if they did it on the last weekend. Take your time to absorb the assignment requirements and ask TAs if you have any questions and you will have no problems with this course. Definitely probably the worst course if you are procrastinator. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2020 13:51:38",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The content of this class is conceptually hard and the assignments time consuming. Be prepared to study hard and maximize your cheat sheet for your exams.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/10/2020 16:46:41",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The work isn't necessarily hard, but there is so much of it. Brush up on your algebra as well, as you'll be using it more as the semester goes on.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/11/2020 14:42:57",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "There's a large volume of info to cover in the course (especially at the start), but it starts to make more sense over time as you learn how to program in MASM. Stephen Redfield is a very responsive and nice instructor. Use the debugger and learn to understand the instruction set references - I regret not taking the time to understand those earlier on for my programming assignments. Start every programming assignment as soon as you can, so you have enough time to debug and get outside help (Piazza/Slack/Stack Overflow/the TAs) when you inevitably get stuck on the later assignments (esp. #5 and #6). Don't be a perfectionist with program 6, or you won't have enough time to study for the final. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "12/12/2020 11:44:52",
        "What Course Did You Take?": "CS 373 - Defense Against the Dark Arts",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Lectures and information are only marginally related to the weekly assignments. Be prepared to spend an inordinate amount of time researching and attempting to find sources that might help you work out what you might possibly be trying to do for the week's assignments. Some are reasonably possible with info that you can scrape from the internet, but some are utterly incomprehensible. I turned several assignments in unfinished because I just could not figure out any steps forward in trying to work them out. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/14/2020 9:22:20",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/14/2020 11:52:04",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "The key to a good grade in this class is getting as many points as possible from the homework, discussions, and quizzes. The school lectures are difficult to follow along and the textbook is dense so utilize outside resources such as Chegg (worth every penny) and Abdul Bari on YouTube. Do every extra credit assignment if you can. Hopefully with all this, you should have a big enough cushion to do poorly on the midterm and finals and still pass comfortably.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/14/2020 12:58:25",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Echoing that your partner will make or break this course for you. The actual coursework is really easy, but the project is the backbone of most of the work you do. I really didn't like the draft/peer reviews, though they're easy enough to complete and get full points on. The best prep work you can do for this course is posting on the unofficial slack/OSU subreddit trying to find a partner as far in advance as you can. It will give you time to get a head start on the front end of the project, practice using/messing up with version control together, as well as develop some repertoire with your partner so you both feel comfortable communicating with each other. I did that and had an amazing partner (shout out to Chantel), which made this class a breeze. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2020 10:04:34",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Videos and exercises do not seem sufficient to cover new material.  The expectations of the homework projects far exceeded what was demonstrated in the module lesson.  Frequently had to use outside resources to understand this class and asked for help.  Instructors were very helpful.  Odd pedagogy at times where they responded to questions with questions so you don't get an answer when you are lost.  Get used to google searching for actual answers. Used Tim Buchalka's python masterclass for help, too.  Weeks 2 and 3 assignments are long but straight forward. Try to get ahead in this course in case you get hung up around recursion, linked lists, or JSON.  The final project was to build the board game Focus (see Wikipedia) and required tons of testing to make sure the complexity of the program was working without errors.  You can only see 7 tests when submitting to gradescope but in reality there were 40 tests to pass. Took an A+ in the class and worked very hard for it. ",
        "When did you take this course?": "Fall 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/15/2020 19:30:20",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class was pretty easy for the hw and only had 1 quiz/exam - the final.   I go 70% on the final but only needed 60% to get a 4.0 because I got 100% on the homeworks.  The final exam average was 67% so you're better off doing the homework diligently and using that to hold your grade up after the final.\n\nIf you really want to ace the final, :shrug: read and remember all of eloquent javascript?",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/16/2020 9:36:45",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "I was a transfer student that had done about half of CS50 (free online) and the equivalent of CS161 at another school. I don't think CS 162 was a poorly structured course necessarily, but the assignments (projects and quizzes) were all testing very basic understanding. For example, quizzes test very high level understanding of concepts (e.g. what is recursion) rather than low level \"how would you fix this code snippet\" type questions. This means that acing quizzes is extremely doable. The projects as well are all laid out precisely with the specific functions/classes you need with the parameters and outputs that should be returned. The TAs appear to grade largely based on whether your code passes Gradescope tests or not. There was no project design aspect to the assignments. I spent no more than a couple hours on the beginning projects and around 6-8 hours on the final portfolio project. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/17/2020 4:09:07",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "I took the revamped version of this class.. Redfield redid everything, lectures, weekly summary quizzes etc. Way better to understand. Start projects early, especially Project 6 (final project).. Also make use of your note sheet as a way of reviewing. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/18/2020 15:08:02",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Very time consuming, and quite difficult at times. Ask lots of questions and go to office hours. You will need to google additional resources, spend lots of time on homework, studying for tests, and discussions. Lots of extra points to be had but a LOT of work.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/19/2020 20:58:44",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Find a partner early. Waiting until the last second pairs you with someone who also waited until the last second. This course is based around one long-term project, but it is split up into busy-work draft steps. I learned a lot, but it was because I put in a lot.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/28/2020 10:19:04",
        "What Course Did You Take?": "CS 493 - Cloud Application Development",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class was a great intro to using cloud computing services - primarily to work with and create APIs. You also get to run through containerization and virtual machine services on google cloud. I also found the course helpful to really nail down back-end development using node.js (I would like to go through the course material on canvas using python as well if I can find the time - the course offers both options and any others you clear with the prof). As a bonus, you will also learn about Postman. When I took the course, the lowest scoring assignment was dropped from the grading. However, each assignment builds upon the previous one in some way, so if you punt on one assignment (as I did during that crazy 2020 election week), you should still return and make sure you know how to do it for the following week and the final project. In particular, make sure you are clear on OAuth 2.0/ JWTs, since many aspects of the final project grade are predicated on these concepts. The prof and TAs are available and help through multiple contact methods, but do expect to use documentation and search the internet for solutions as well. I would advise getting your modular datastore code set for reuse each week along with reliable error handling. Also, make sure you design your specs  accurately based on the assignment description - even if this means asking for clarifications on piazza - then, make your postman tests directly based on the spec. Start your in-depth coding after you've taken these steps. That way, you can run your postman test suite after changes to make sure you didn't break anything and you will be able to gauge your progress.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/28/2020 13:42:51",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I will be brutally honest, this class was the worst one that I have taken so far in this program. You will be relying heavily on resources outside of the provided course materials. Read Grokking Algorithms and start going through Abdul Bari and any MIT Open Course algorithms classes videos that you can prior to the start of this class. This is the class you will finally see a lot of the discrete math concepts from 225. Get yourself familiar with the topics that will be covered, as it will help you immensely once you're in the midst of the chaos. Yes, the midterm and final exam were horrible, but if you put as much effort as you can into the Homeworks, Quizzes and Group Discussions and any Extra Credit opportunities that you can you will make it through this class. Reddit and the unofficial Slack channel are great places to commiserate with your fellow students, and those of us that have already powered through this will gladly give you any tips we can.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/29/2020 10:49:04",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Give yourself a week in advance to work on each assignment.  Keep python skills up to date before taking this.  The TA's were very helpful but they get very busy right before assignments are due so try to ask your questions early. Course info was good along with a YouTube video here and there to supplement.     ",
        "When did you take this course?": "Fall 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/30/2020 11:41:14",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I took this class with Maher and Danielle. I think the instructors were fair and very receptive to student feedback. On the first test, they did not allow us to make our own study guide. After a lot of student feedback, they allowed us to make our own study guides for the final. The (open book, open note) quizzes can only be taken once, and they are timed. I did well on them at first, but towards the end of the semester, whether due to burnout or an increased difficulty in material, I started doing worse, and that knocked my grade down quite a bit. HOWEVER, they gave an extra credit project, which was very do-able given all the resources online. That project literally saved my grade, as it was a 2% bump if you did all the requirements. I would say the midterms and finals were difficult for me... but a lot of people said they did well just by studying the book and quizzes. We were also required to post 3 times on 2 separate days on the discussion board (groups changed each week). That was usually a huge waste of time because no one really knew how to answer each other's questions, and neither the TAs nor the professors check in to answer questions. It felt redundant at times since we also had teams and piazza going. I recommend sharing links to videos with your classmates because that was the only thing I found useful about group discussions. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "12/30/2020 11:49:14",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I submitted earlier but I have to add that the lectures are truly terrible. I had no idea who they were from until midway through the semester when her name appeared on the screen (it was not Maher or Danielle). It was an instructor called Julianne Schufort ... I don't know how she still has a job because she literally sounded like she was seeing the slides for the first time each week. Not only that, but they had to know she was a horrible lecturer when they asked her to record these presentations - why her of all people?? Be prepared to watch her make countless typos and sound completely confused each week. When people say they watch the lectures at 2x speed, they are not bragging -- she talks SO SLOW that I felt like time had come to a standstill. Listening to it at 2x speed makes it sound like an actual, normal person. I feel triggered now when I hear that \"Hiiii class...\"",
        "When did you take this course?": "Fa 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/4/2021 20:28:43",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Fairly easy course, but do not underestimate the amount of time that the assignments take. Most take a good couple of hours even though they seem like you could do them in 30 minutes. Overall great class, the instructor is very helpful and knowledgeable.",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "1/11/2021 10:01:00",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get familiar with the syntax. That way you can focus on learning the strategy and logic. Python Crash Course is a great book to learn from. ",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/10/2021 6:18:02",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "FA 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "2/14/2021 13:12:26",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "If you have no experience like me, the coding might take a couple extra hours a week than other people have said just because its new ...all in all not difficult",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/23/2021 6:23:50",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start early and ask for help, keeps stress levels down",
        "When did you take this course?": "Fall 2020",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "2/23/2021 12:14:08",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Oh this class... the original course content is taught rather poorly and by week 2 I was just using outside resources to teach myself. It took a lot of work and so many of the concepts revolve mostly around taking the time to get it. When you take this I'd take it with easy classes and being prepared for it to just eat up your time. Also look at abdul bari and back to back on youtube to pick up the content.",
        "When did you take this course?": "Winter 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/6/2021 15:08:08",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Post discussions early, makes it easier for everyone. Don't wait till the day it's due.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/8/2021 14:22:59",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This was the 2nd term of Redfield's overhaul of the course. It is extremely well put together and everything you need to succeed is in the modules (no textbook or outside sources necessary), which is good because there is a MASM void on the internet. The only downfall of the course is the reliance on text, which could be a struggle for people who prefer video (Redfield does scatter videos throughout, but it is 90%+ text). The projects, especially 5 and 6, are challenging but doable. I suggest completing all EC on projects 1-4 to build a buffer, then completing 5 and 6 to requirements. As a pointer,  READ THE REQUIREMENTS OF THE PROJECTS THOROUGHLY BEFORE STARTING. You may build a functioning program but miss the requirements and be surprised by a bad grade. It is very possible to head in to the midterm with 102% in the course, and the final at 101%. Overall, this course was fantastic. Redfield, Vogel, and the ULA's are excellent.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/12/2021 8:05:36",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get ahead if you can. ",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/14/2021 13:33:01",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This course is deceptive because in terms of grading, it's probably easy to get an A without much effort. The problem is if you want to actually learn the material you're going to have to invest time on your own (especially if you're like me and haven't had previous exposure to HTML/CSS/JS). The assignments are again misleading because they are literally knowledge checks that don't have any depth until you get to the last assignment which requires you to put everything together. It is easy to go through the course and then realize you haven't learned enough to complete the last assignment. I'd recommend spending the time week to week to make sure you're understanding the concepts as they come so that you're not scrambling last minute to try to relearn everything for the last assignment.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/15/2021 4:57:04",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Overall, I learned a lot and this course is pretty well designed. Put in the work and you'll be rewarded.\n\nI learned a lot more from the readings than from the lectures. Your mileage may vary.\n\nI created flashcards (using Anki) every week to memorize the key facts. I don't think this was strictly necessary, but I found a lot of value in it. It helped me do the work more confidently and quickly since I didn't need to go double check every definition and property.\n\nThe Discussions seem like they're still a work in progress. I found them to be a larger time commitment than they originally appeared and the organization is kind of a mess. I also found there to be a wide variance in difficulty of the discussion problems. If you pick your questions early, you can get the easy ones (if you want), and leave the hard ones to your group mates.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/17/2021 14:17:50",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This course is currently being redesigned, so your experience with it might differ from mine. I found it to be an easy class - just make sure that you look at the rubrics for the assignments to make sure you are getting all the points for your assignments.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/19/2021 21:16:52",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Some of the content is outdated since web development progresses so quickly. It's a bit annoying that the later materials don't fully show how everything you learned in the quarter is integrated, so you'll have to figure that out yourself. I didn't have any prep for any classes this quarter and that was fine, since the actual content isn't that difficult. Just make sure you try to get full points on the assignments where you can, because the final is a bit of a ball-breaker compared to the rest of the course. It covers content you maybe saw earlier in the quarter but never used yourself, which I thought was pretty dumb. Probably my least favorite course this quarter, even though it wasn't the most difficult, but I expect it will be much better once the course is refreshed/content is updated. That said, I still did enjoy it, just wish the content was current.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "3/21/2021 10:48:03",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class is definitely the toughest one I have taken in the program. It's very well organized, unlike the sh*tshow 325 is. It's very information-dense, and if you aren't familiar with the C language, get as much exposure to it as possible before the class starts. The first five assignments are in C, and the sixth assignment is in Rust. Start the programming assignments as soon as they are released, as you will need all the time you can get to complete them. The instructors and TAs were great, and even though the assignments were tough, the expectations were clear and the grading was fair. The final is unproctored and open books, open internet, open terminal, open whatever else you can think of, the only limitation is that you are not allowed to collaborate on it with any other students in the class.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/21/2021 19:21:57",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I think this quarter (winter 2021) was a bit of a step up from previous quarters in terms of the workload/difficulty of this class. Everything is very well laid out and topics are presented extremely well. You'll consistently write >100 lines of code for the homework, split between a bunch of methods that range from easy return one-liners, to recursive solutions requiring helper methods. Due to the importance of this course, I am happy that I struggled and am now very comfortable with every topic that was taught. Some weeks of this class were just reading and took 1 hour, near the end they stacked assignments and quizzes and I was putting in closer to 15. Overall a reasonably difficult class that you can get an A in with enough effort. We had unproctored, closed book exams that were middle of the road, but that may or may not change post-covid.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/26/2021 9:56:42",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Not too hard to do well, but at the end a few specific problems ramped up its difficulty quite a lot!",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "3/27/2021 14:01:53",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I only watched the provided videos for the last week's material (P vs NP). Otherwise I used Abdul Bari and a few other resources (Back to Back SWE). I never cracked the book. Bari is invaluable for the first few weeks of this class. I think this was the last iteration of this class before it gets revamped- these reviews may be out of date next semester.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "4/14/2021 11:38:32",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Make sure you have a great partner. A lot of the work is this class is very doable if you divide and conquer. I personally think the class was just a continuation of CS290 except you're allowed to dictate what tech stack works best for your project. Learning about database design was interesting, but besides that, not a lot of data intensive learning. I found getting an A to be pretty straight forward as long as you're careful about the group project requirements. ",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/3/2021 21:35:31",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "You won't get much help from the instruction team here. Modules are semi-helpful, Weekly quizzes with unlimited attempts and 2 gradescope projects with SQL. This course pretty much comes down to your partner as the whole thing revolves around the term project. I took the class with a friend I made in 261 so it was fine for me, highly suggest going that route if you can. It is a neat class with useful skills but it really is self-teaching heavy.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/25/2021 6:15:52",
        "What Course Did You Take?": "CS 464 - Open Source Software",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Super easy and informative class and you get what you put into it. Highly recommend if you're looking for a light and easy elective, but if you want a substantive elective class, you may want to look elsewhere. I spent no more than 1-2 hours a week on this course. You can definitely put in more if you want to add an open source project contribution to your resume since the light workload gives you freedom to do so. Otherwise, the instructors provide lots resources to find open source projects you can contribute to for the purpose of the class. You don't need to necessarily contribute to the codebase either - you can do things like update documentation, provide a cognitive walkthrough, help translate, etc. ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/25/2021 10:21:30",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is great, I love the structure of the class, and it is very well taught. From my experience, the ULAs are very helpful as well. If you enjoy self studying the material, this class will be great for you, and aside from some videos from Redfield, the course is very hands off. I feel like I learned a great deal from this class",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "5/25/2021 15:57:49",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Start communicating with your team ASAP, it's hard to coordinate with others, especially 4 other people.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/3/2021 10:39:27",
        "What Course Did You Take?": "CS 493 - Cloud Application Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "Get an early start on projects. Make your code modularffrom tthe beginningsso you have an easier timer reusing functionality ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/3/2021 10:41:56",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Get an early start on the hw as soon as you can. Videos are likely late to post so use them instead as clarification and support for what you learn in the hw",
        "When did you take this course?": "FA 2019",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/3/2021 10:44:54",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "Work ahead and do all of the extra credit. It'll save you down the road. ",
        "When did you take this course?": "WI 2020",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/3/2021 11:01:52",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I didn't learn much in this course. Don't take it if you're hoping to learn about something like computing with AWS. There is some conceptual material taught, but it's mostly high level and a lot of syntax. The professor provides most of the project code for you, and your job is mostly to fill in some blanks and write a tedious report. This is done to facilitate a large breadth of projects, but I would've preferred to dive deeper in fewer projects. It seems like the goal of the course is to give you as many buzzwords as possible for your resume. The quizzes and tests were thankfully open note, otherwise they would've required rote memorization of the professor's preferences. Overall I only recommend this class if you're very interested in GPU computing.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/3/2021 11:15:17",
        "What Course Did You Take?": "CS 419/467 - Software Projects",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is called 'Online Capstone Project' now. Form a project group before the term starts. Use reddit or reach out to previous friends/group mates who are also taking this class that you thought were good partners. This class is made or broken by your group and its dynamics. I've heard horror stories, but fortunately, that wasn't my case. When the term begins, you can pick a canned project which really, for me lacked any inspiration. A lot of students decide to make a video game, there are lots of those. Our team developed a web-based AI-powered vehicle identification application. Came out good, learned a ton, our team was awesome, and we achieved what we set out to do. We all put about 200 hours into the project each, for a combined total of just south of 600 hours. Broken up over each week though some weeks are light, some weeks are heavy. I was probably averaging 15 hours a week. There is a lot of freedom in this class to basically pick your own project, the approval process is email the instructor with your idea, he says yes or no. That's basically it. You have to record videos each week demonstrating your progress, these can be daunting if you dislike making videos (or appearing in them), but they seem to be flexible with the content you put in them. There are no exams. The project is submitted at the end of the course, with a final report which is fairly easy. We used Google Docs to collab on everything, that worked fine. There is a final video and poster as well. It doesn't have to be remarkable, it just has to present the information they are looking for. Other than that, grades are basically 100's unless you are seriously not doing any work or have some remarkable snafu where it appears you are doing nothing. TL;DR = The people you chose for your group will make or break this class. Learn to make videos and get comfortable at least talking in them. Be project-driven, self-starting and willing to put in your share of effort towards the common goal of completing the project and you will be just fine. Communicate with your team, early and often.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/5/2021 17:59:20",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Be thorough in testing and you'll be fine. ",
        "When did you take this course?": "SP/2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/8/2021 15:22:12",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Get a group member early to help ensure your partner is equally motivated. Getting a good partner will make this course go so much more smoothly than an absent or inept partner. The term-long web application consists of a MySQL backend and you can use whatever else you like to create the rest of the project. My group used Node, but others used Flask, React, and some others. Outside of the group project, there are SQL exercises and database design concepts. This course isn't exceedingly difficult and I felt it was really enjoyable and I learned a lot.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/8/2021 15:26:43",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This course is generally not too difficult. The materials cover Node, Handlebars, Express, JavaScript, and CSS (and perhaps some more stuff). I didn't think the course was as terrible as I had been led to believe, but the last assignment was a real step up in difficulty compared to everything else we had worked on. The final was rough. A lot of the questions seemed to be more about minor details from throughout the term and some short answer/code questions.",
        "When did you take this course?": "WI 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/9/2021 12:33:43",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The \"revamp\" of this course is still a hot mess. I think any algorithm course should be difficult, because the topic itself is multi-faceted and incredibly important. 325 added difficulty by being kinda crap. The explorations they provide on Canvas are filled with typos and don't do a good job of teaching material. The only easy things about this class were the open note quizzes due each week and the discussion posts due every other week. The discussion posts were pretty annoying because you had to make a video solution for solving a given problem, but from an interview perspective verbally explaining is good to practice. The coding assignments ranged from easy to hard, with the portfolio assignment (essentially 3 problems with some other analysis) being the peak of difficulty. The midterm/final weren't crazy difficult (you get a 1-sided cheat sheet), but there was so much regrading due to poorly-stated questions being interpreted in different ways. I do feel like I learned a lot about algorithms in spite of this course's quality, but hope they make some much needed updates. ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/10/2021 22:17:06",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Find a good group. Don't just get randomly assigned partners if you can avoid it. You might get burned.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/11/2021 11:18:38",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "As others have said, get finding a reliable partner out of the way as soon as you can. If possible, get ahead of schedule with the Group Project, especially when it comes to refreshing your knowledge of JavaScript+NodeJS (from 290) or getting up to speed with using Python+Flask if you choose to, this will make your life significantly less stressful  at crunch time at the end of the term. Assignments and quizzes were fairly straightforward, and the majority of them give you the option to take them multiples times and keep the highest score. There were no Midterm or Final Exams. Two extra credit options were available, they weren't difficult, I'd recommend doing them just in case you have issues getting all of the CRUD functionalities up and running in the Group Project.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/12/2021 14:42:30",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "I found that watching the lectures then doing the homework and discussion problems was the best way to learn the material. A small portion of the material was taught only from the book, but it wasn't too hard to find the relevant sections a few pages before the homework problems in the book. Using the appendix in the back of the book to see solutions to similar problems was also helpful. I spent a lot of time on this class and lost points for silly errors. Definitely double check your work and follow up with your TA if you feel you should get points back for something that you understood and did correctly.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2021 10:35:37",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Start the Project Early",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "Yes"
    },
    {
        "Timestamp": "6/13/2021 10:36:40",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "There isn't much direction for the project but if you read the book you can figure it out.",
        "When did you take this course?": "Sp 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/13/2021 17:05:54",
        "What Course Did You Take?": "CS 362 - Software Engineering II",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "Class is easy enough. However watch out losing a few points can destroy your chances of getting an A.\n\nEspecially the first assignment which is pass fail. \nThe teachers and TAs in this class are way more strict about submission. So some of the things other classes would allow for example resubmissions. Or turning in a submission late past the late dead line. Aren't really allowed or harder to accomplish.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2021 8:04:24",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class wrecked me. Body and soul. If you have kids, a day-job, hobbies, friends, or a social life at all: say your goodbyes now. I hadn't taken a math class in years but I did get a high enough score on ALEKS to get in. The math is the least of your problems in this class. The instruction is HORRIBLE. God-awful lectures and even worse readings. Prepare to spend 30-40 hours per week the first 6-ish weeks of the course, and 20-30 after that. I worked this class like a second job most of the time. Clock out from my actual job and clock in to Discrete. The assignments are long, awful, and terrible at actually teaching you what the teacher and ULA's want to see on tests. Do they want a specific format of proofs and the like? Yes. Do they ever demonstrate an exact format to follow? Of course not. Grading is all over the place, and you'll question your sanity many times. There was a test later in the semester that the entire class average was a D. Did they curve or drop this test? Of course not. Should such a bad grade from the whole class demonstrate that the teacher should re-teach that week or adjust their lessons in any way? Yes. Will that happen? Nope. The homework and discussions will save your grade. I got 100% on all of the discussions and I had no idea what I was doing half the time. They are less discussions and more extra homework, on top of the 10+ hours it will take each week JUST for the homework. I would consistently get 90-100 on the homework and 80-90 on the tests. That's just how it is. The book is riddled with errors and the teacher, although she seems like an ok person, not mean or anything, is just bad at teaching. She talks like she is at a math convention with a dozen math nerds, and everyone in the room understands all of the material perfectly. She doesn't seem to understand that people who are new to this need EXPLANATIONS and not really hard examples right from the get go. There was one week where some other guy did the lectures and that was by far the best week of the course! I worked my a** off and got an A-. Good luck and god-speed fellow CS hopefuls!",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2021 9:48:43",
        "What Course Did You Take?": "CS 344 - Operating Systems",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "The most workload heavy course in the program. The key for success is to NOT procrastinate. Start each module as soon as you can, get a good general understanding of the concepts in the explorations, then start coding. The hardest assignment took me about a week to complete. Read assignment instructions and grading rubrics carefully or you'll lose out on some points. Try to get as many points as possible. Don't worry about the finals as it's open-book/open-notes.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/14/2021 13:21:22",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "First off I'd absolutely recommend doing the textbook readings - they are listed at the beginning of each module and take the bulk of reading/digesting time but that is where I learned the most. Investing the couple hours/week to read through the textbook and try to understand it probably saved me hours on each project because I knew I had a solid understanding of the concepts. The actual modules themselves are very loose summaries of the material covered in the textbook. The second thing I'd add is that the projects may be deceptive for some students. Many students complained they were too complicated/unclear and I'd agree that the skeleton code provided was often times confusing and the documentation could have been better. However, if you have read through the textbook and spend an hour or two going through the skeleton code to try to understand how everything should function, the actual Python programming is trivial. You may need to read over how the struct and socket module work but the documentation for both are very good. Grading for projects also seems lenient. I was able to max all project points despite knowing there were some bugs in my code. Finally, I would add that I think if you have an interest in networking fundamentals this is a good course that is not too overwhelming but covers more than the standard Net+ type material. I have taken Net+ and Sec+ and still learned a good deal in this course. However, if you are strictly interested in improving your programming/Python skills, this may not be the course for you.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2021 15:12:22",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "If you’re looking for a low-effort elective, 475 with Mike Bailey will fit right in. The content is wide in scope but taught at an introductory level. The assignments are fill in the missing code. It is more time consuming to generate the required graphs and write a paper on your feelings regarding the code experiment. Quizzes and tests are the easiest in the program by far. ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/15/2021 15:13:20",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "As others have said, Prof Bailey is an awesome lecturer and actually cares about his class, so I'd recommend anyone take it just for those reasons alone. The course does cover interesting concepts and shows you how to implement some different methods of parallel programming. The course to me felt very easy - the projects could have been very difficult but most of the code is provided for you and you just have to fill in some blanks. The two exams were not proctored this quarter, took me maybe 10-15 minutes apiece to complete, and were mostly repeats of questions from the weekly quizzes.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "6/16/2021 12:39:32",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class is a LOT of work. Don't let gaps in due dates fool you. Tons of homework, and many many readings assigned. Don't wait to get through all of the reading to start on assignements, start as early as you can, get help from TAs, and try to talk things out with class mates as much as humanly possible. Tests are hard but not impossible. I got a C on the midterm but 100% on the final. Submit to gradescope often and get all of the easy work out of the way for the points so you can dedicate more time to the hard problems.",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/19/2021 12:13:08",
        "What Course Did You Take?": "CS 475 - Intro to Parallel Programming",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Professor Bailey is absolutely the best professor in the entire program. He is one of those teachers who goes above and beyond in the time and effort he puts in for his students. Check out his impressive (yet humble) resume on his page. He is a treasure for OSU. The assignments for this class were very reasonable - everything is clearly laid out for you, and Prof. Bailey does LIVE LECTURES in addition to FRESHLY RECORDED lectures AND live Zoom office hours. He posts everything on his own website, not on Canvas. You can probably see some current materials by googling his name and CS 475. Quizzes were reasonable, but slowly got harder. Be careful with wording as the semester goes on. Final exam was very reasonable. He always says he's not out to trick you, and he is one of the few professors who mean it. Honestly, the man is a saint. ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "7/27/2021 13:59:18",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Take Colt Steele's class on Udemy.  Don't waste your time  trying to deep learn HTML and CSS because it is a minor part of this class.  Spend all your time on Javascript, Node.js, learning API's and how server side programming works.  If you are not strong with JS then you will start to suffer in week 3 until the end.  The website project is easy.  The exam is difficult and does not help you learn anything.  Most questions are multiple choice, but there are about 5 coding questions.  The whole course is about to be revamped, but honestly I don't think it will get any better",
        "When did you take this course?": "Spring 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/7/2021 23:18:01",
        "What Course Did You Take?": "CS 340 - Introduction to Databases",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This class will probably be one of the easiest A's you'll ever get at OSU. You won't necessarily feel like the tuition you're paying is worth the amount of material you learned, but you don't really have a choice now do you?",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/8/2021 8:50:57",
        "What Course Did You Take?": "CS 372 - Intro to Computer Networks",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This course was so bad, it prompted me to write my first review while in this program. It was highly praised when it was required, and there are few reviews on the current iteration of this course (now an elective). The workload hasn't changed, so I will comment on my experience. The instructor interaction is frustrating, (if and) when they do respond. As the previous review stated: expect pretentious and obnoxious answers. There's an excuse for everything you might reasonably ask for: practice midterm feedback? Nope, can't release that cause cheaters might post it on Chegg. Project rubric? Nope, it's a \"discovery\" assignment. In the name of flexibility, here's some abstract skeleton code that you have to decipher to implement an abstract version of some networking protocol. Then, your subjective implementation will be graded by another subjective, hidden rubric! You later \"discover\" the module pertaining to the project is released later (???). Would've been nice to get an intro module before tackling a project to recreate a networking protocol from 30-40 years ago. For the labs, just use the provided trace files to save yourself the frustration of the outdated instruction PDF. For the projects, read up on the protocol/use the native OS implementation, understand the skeleton code, then begin your code. The book is skippable, read and watch the lectures at 2x. Overall, it's not a difficult course, but it makes courses like 290 and 325 look good.",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/8/2021 11:27:25",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Course was phenomenal. The professors constructed the class to teach you how to build a Full-Stack MERN app. The frameworks/languages learned in the course contributed to building my resume, and the final (fourth) assignment is constructed in such a way that the student can showcase it as a portfolio project. The professors even encouraged this.\n\nThe course is project-based with four total projects (70% of grade) and a final exam (30%). The projects were simple enough that I could complete them in a reasonable amount of time (5 to 15 hours during the weeks the projects were due). I couldn’t complete any of the projects without having completed the explorations and readings. Everything that was needed for the projects was covered in the explorations in one form or another. Thus, I didn’t need Colt Steele or much outside coursework. However, the professor provided extensive reference material: WS3, Wiki, MDN, Express, MondoDG, Mongoose, etc. As a developer, one would go to the original documentation to expand upon their application development, so it made sense to provide the resources to the learner in such a fashion. (I think this structure is how he constructed cloud dev, which made it the hit it has become.)\n\nComparing to the course before the revamp, the new course taught Express and Node within the first few weeks of its start so that by the time the final project was assigned we had a decent amount of experience. Node wasn’t even taught until week 7 in the previous course.\n\nThe pros of the course (or negatives, depending on how you view them) is that learning JavaScript is condensed to one week of basic training. JS is covered more throughout the course but as it applies to what you need it for. The previous course spends quite a bit of upfront time learning JS before even getting to Node in Week/Module 7. This could be viewed negatively because the teaching staff expects for the student to learn JS on their own by reading the required textbook. I am by no means now an expert with JS, but I know where to research what I’m looking for.\n\nOverall, anyone could run through the course material quickly and focus on the projects and put little time in order to get a high grade. But with the breadth of material covered each week (every week we learned a new framework, technology, or language), I spent more time rewriting the course content to engrain it before attempting the projects. I think this helped cement a lot of the content. I noticed that the teaching staff (professors/ULAs) provided practically everything you needed for each project in EdSTEM to get a 100%. This course could be paired with a harder course and still do well. ",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/12/2021 22:35:42",
        "What Course Did You Take?": "CS 271 - Computer Architecture & Assembly Language",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/13/2021 10:28:14",
        "What Course Did You Take?": "CS 352 - Introduction to Usability Engineering",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "Some deadlines are midweek so keep an eye on those and always look ahead",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/19/2021 19:23:09",
        "What Course Did You Take?": "CS 325 - Analysis of Algorithms",
        "How hard was this class?": "4",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "This class is challenging, but doesn't take up as much time as I expected it to in the Summer. The homework is on the lighter side compared to 261/225. Most of it feels like an extension of 261 with the added layer thinking about time complexity. The last module on NP/NP-Hard/NP-Complete took a while to sink in. There were two group discussions with write up assignments. If you get ghosted by a group member (or two), you can easily move on without them which is nice. The quizzes are very easy, but not worth much. Midterm and final were both proctored, mostly multiple choice with some pseudocode writing as well. Not bad if you know the algorithms that are covered in the lectures and make a decent note card.",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "8/21/2021 0:39:59",
        "What Course Did You Take?": "CS 290 - Web Development",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "0-5 hours",
        "What tips would you give students taking this course?": "This was revamped in 2021 summer. I’d say you get what you put in but it’s an easy A. Get an A in all of the assignments and you won’t even need to pass the final. Use office hours to your advantage if you’re stuck and you’re golden if you just wanna glide by. ",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/2/2021 22:13:55",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "I spent 92 hours on this class in a summer semester (so 11.5 hr/wk in accelerated summer, or 8.3 hr/wk in a normal 11 week semester). I didn't have much other programming experience, so I prepared for the class by spending 27 hours going through the written/video resources of the \"Python for Everybody\" course (skipping all of the problems, because I was going to do those in 161).  I felt like that was the perfect amount of prep, so going through the actual 161 course materials was actually pretty good review.  I honestly probably could've finished 161 about 30% faster if I wasn't so fixated on maximizing my grade. This class is an easy A because you can retake quizzes, and you're not graded on your code's efficiency, just whether or not it works.",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/4/2021 16:17:21",
        "What Course Did You Take?": "CS 161 - Intro to Computer Science I",
        "How hard was this class?": "3",
        "How much time did you spend on average (per week) for this class?": "13-18 hours",
        "What tips would you give students taking this course?": "",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/6/2021 6:20:23",
        "What Course Did You Take?": "CS 225 - Discrete Structures in Computer Science",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This class was a rude awakening for me - I spent 20-30 hours per week on it on average, sometimes more. It definitely felt like another full-time job. Be prepared - this class covers A LOT of material in a short period of time. It has been a while since I have taken a math course and I found some of the topics to be pretty challenging, but Professor Eshan and the ULAs were incredibly supportive and helpful. Since this class moves so fast through each topic I found it hard to retain everything and to go back and review mistakes I had made. \n\nMy advice:\n-Do the readings. DO THE READINGS. The professor doesn't cover everything in the lectures, and relies heavily on the book. \n-Don't take this class during the 8 week summer term. Just... don't do that to yourself.\n-Go to office hours. Ask questions. ULAs will help you if you're stuck, will tell you if your answer is correct, and will help to guide you through. This can help to save your grade, since homework is graded based on correctness.\n-The lectures aren't great, so I recommend supplementing with TrevTutor, Dr. Trefor Bazett, and Khan Academy videos on YouTube. (especially if you aren't great at absorbing material from reading)\n-Make sure you have enough time to commit to this class. I worked a full time job 40 hours per week, then spent 20-30 hours per week on this class, and then 3-6 hours on 161. If I didn't already have some background in python, 161 on top of everything else would have killed me. My life this semester was eat-sleep-work-study. Say goodbye to your social life.\n-Some of the discussion questions are stupid hard. Make sure you pick your questions as soon as possible so you don't get stuck with a crazy hard problem. If you're short on time you can just post an incomplete/incorrect answer to the discussion question, and then focus on getting it correct for when the correction post is due. This can help you to manage your time to get homework assignments done on time, and also helps you to prioritize based on the weight of the grades.  ",
        "When did you take this course?": "SP 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/14/2021 15:40:16",
        "What Course Did You Take?": "CS 361 - Software Engineering I",
        "How hard was this class?": "1",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class was really unique. First of all, you don't do any programming for the first 2 weeks. When you finally design a project, it's completely up to you what you want to do with it. You have to work in a team, and this is actually the worst part. You need to incorporate a teammate's microservice, and they need to successfully implement yours. If you have team members who basically don't exist, or don't do assignments, you may lose out on a chunk of your grade. If they can't figure out how to incorporate your microservice, you will also lose points. If they don't complete their microservice on time, and you need it, you'll still lose points. My recommendation is to find at least 1 team member in the group who is responsible and latch onto them for dear life. Turn in your sections on time, and offer lots of help if that teammate can't implement your microservice right away so that your grade isn't affected either. ",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "Yes",
        "Did You Take a Third Course This Quarter?": "No"
    },
    {
        "Timestamp": "9/19/2021 7:33:57",
        "What Course Did You Take?": "CS 162 - Intro to Computer Science II",
        "How hard was this class?": "2",
        "How much time did you spend on average (per week) for this class?": "6-12 hours",
        "What tips would you give students taking this course?": "This class focuses a lot on Object Oriented Programming (OOP) concepts - I would recommend reviewing OOP a bit before class starts. The first few assignments were on the lengthier side, requiring about 200-300 lines of code. I would also strongly recommend learning how to use the debugger in PyCharm- this will help you to become more effective at debugging and ultimately will save you a TON of time on assignments, especially the final project. I wish they included this as part of the curriculm. \n\nAs the semester progresses assignments get shorter and focus on other concepts, such as decorators, generators, JSON, etc. The recursion module in week 6 was a bit of a beast - make sure you allow enough time to work through this module. The final project is a different game each semester that you use OOP to create the backend for. All in all this was a solid class - I don't have much of a programming background but found it to be pretty straightforward. If you put in the effort to learn the concepts and debug/troubleshoot, this is a relatively easy A in my opinion. ",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    },
    {
        "Timestamp": "10/11/2021 23:40:28",
        "What Course Did You Take?": "CS 261 - Data Structures",
        "How hard was this class?": "5",
        "How much time did you spend on average (per week) for this class?": "18+ hours",
        "What tips would you give students taking this course?": "This course in the summer was BRUTAL. The assignments had way too many problems to be able to be finished in a week, and were a huge step up from CS162. Set aside a lot of time for the readings, some weeks had over 40 pages of reading to do, along with 2-3 wikipedia articles, and 2-5 exploration pages. Be ready to do some external research, since some problems require solutions not discussed at all anywhere in the explorations or the readings. ULAs are helpful, but vary by term. Randy is nice, but a stickler, and he won't make any exceptions. ",
        "When did you take this course?": "SU 2021",
        "Did You Take a Second Course This Quarter?": "No"
    }
]
